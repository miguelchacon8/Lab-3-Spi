

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:26:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     000D                     	;# 
   382     000E                     	;# 
   383     000E                     	;# 
   384     000F                     	;# 
   385     0010                     	;# 
   386     0011                     	;# 
   387     0012                     	;# 
   388     0013                     	;# 
   389     0014                     	;# 
   390     0015                     	;# 
   391     0015                     	;# 
   392     0016                     	;# 
   393     0017                     	;# 
   394     0018                     	;# 
   395     0019                     	;# 
   396     001A                     	;# 
   397     001B                     	;# 
   398     001B                     	;# 
   399     001C                     	;# 
   400     001D                     	;# 
   401     001E                     	;# 
   402     001F                     	;# 
   403     0081                     	;# 
   404     0085                     	;# 
   405     0086                     	;# 
   406     0087                     	;# 
   407     0088                     	;# 
   408     0089                     	;# 
   409     008C                     	;# 
   410     008D                     	;# 
   411     008E                     	;# 
   412     008F                     	;# 
   413     0090                     	;# 
   414     0091                     	;# 
   415     0092                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     0105                     	;# 
   432     0107                     	;# 
   433     0108                     	;# 
   434     0109                     	;# 
   435     010C                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     0185                     	;# 
   441     0187                     	;# 
   442     0188                     	;# 
   443     0189                     	;# 
   444     018C                     	;# 
   445     018D                     	;# 
   446     0000                     	;# 
   447     0001                     	;# 
   448     0002                     	;# 
   449     0003                     	;# 
   450     0004                     	;# 
   451     0005                     	;# 
   452     0006                     	;# 
   453     0007                     	;# 
   454     0008                     	;# 
   455     0009                     	;# 
   456     000A                     	;# 
   457     000B                     	;# 
   458     000C                     	;# 
   459     000D                     	;# 
   460     000E                     	;# 
   461     000E                     	;# 
   462     000F                     	;# 
   463     0010                     	;# 
   464     0011                     	;# 
   465     0012                     	;# 
   466     0013                     	;# 
   467     0014                     	;# 
   468     0015                     	;# 
   469     0015                     	;# 
   470     0016                     	;# 
   471     0017                     	;# 
   472     0018                     	;# 
   473     0019                     	;# 
   474     001A                     	;# 
   475     001B                     	;# 
   476     001B                     	;# 
   477     001C                     	;# 
   478     001D                     	;# 
   479     001E                     	;# 
   480     001F                     	;# 
   481     0081                     	;# 
   482     0085                     	;# 
   483     0086                     	;# 
   484     0087                     	;# 
   485     0088                     	;# 
   486     0089                     	;# 
   487     008C                     	;# 
   488     008D                     	;# 
   489     008E                     	;# 
   490     008F                     	;# 
   491     0090                     	;# 
   492     0091                     	;# 
   493     0092                     	;# 
   494     0093                     	;# 
   495     0093                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009C                     	;# 
   506     009D                     	;# 
   507     009E                     	;# 
   508     009F                     	;# 
   509     0105                     	;# 
   510     0107                     	;# 
   511     0108                     	;# 
   512     0109                     	;# 
   513     010C                     	;# 
   514     010C                     	;# 
   515     010D                     	;# 
   516     010E                     	;# 
   517     010F                     	;# 
   518     0185                     	;# 
   519     0187                     	;# 
   520     0188                     	;# 
   521     0189                     	;# 
   522     018C                     	;# 
   523     018D                     	;# 
   524     0000                     	;# 
   525     0001                     	;# 
   526     0002                     	;# 
   527     0003                     	;# 
   528     0004                     	;# 
   529     0005                     	;# 
   530     0006                     	;# 
   531     0007                     	;# 
   532     0008                     	;# 
   533     0009                     	;# 
   534     000A                     	;# 
   535     000B                     	;# 
   536     000C                     	;# 
   537     000D                     	;# 
   538     000E                     	;# 
   539     000E                     	;# 
   540     000F                     	;# 
   541     0010                     	;# 
   542     0011                     	;# 
   543     0012                     	;# 
   544     0013                     	;# 
   545     0014                     	;# 
   546     0015                     	;# 
   547     0015                     	;# 
   548     0016                     	;# 
   549     0017                     	;# 
   550     0018                     	;# 
   551     0019                     	;# 
   552     001A                     	;# 
   553     001B                     	;# 
   554     001B                     	;# 
   555     001C                     	;# 
   556     001D                     	;# 
   557     001E                     	;# 
   558     001F                     	;# 
   559     0081                     	;# 
   560     0085                     	;# 
   561     0086                     	;# 
   562     0087                     	;# 
   563     0088                     	;# 
   564     0089                     	;# 
   565     008C                     	;# 
   566     008D                     	;# 
   567     008E                     	;# 
   568     008F                     	;# 
   569     0090                     	;# 
   570     0091                     	;# 
   571     0092                     	;# 
   572     0093                     	;# 
   573     0093                     	;# 
   574     0093                     	;# 
   575     0094                     	;# 
   576     0095                     	;# 
   577     0096                     	;# 
   578     0097                     	;# 
   579     0098                     	;# 
   580     0099                     	;# 
   581     009A                     	;# 
   582     009B                     	;# 
   583     009C                     	;# 
   584     009D                     	;# 
   585     009E                     	;# 
   586     009F                     	;# 
   587     0105                     	;# 
   588     0107                     	;# 
   589     0108                     	;# 
   590     0109                     	;# 
   591     010C                     	;# 
   592     010C                     	;# 
   593     010D                     	;# 
   594     010E                     	;# 
   595     010F                     	;# 
   596     0185                     	;# 
   597     0187                     	;# 
   598     0188                     	;# 
   599     0189                     	;# 
   600     018C                     	;# 
   601     018D                     	;# 
   602     0005                     _PORTAbits	set	5
   603     0008                     _PORTDbits	set	8
   604     0013                     _SSPBUF	set	19
   605     0014                     _SSPCON	set	20
   606     000B                     _INTCONbits	set	11
   607     0006                     _PORTB	set	6
   608     0008                     _PORTD	set	8
   609     001E                     _ADRESH	set	30
   610     001F                     _ADCON0bits	set	31
   611     000C                     _PIR1bits	set	12
   612     0063                     _SSPIF	set	99
   613     0066                     _ADIF	set	102
   614     009F                     _ADCON1bits	set	159
   615     008F                     _OSCCONbits	set	143
   616     0088                     _TRISDbits	set	136
   617     0094                     _SSPSTATbits	set	148
   618     0094                     _SSPSTAT	set	148
   619     0085                     _TRISAbits	set	133
   620     008C                     _PIE1bits	set	140
   621     0088                     _TRISD	set	136
   622     043B                     _TRISC3	set	1083
   623     043D                     _TRISC5	set	1085
   624     0188                     _ANSELbits	set	392
   625     0189                     _ANSELH	set	393
   626     0188                     _ANSEL	set	392
   627                           
   628                           	psect	cinit
   629     000F                     start_initialization:	
   630                           ; #config settings
   631                           
   632     000F                     __initialization:
   633                           
   634                           ; Clear objects allocated to COMMON
   635     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   636     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   637     0011                     end_of_initialization:	
   638                           ;End of C runtime variable initialization code
   639                           
   640     0011                     __end_of__initialization:
   641     0011  0183               	clrf	3
   642     0012  120A  118A  28EA   	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	bssCOMMON
   645     0078                     __pbssCOMMON:
   646     0078                     _lecADC:
   647     0078                     	ds	1
   648     0079                     _temporal:
   649     0079                     	ds	1
   650                           
   651                           	psect	cstackCOMMON
   652     0070                     __pcstackCOMMON:
   653     0070                     ?_spiWrite:
   654     0070                     ??_spiWrite:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_setup:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_setupINTOSC:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_isr:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_main:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     spiWrite@dat:	
   670                           ; 1 bytes @ 0x0
   671                           
   672                           
   673                           ; 1 bytes @ 0x0
   674     0070                     	ds	1
   675     0071                     ??_isr:
   676                           
   677                           ; 1 bytes @ 0x1
   678     0071                     	ds	3
   679     0074                     ?_ADC_config:
   680     0074                     ??_setupINTOSC:	
   681                           ; 1 bytes @ 0x4
   682                           
   683     0074                     ?_ADC_read:	
   684                           ; 1 bytes @ 0x4
   685                           
   686     0074                     ?_spiInit:	
   687                           ; 1 bytes @ 0x4
   688                           
   689     0074                     spiInit@sDataSample:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     setupINTOSC@IRCF:	
   693                           ; 1 bytes @ 0x4
   694                           
   695     0074                     ADC_config@channel:	
   696                           ; 1 bytes @ 0x4
   697                           
   698     0074                     ADC_read@channel:	
   699                           ; 2 bytes @ 0x4
   700                           
   701                           
   702                           ; 2 bytes @ 0x4
   703     0074                     	ds	1
   704     0075                     spiInit@sClockIdle:
   705                           
   706                           ; 1 bytes @ 0x5
   707     0075                     	ds	1
   708     0076                     ??_ADC_config:
   709     0076                     ??_ADC_read:	
   710                           ; 1 bytes @ 0x6
   711                           
   712     0076                     spiInit@sTransmitEdge:	
   713                           ; 1 bytes @ 0x6
   714                           
   715                           
   716                           ; 1 bytes @ 0x6
   717     0076                     	ds	1
   718     0077                     ??_spiInit:
   719     0077                     spiInit@sType:	
   720                           ; 1 bytes @ 0x7
   721                           
   722                           
   723                           ; 1 bytes @ 0x7
   724     0077                     	ds	1
   725     0078                     ??_setup:
   726                           
   727                           	psect	cstackBANK0
   728     0020                     __pcstackBANK0:	
   729                           ; 1 bytes @ 0x8
   730                           
   731     0020                     ??_main:
   732                           
   733                           ; 1 bytes @ 0x0
   734     0020                     	ds	2
   735                           
   736                           	psect	maintext
   737     00EA                     __pmaintext:	
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 68 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : B00/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       2       0       0       0
   760 ;;      Totals:         0       2       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels required when called: 4
   763 ;; This function calls:
   764 ;;		_ADC_config
   765 ;;		_ADC_read
   766 ;;		_setup
   767 ;;		_setupINTOSC
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773     00EA                     _main:	
   774                           ;psect for function _main
   775                           
   776     00EA                     l1088:	
   777                           ;incstack = 0
   778                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   779                           
   780                           
   781                           ;main.c: 69:     setup();
   782     00EA  120A  118A  213D  120A  118A  	fcall	_setup
   783                           
   784                           ;main.c: 70:     ADC_config(0x01);
   785     00EF  3001               	movlw	1
   786     00F0  00F4               	movwf	ADC_config@channel
   787     00F1  3000               	movlw	0
   788     00F2  00F5               	movwf	ADC_config@channel+1
   789     00F3  120A  118A  2074  120A  118A  	fcall	_ADC_config
   790                           
   791                           ;main.c: 71:     setupINTOSC(6);
   792     00F8  3006               	movlw	6
   793     00F9  120A  118A  2015  120A  118A  	fcall	_setupINTOSC
   794     00FE                     l57:	
   795                           ;main.c: 75:     while(1){
   796                           
   797                           
   798                           ;main.c: 76:         ADC_read(0);
   799     00FE  3000               	movlw	0
   800     00FF  00F4               	movwf	ADC_read@channel
   801     0100  00F5               	movwf	ADC_read@channel+1
   802     0101  120A  118A  20B1  120A  118A  	fcall	_ADC_read
   803     0106                     l1090:
   804                           
   805                           ;main.c: 78:         _delay((unsigned long)((20)*(4000000/4000.0)));
   806     0106  301A               	movlw	26
   807     0107  1283               	bcf	3,5	;RP0=0, select bank0
   808     0108  1303               	bcf	3,6	;RP1=0, select bank0
   809     0109  00A1               	movwf	??_main+1
   810     010A  30F7               	movlw	247
   811     010B  00A0               	movwf	??_main
   812     010C                     u447:
   813     010C  0BA0               	decfsz	??_main,f
   814     010D  290C               	goto	u447
   815     010E  0BA1               	decfsz	??_main+1,f
   816     010F  290C               	goto	u447
   817     0110  2911               	nop2
   818     0111  28FE               	goto	l57
   819     0112  120A  118A  280C   	ljmp	start
   820     0115                     __end_of_main:
   821                           
   822                           	psect	text1
   823     0015                     __ptext1:	
   824 ;; *************** function _setupINTOSC *****************
   825 ;; Defined at:
   826 ;;		line 10 in file "oscilador.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  IRCF            1    wreg     unsigned char 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  IRCF            1    4[COMMON] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         1       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         1       0       0       0       0
   844 ;;Total ram usage:        1 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 2
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     0015                     _setupINTOSC:	
   855                           ;psect for function _setupINTOSC
   856                           
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   860                           ;setupINTOSC@IRCF stored from wreg
   861     0015  00F4               	movwf	setupINTOSC@IRCF
   862     0016                     l846:
   863                           
   864                           ;oscilador.c: 11:     if (IRCF == 7){
   865     0016  3007               	movlw	7
   866     0017  0674               	xorwf	setupINTOSC@IRCF,w
   867     0018  1D03               	btfss	3,2
   868     0019  281B               	goto	u91
   869     001A  281C               	goto	u90
   870     001B                     u91:
   871     001B  2820               	goto	l170
   872     001C                     u90:
   873     001C                     l848:
   874                           
   875                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   876     001C  3070               	movlw	112
   877     001D  1683               	bsf	3,5	;RP0=1, select bank1
   878     001E  1303               	bcf	3,6	;RP1=0, select bank1
   879     001F  048F               	iorwf	15,f	;volatile
   880     0020                     l170:	
   881                           ;oscilador.c: 13:     }
   882                           
   883                           
   884                           ;oscilador.c: 14:     if (IRCF == 6){
   885     0020  3006               	movlw	6
   886     0021  0674               	xorwf	setupINTOSC@IRCF,w
   887     0022  1D03               	btfss	3,2
   888     0023  2825               	goto	u101
   889     0024  2826               	goto	u100
   890     0025                     u101:
   891     0025  282C               	goto	l171
   892     0026                     u100:
   893     0026                     l850:
   894                           
   895                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   896     0026  1683               	bsf	3,5	;RP0=1, select bank1
   897     0027  1303               	bcf	3,6	;RP1=0, select bank1
   898     0028  080F               	movf	15,w	;volatile
   899     0029  398F               	andlw	-113
   900     002A  3860               	iorlw	96
   901     002B  008F               	movwf	15	;volatile
   902     002C                     l171:	
   903                           ;oscilador.c: 16:     }
   904                           
   905                           
   906                           ;oscilador.c: 17:     if (IRCF == 5){
   907     002C  3005               	movlw	5
   908     002D  0674               	xorwf	setupINTOSC@IRCF,w
   909     002E  1D03               	btfss	3,2
   910     002F  2831               	goto	u111
   911     0030  2832               	goto	u110
   912     0031                     u111:
   913     0031  2838               	goto	l172
   914     0032                     u110:
   915     0032                     l852:
   916                           
   917                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   918     0032  1683               	bsf	3,5	;RP0=1, select bank1
   919     0033  1303               	bcf	3,6	;RP1=0, select bank1
   920     0034  080F               	movf	15,w	;volatile
   921     0035  398F               	andlw	-113
   922     0036  3850               	iorlw	80
   923     0037  008F               	movwf	15	;volatile
   924     0038                     l172:	
   925                           ;oscilador.c: 19:     }
   926                           
   927                           
   928                           ;oscilador.c: 20:     if (IRCF == 4){
   929     0038  3004               	movlw	4
   930     0039  0674               	xorwf	setupINTOSC@IRCF,w
   931     003A  1D03               	btfss	3,2
   932     003B  283D               	goto	u121
   933     003C  283E               	goto	u120
   934     003D                     u121:
   935     003D  2844               	goto	l173
   936     003E                     u120:
   937     003E                     l854:
   938                           
   939                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   940     003E  1683               	bsf	3,5	;RP0=1, select bank1
   941     003F  1303               	bcf	3,6	;RP1=0, select bank1
   942     0040  080F               	movf	15,w	;volatile
   943     0041  398F               	andlw	-113
   944     0042  3840               	iorlw	64
   945     0043  008F               	movwf	15	;volatile
   946     0044                     l173:	
   947                           ;oscilador.c: 22:     }
   948                           
   949                           
   950                           ;oscilador.c: 23:     if (IRCF == 3){
   951     0044  3003               	movlw	3
   952     0045  0674               	xorwf	setupINTOSC@IRCF,w
   953     0046  1D03               	btfss	3,2
   954     0047  2849               	goto	u131
   955     0048  284A               	goto	u130
   956     0049                     u131:
   957     0049  2850               	goto	l174
   958     004A                     u130:
   959     004A                     l856:
   960                           
   961                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   962     004A  1683               	bsf	3,5	;RP0=1, select bank1
   963     004B  1303               	bcf	3,6	;RP1=0, select bank1
   964     004C  080F               	movf	15,w	;volatile
   965     004D  398F               	andlw	-113
   966     004E  3830               	iorlw	48
   967     004F  008F               	movwf	15	;volatile
   968     0050                     l174:	
   969                           ;oscilador.c: 25:     }
   970                           
   971                           
   972                           ;oscilador.c: 26:     if (IRCF == 2){
   973     0050  3002               	movlw	2
   974     0051  0674               	xorwf	setupINTOSC@IRCF,w
   975     0052  1D03               	btfss	3,2
   976     0053  2855               	goto	u141
   977     0054  2856               	goto	u140
   978     0055                     u141:
   979     0055  285C               	goto	l175
   980     0056                     u140:
   981     0056                     l858:
   982                           
   983                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   984     0056  1683               	bsf	3,5	;RP0=1, select bank1
   985     0057  1303               	bcf	3,6	;RP1=0, select bank1
   986     0058  080F               	movf	15,w	;volatile
   987     0059  398F               	andlw	-113
   988     005A  3820               	iorlw	32
   989     005B  008F               	movwf	15	;volatile
   990     005C                     l175:	
   991                           ;oscilador.c: 28:     }
   992                           
   993                           
   994                           ;oscilador.c: 29:     if (IRCF == 1){
   995     005C  0374               	decf	setupINTOSC@IRCF,w
   996     005D  1D03               	btfss	3,2
   997     005E  2860               	goto	u151
   998     005F  2861               	goto	u150
   999     0060                     u151:
  1000     0060  2867               	goto	l176
  1001     0061                     u150:
  1002     0061                     l860:
  1003                           
  1004                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1005     0061  1683               	bsf	3,5	;RP0=1, select bank1
  1006     0062  1303               	bcf	3,6	;RP1=0, select bank1
  1007     0063  080F               	movf	15,w	;volatile
  1008     0064  398F               	andlw	-113
  1009     0065  3810               	iorlw	16
  1010     0066  008F               	movwf	15	;volatile
  1011     0067                     l176:	
  1012                           ;oscilador.c: 31:     }
  1013                           
  1014                           
  1015                           ;oscilador.c: 32:     if (IRCF == 0){
  1016     0067  0874               	movf	setupINTOSC@IRCF,w
  1017     0068  1D03               	btfss	3,2
  1018     0069  286B               	goto	u161
  1019     006A  286C               	goto	u160
  1020     006B                     u161:
  1021     006B  2870               	goto	l864
  1022     006C                     u160:
  1023     006C                     l862:
  1024                           
  1025                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1026     006C  308F               	movlw	-113
  1027     006D  1683               	bsf	3,5	;RP0=1, select bank1
  1028     006E  1303               	bcf	3,6	;RP1=0, select bank1
  1029     006F  058F               	andwf	15,f	;volatile
  1030     0070                     l864:
  1031                           
  1032                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1033     0070  1683               	bsf	3,5	;RP0=1, select bank1
  1034     0071  1303               	bcf	3,6	;RP1=0, select bank1
  1035     0072  140F               	bsf	15,0	;volatile
  1036     0073                     l178:
  1037     0073  0008               	return
  1038     0074                     __end_of_setupINTOSC:
  1039                           
  1040                           	psect	text2
  1041     013D                     __ptext2:	
  1042 ;; *************** function _setup *****************
  1043 ;; Defined at:
  1044 ;;		line 85 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 3
  1065 ;; This function calls:
  1066 ;;		_spiInit
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072     013D                     _setup:	
  1073                           ;psect for function _setup
  1074                           
  1075     013D                     l1036:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;main.c: 86:     ANSEL = 0;
  1081     013D  1683               	bsf	3,5	;RP0=1, select bank3
  1082     013E  1703               	bsf	3,6	;RP1=1, select bank3
  1083     013F  0188               	clrf	8	;volatile
  1084                           
  1085                           ;main.c: 87:     ANSELH = 0;
  1086     0140  0189               	clrf	9	;volatile
  1087                           
  1088                           ;main.c: 90:     TRISD = 0;
  1089     0141  1683               	bsf	3,5	;RP0=1, select bank1
  1090     0142  1303               	bcf	3,6	;RP1=0, select bank1
  1091     0143  0188               	clrf	8	;volatile
  1092                           
  1093                           ;main.c: 92:     PORTB = 0;
  1094     0144  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0145  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0146  0186               	clrf	6	;volatile
  1097                           
  1098                           ;main.c: 93:     PORTD = 0;
  1099     0147  0188               	clrf	8	;volatile
  1100     0148                     l1038:
  1101                           
  1102                           ;main.c: 95:     INTCONbits.GIE = 1;
  1103     0148  178B               	bsf	11,7	;volatile
  1104     0149                     l1040:
  1105                           
  1106                           ;main.c: 96:     INTCONbits.PEIE = 1;
  1107     0149  170B               	bsf	11,6	;volatile
  1108     014A                     l1042:
  1109                           
  1110                           ;main.c: 97:     PIR1bits.SSPIF = 0;
  1111     014A  118C               	bcf	12,3	;volatile
  1112     014B                     l1044:
  1113                           
  1114                           ;main.c: 98:     PIE1bits.SSPIE = 1;
  1115     014B  1683               	bsf	3,5	;RP0=1, select bank1
  1116     014C  1303               	bcf	3,6	;RP1=0, select bank1
  1117     014D  158C               	bsf	12,3	;volatile
  1118     014E                     l1046:
  1119                           
  1120                           ;main.c: 99:     TRISAbits.TRISA5 = 1;
  1121     014E  1685               	bsf	5,5	;volatile
  1122     014F                     l1048:
  1123                           
  1124                           ;main.c: 100:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1125     014F  01F4               	clrf	spiInit@sDataSample
  1126     0150  01F5               	clrf	spiInit@sClockIdle
  1127     0151  01F6               	clrf	spiInit@sTransmitEdge
  1128     0152  3024               	movlw	36
  1129     0153  120A  118A  2159  120A  118A  	fcall	_spiInit
  1130     0158                     l63:
  1131     0158  0008               	return
  1132     0159                     __end_of_setup:
  1133                           
  1134                           	psect	text3
  1135     0159                     __ptext3:	
  1136 ;; *************** function _spiInit *****************
  1137 ;; Defined at:
  1138 ;;		line 12 in file "SPI.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  sType           1    wreg     enum E1292
  1141 ;;  sDataSample     1    4[COMMON] enum E1300
  1142 ;;  sClockIdle      1    5[COMMON] enum E1304
  1143 ;;  sTransmitEdg    1    6[COMMON] enum E1308
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  sType           1    7[COMMON] enum E1292
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         3       0       0       0       0
  1156 ;;      Locals:         1       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0
  1158 ;;      Totals:         4       0       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_setup
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169     0159                     _spiInit:	
  1170                           ;psect for function _spiInit
  1171                           
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1175                           ;spiInit@sType stored from wreg
  1176     0159  00F7               	movwf	spiInit@sType
  1177     015A                     l1026:
  1178                           
  1179                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1180     015A  1683               	bsf	3,5	;RP0=1, select bank1
  1181     015B  1303               	bcf	3,6	;RP1=0, select bank1
  1182     015C  1287               	bcf	7,5	;volatile
  1183                           
  1184                           ;SPI.c: 15:     if(sType & 0b00000100)
  1185     015D  1D77               	btfss	spiInit@sType,2
  1186     015E  2960               	goto	u371
  1187     015F  2961               	goto	u370
  1188     0160                     u371:
  1189     0160  2965               	goto	l1032
  1190     0161                     u370:
  1191     0161                     l1028:
  1192                           
  1193                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1194     0161  0876               	movf	spiInit@sTransmitEdge,w
  1195     0162  0094               	movwf	20	;volatile
  1196     0163                     l1030:
  1197                           
  1198                           ;SPI.c: 18:         TRISC3 = 1;
  1199     0163  1587               	bsf	7,3	;volatile
  1200                           
  1201                           ;SPI.c: 19:     }
  1202     0164  2969               	goto	l79
  1203     0165                     l1032:
  1204                           
  1205                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1206     0165  0874               	movf	spiInit@sDataSample,w
  1207     0166  0476               	iorwf	spiInit@sTransmitEdge,w
  1208     0167  0094               	movwf	20	;volatile
  1209     0168                     l1034:
  1210                           
  1211                           ;SPI.c: 23:         TRISC3 = 0;
  1212     0168  1187               	bcf	7,3	;volatile
  1213     0169                     l79:	
  1214                           ;SPI.c: 24:     }
  1215                           
  1216                           
  1217                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1218     0169  0877               	movf	spiInit@sType,w
  1219     016A  0475               	iorwf	spiInit@sClockIdle,w
  1220     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1221     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1222     016D  0094               	movwf	20	;volatile
  1223     016E                     l80:
  1224     016E  0008               	return
  1225     016F                     __end_of_spiInit:
  1226                           
  1227                           	psect	text4
  1228     00B1                     __ptext4:	
  1229 ;; *************** function _ADC_read *****************
  1230 ;; Defined at:
  1231 ;;		line 44 in file "setupADC.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  channel         2    4[COMMON] int 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         2       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          1       0       0       0       0
  1248 ;;      Totals:         3       0       0       0       0
  1249 ;;Total ram usage:        3 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 2
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259     00B1                     _ADC_read:	
  1260                           ;psect for function _ADC_read
  1261                           
  1262     00B1                     l1060:	
  1263                           ;incstack = 0
  1264                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1265                           
  1266                           
  1267                           ;setupADC.c: 45:     if(channel ==0){
  1268     00B1  0874               	movf	ADC_read@channel,w
  1269     00B2  0475               	iorwf	ADC_read@channel+1,w
  1270     00B3  1D03               	btfss	3,2
  1271     00B4  28B6               	goto	u411
  1272     00B5  28B7               	goto	u410
  1273     00B6                     u411:
  1274     00B6  28C2               	goto	l1068
  1275     00B7                     u410:
  1276     00B7                     l1062:
  1277                           
  1278                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  1279     00B7  30C3               	movlw	-61
  1280     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1281     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1282     00BA  059F               	andwf	31,f	;volatile
  1283     00BB                     l1064:
  1284                           
  1285                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1286     00BB  3008               	movlw	8
  1287     00BC  00F6               	movwf	??_ADC_read
  1288     00BD                     u457:
  1289     00BD  0BF6               	decfsz	??_ADC_read,f
  1290     00BE  28BD               	goto	u457
  1291     00BF                     l1066:
  1292                           
  1293                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  1294     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1295     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1296     00C1  149F               	bsf	31,1	;volatile
  1297     00C2                     l1068:
  1298                           
  1299                           ;setupADC.c: 50:     if(channel ==1){
  1300     00C2  0374               	decf	ADC_read@channel,w
  1301     00C3  0475               	iorwf	ADC_read@channel+1,w
  1302     00C4  1D03               	btfss	3,2
  1303     00C5  28C7               	goto	u421
  1304     00C6  28C8               	goto	u420
  1305     00C7                     u421:
  1306     00C7  28D5               	goto	l1076
  1307     00C8                     u420:
  1308     00C8                     l1070:
  1309                           
  1310                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  1311     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1312     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1313     00CA  081F               	movf	31,w	;volatile
  1314     00CB  39C3               	andlw	-61
  1315     00CC  3804               	iorlw	4
  1316     00CD  009F               	movwf	31	;volatile
  1317     00CE                     l1072:
  1318                           
  1319                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1320     00CE  3008               	movlw	8
  1321     00CF  00F6               	movwf	??_ADC_read
  1322     00D0                     u467:
  1323     00D0  0BF6               	decfsz	??_ADC_read,f
  1324     00D1  28D0               	goto	u467
  1325     00D2                     l1074:
  1326                           
  1327                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  1328     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1329     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1330     00D4  149F               	bsf	31,1	;volatile
  1331     00D5                     l1076:
  1332                           
  1333                           ;setupADC.c: 55:     if(channel ==2){
  1334     00D5  3002               	movlw	2
  1335     00D6  0674               	xorwf	ADC_read@channel,w
  1336     00D7  0475               	iorwf	ADC_read@channel+1,w
  1337     00D8  1D03               	btfss	3,2
  1338     00D9  28DB               	goto	u431
  1339     00DA  28DC               	goto	u430
  1340     00DB                     u431:
  1341     00DB  28E9               	goto	l208
  1342     00DC                     u430:
  1343     00DC                     l1078:
  1344                           
  1345                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  1346     00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1347     00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1348     00DE  081F               	movf	31,w	;volatile
  1349     00DF  39C3               	andlw	-61
  1350     00E0  3808               	iorlw	8
  1351     00E1  009F               	movwf	31	;volatile
  1352     00E2                     l1080:
  1353                           
  1354                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1355     00E2  3008               	movlw	8
  1356     00E3  00F6               	movwf	??_ADC_read
  1357     00E4                     u477:
  1358     00E4  0BF6               	decfsz	??_ADC_read,f
  1359     00E5  28E4               	goto	u477
  1360     00E6                     l1082:
  1361                           
  1362                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  1363     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1364     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1365     00E8  149F               	bsf	31,1	;volatile
  1366     00E9                     l208:
  1367     00E9  0008               	return
  1368     00EA                     __end_of_ADC_read:
  1369                           
  1370                           	psect	text5
  1371     0074                     __ptext5:	
  1372 ;; *************** function _ADC_config *****************
  1373 ;; Defined at:
  1374 ;;		line 11 in file "setupADC.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  channel         2    4[COMMON] int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         2       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          1       0       0       0       0
  1391 ;;      Totals:         3       0       0       0       0
  1392 ;;Total ram usage:        3 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 2
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     0074                     _ADC_config:	
  1403                           ;psect for function _ADC_config
  1404                           
  1405     0074                     l1050:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _ADC_config: [wreg]
  1408                           
  1409                           
  1410                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1411     0074  1C74               	btfss	ADC_config@channel,0
  1412     0075  2877               	goto	u381
  1413     0076  2878               	goto	u380
  1414     0077                     u381:
  1415     0077  2881               	goto	l199
  1416     0078                     u380:
  1417     0078                     l1052:
  1418                           
  1419                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1420     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1421     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1422     007A  1005               	bcf	5,0	;volatile
  1423                           
  1424                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1425     007B  1683               	bsf	3,5	;RP0=1, select bank1
  1426     007C  1303               	bcf	3,6	;RP1=0, select bank1
  1427     007D  1405               	bsf	5,0	;volatile
  1428                           
  1429                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1430     007E  1683               	bsf	3,5	;RP0=1, select bank3
  1431     007F  1703               	bsf	3,6	;RP1=1, select bank3
  1432     0080  1408               	bsf	8,0	;volatile
  1433     0081                     l199:	
  1434                           ;setupADC.c: 16:     }
  1435                           
  1436                           
  1437                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1438     0081  1CF4               	btfss	ADC_config@channel,1
  1439     0082  2884               	goto	u391
  1440     0083  2885               	goto	u390
  1441     0084                     u391:
  1442     0084  288E               	goto	l200
  1443     0085                     u390:
  1444     0085                     l1054:
  1445                           
  1446                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1447     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0087  1085               	bcf	5,1	;volatile
  1450                           
  1451                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1452     0088  1683               	bsf	3,5	;RP0=1, select bank1
  1453     0089  1303               	bcf	3,6	;RP1=0, select bank1
  1454     008A  1485               	bsf	5,1	;volatile
  1455                           
  1456                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1457     008B  1683               	bsf	3,5	;RP0=1, select bank3
  1458     008C  1703               	bsf	3,6	;RP1=1, select bank3
  1459     008D  1488               	bsf	8,1	;volatile
  1460     008E                     l200:	
  1461                           ;setupADC.c: 22:     }
  1462                           
  1463                           
  1464                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1465     008E  1D74               	btfss	ADC_config@channel,2
  1466     008F  2891               	goto	u401
  1467     0090  2892               	goto	u400
  1468     0091                     u401:
  1469     0091  289B               	goto	l201
  1470     0092                     u400:
  1471     0092                     l1056:
  1472                           
  1473                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1474     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1476     0094  1105               	bcf	5,2	;volatile
  1477                           
  1478                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1479     0095  1683               	bsf	3,5	;RP0=1, select bank1
  1480     0096  1303               	bcf	3,6	;RP1=0, select bank1
  1481     0097  1505               	bsf	5,2	;volatile
  1482                           
  1483                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1484     0098  1683               	bsf	3,5	;RP0=1, select bank3
  1485     0099  1703               	bsf	3,6	;RP1=1, select bank3
  1486     009A  1508               	bsf	8,2	;volatile
  1487     009B                     l201:	
  1488                           ;setupADC.c: 27:     }
  1489                           
  1490                           
  1491                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  1492     009B  170B               	bsf	11,6	;volatile
  1493                           
  1494                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  1495     009C  1683               	bsf	3,5	;RP0=1, select bank1
  1496     009D  1303               	bcf	3,6	;RP1=0, select bank1
  1497     009E  170C               	bsf	12,6	;volatile
  1498                           
  1499                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  1500     009F  1283               	bcf	3,5	;RP0=0, select bank0
  1501     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1502     00A1  130C               	bcf	12,6	;volatile
  1503                           
  1504                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  1505     00A2  139F               	bcf	31,7	;volatile
  1506                           
  1507                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  1508     00A3  171F               	bsf	31,6	;volatile
  1509                           
  1510                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  1511     00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1512     00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1513     00A6  129F               	bcf	31,5	;volatile
  1514                           
  1515                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  1516     00A7  121F               	bcf	31,4	;volatile
  1517                           
  1518                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  1519     00A8  139F               	bcf	31,7	;volatile
  1520                           
  1521                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  1522     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1523     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1524     00AB  141F               	bsf	31,0	;volatile
  1525     00AC                     l1058:
  1526                           
  1527                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  1528     00AC  3008               	movlw	8
  1529     00AD  00F6               	movwf	??_ADC_config
  1530     00AE                     u487:
  1531     00AE  0BF6               	decfsz	??_ADC_config,f
  1532     00AF  28AE               	goto	u487
  1533     00B0                     l202:
  1534     00B0  0008               	return
  1535     00B1                     __end_of_ADC_config:
  1536                           
  1537                           	psect	text6
  1538     0115                     __ptext6:	
  1539 ;; *************** function _isr *****************
  1540 ;; Defined at:
  1541 ;;		line 49 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0
  1557 ;;      Temps:          3       0       0       0       0
  1558 ;;      Totals:         3       0       0       0       0
  1559 ;;Total ram usage:        3 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		_spiWrite
  1564 ;; This function is called by:
  1565 ;;		Interrupt level 1
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     0115                     _isr:	
  1570                           ;psect for function _isr
  1571                           
  1572     0115                     i1l924:
  1573                           
  1574                           ;main.c: 52:     if(PIR1bits.ADIF){
  1575     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1576     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1577     0117  1F0C               	btfss	12,6	;volatile
  1578     0118  291A               	goto	u22_21
  1579     0119  291B               	goto	u22_20
  1580     011A                     u22_21:
  1581     011A  2929               	goto	i1l932
  1582     011B                     u22_20:
  1583     011B                     i1l926:
  1584                           
  1585                           ;main.c: 53:         if(ADCON0bits.CHS == 0){
  1586     011B  0C1F               	rrf	31,w	;volatile
  1587     011C  00F1               	movwf	??_isr
  1588     011D  0C71               	rrf	??_isr,w
  1589     011E  390F               	andlw	15
  1590     011F  3A00               	xorlw	0
  1591     0120  1D03               	skipz
  1592     0121  2923               	goto	u23_21
  1593     0122  2924               	goto	u23_20
  1594     0123                     u23_21:
  1595     0123  2928               	goto	i1l930
  1596     0124                     u23_20:
  1597     0124                     i1l928:
  1598                           
  1599                           ;main.c: 54:             lecADC = ADRESH;
  1600     0124  081E               	movf	30,w	;volatile
  1601     0125  00F8               	movwf	_lecADC
  1602                           
  1603                           ;main.c: 55:             PORTD = ADRESH;
  1604     0126  081E               	movf	30,w	;volatile
  1605     0127  0088               	movwf	8	;volatile
  1606     0128                     i1l930:
  1607                           
  1608                           ;main.c: 57:         ADIF = 0;
  1609     0128  130C               	bcf	12,6	;volatile
  1610     0129                     i1l932:
  1611                           
  1612                           ;main.c: 60:     if(SSPIF == 1){
  1613     0129  1D8C               	btfss	12,3	;volatile
  1614     012A  292C               	goto	u24_21
  1615     012B  292D               	goto	u24_20
  1616     012C                     u24_21:
  1617     012C  2936               	goto	i1l52
  1618     012D                     u24_20:
  1619     012D                     i1l934:
  1620                           
  1621                           ;main.c: 61:         spiWrite(lecADC);
  1622     012D  0878               	movf	_lecADC,w
  1623     012E  120A  118A  216F  120A  118A  	fcall	_spiWrite
  1624     0133                     i1l936:
  1625                           
  1626                           ;main.c: 62:         SSPIF = 0;
  1627     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1628     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1629     0135  118C               	bcf	12,3	;volatile
  1630     0136                     i1l52:
  1631     0136  0873               	movf	??_isr+2,w
  1632     0137  008A               	movwf	10
  1633     0138  0E72               	swapf	??_isr+1,w
  1634     0139  0083               	movwf	3
  1635     013A  0EFE               	swapf	btemp,f
  1636     013B  0E7E               	swapf	btemp,w
  1637     013C  0009               	retfie
  1638     013D                     __end_of_isr:
  1639                           
  1640                           	psect	intentry
  1641     0004                     __pintentry:	
  1642                           ;incstack = 0
  1643                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1644                           
  1645     0004                     interrupt_function:
  1646     007E                     saved_w	set	btemp
  1647     0004  00FE               	movwf	btemp
  1648     0005  0E03               	swapf	3,w
  1649     0006  00F2               	movwf	??_isr+1
  1650     0007  080A               	movf	10,w
  1651     0008  00F3               	movwf	??_isr+2
  1652     0009  120A  118A  2915   	ljmp	_isr
  1653                           
  1654                           	psect	text7
  1655     016F                     __ptext7:	
  1656 ;; *************** function _spiWrite *****************
  1657 ;; Defined at:
  1658 ;;		line 34 in file "SPI.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  dat             1    wreg     unsigned char 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  dat             1    0[COMMON] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         1       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         1       0       0       0       0
  1676 ;;Total ram usage:        1 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_isr
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685     016F                     _spiWrite:	
  1686                           ;psect for function _spiWrite
  1687                           
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _spiWrite: [wreg]
  1691                           ;spiWrite@dat stored from wreg
  1692     016F  00F0               	movwf	spiWrite@dat
  1693     0170                     i1l820:
  1694                           
  1695                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1696     0170  0870               	movf	spiWrite@dat,w
  1697     0171  1283               	bcf	3,5	;RP0=0, select bank0
  1698     0172  1303               	bcf	3,6	;RP1=0, select bank0
  1699     0173  0093               	movwf	19	;volatile
  1700     0174                     i1l89:
  1701     0174  0008               	return
  1702     0175                     __end_of_spiWrite:
  1703     007E                     btemp	set	126	;btemp
  1704     007E                     wtemp0	set	126
  1705                           
  1706                           	psect	idloc
  1707                           
  1708                           ;Config register IDLOC0 @ 0x2000
  1709                           ;	unspecified, using default values
  1710     2000                     	org	8192
  1711     2000  3FFF               	dw	16383
  1712                           
  1713                           ;Config register IDLOC1 @ 0x2001
  1714                           ;	unspecified, using default values
  1715     2001                     	org	8193
  1716     2001  3FFF               	dw	16383
  1717                           
  1718                           ;Config register IDLOC2 @ 0x2002
  1719                           ;	unspecified, using default values
  1720     2002                     	org	8194
  1721     2002  3FFF               	dw	16383
  1722                           
  1723                           ;Config register IDLOC3 @ 0x2003
  1724                           ;	unspecified, using default values
  1725     2003                     	org	8195
  1726     2003  3FFF               	dw	16383
  1727                           
  1728                           	psect	config
  1729                           
  1730                           ;Config register CONFIG1 @ 0x2007
  1731                           ;	Oscillator Selection bits
  1732                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1733                           ;	Watchdog Timer Enable bit
  1734                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1735                           ;	Power-up Timer Enable bit
  1736                           ;	PWRTE = OFF, PWRT disabled
  1737                           ;	RE3/MCLR pin function select bit
  1738                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1739                           ;	Code Protection bit
  1740                           ;	CP = OFF, Program memory code protection is disabled
  1741                           ;	Data Code Protection bit
  1742                           ;	CPD = OFF, Data memory code protection is disabled
  1743                           ;	Brown Out Reset Selection bits
  1744                           ;	BOREN = OFF, BOR disabled
  1745                           ;	Internal External Switchover bit
  1746                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1747                           ;	Fail-Safe Clock Monitor Enabled bit
  1748                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1749                           ;	Low Voltage Programming Enable bit
  1750                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1751                           ;	In-Circuit Debugger Mode bit
  1752                           ;	DEBUG = 0x1, unprogrammed default
  1753     2007                     	org	8199
  1754     2007  20D6               	dw	8406
  1755                           
  1756                           ;Config register CONFIG2 @ 0x2008
  1757                           ;	Brown-out Reset Selection bit
  1758                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1759                           ;	Flash Program Memory Self Write Enable bits
  1760                           ;	WRT = OFF, Write protection off
  1761     2008                     	org	8200
  1762     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     764
                                              0 BANK0      2     2      0
                         _ADC_config
                           _ADC_read
                              _setup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     142
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _setup
     _spiInit
   _setupINTOSC

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:26:26 2023

            _SSPSTATbits 0094                       l63 0158                       l80 016E  
                     l57 00FE                       l79 0169                       u90 001C  
                     u91 001B                      l200 008E                      l201 009B  
                    l202 00B0                      l208 00E9                      l170 0020  
                    l171 002C                      l172 0038                      l173 0044  
                    l174 0050                      l175 005C                      l176 0067  
                    l178 0073                      l199 0081                      l850 0026  
                    l860 0061                      l852 0032                      l862 006C  
                    l854 003E                      l846 0016                      l864 0070  
                    l856 004A                      l848 001C                      l858 0056  
                    u100 0026                      u101 0025                      u110 0032  
                    u111 0031                      u120 003E                      u121 003D  
                    u130 004A                      u131 0049                      u140 0056  
                    u141 0055                      u150 0061                      u151 0060  
                    u400 0092                      u160 006C                      u401 0091  
                    u161 006B                      u410 00B7                      u411 00B6  
                    u420 00C8                      u421 00C7                      u430 00DC  
                    u431 00DB                      u370 0161                      u371 0160  
                    u380 0078                      u381 0077                      u390 0085  
                    u391 0084                      u447 010C                      u457 00BD  
                    u467 00D0                      u477 00E4                      u487 00AE  
                    _isr 0115                     l1030 0163                     l1032 0165  
                   l1040 0149                     l1050 0074                     l1034 0168  
                   l1026 015A                     l1042 014A                     l1052 0078  
                   l1060 00B1                     l1028 0161                     l1044 014B  
                   l1036 013D                     l1054 0085                     l1070 00C8  
                   l1062 00B7                     l1046 014E                     l1038 0148  
                   l1056 0092                     l1080 00E2                     l1072 00CE  
                   l1064 00BB                     l1048 014F                     l1058 00AC  
                   l1082 00E6                     l1074 00D2                     l1066 00BF  
                   l1090 0106                     l1076 00D5                     l1068 00C2  
                   l1078 00DC                     l1088 00EA                     _ADIF 0066  
                   ?_isr 0070                     i1l52 0136                     i1l89 0174  
                   _main 00EA                     btemp 007E                     start 000C  
       __end_of_ADC_read 00EA                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l820 0170                    i1l930 0128  
                  i1l932 0129                    i1l924 0115                    i1l934 012D  
                  i1l926 011B                    i1l936 0133                    i1l928 0124  
                  u22_20 011B                    u22_21 011A                    u23_20 0124  
                  u23_21 0123                    u24_20 012D                    u24_21 012C  
                  _PORTB 0006                    _PORTD 0008                    _TRISD 0088  
                  _SSPIF 0063                    _setup 013D                    pclath 000A  
        __end_of_spiInit 016F                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0115                   ??_main 0020  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013             ??_ADC_config 0076                   _lecADC 0078  
           ?_setupINTOSC 0070                   saved_w 007E         __end_of_spiWrite 0175  
              ??_spiInit 0077                ?_ADC_read 0074       __end_of_ADC_config 00B1  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0159  
        ADC_read@channel 0074               ??_ADC_read 0076                  ??_setup 0078  
             __pmaintext 00EA               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0015  
                __ptext2 013D                  __ptext3 0159                  __ptext4 00B1  
                __ptext5 0074                  __ptext6 0115                  __ptext7 016F  
                _spiInit 0159     end_of_initialization 0011               ??_spiWrite 0070  
              _PORTAbits 0005                _PORTDbits 0008                _TRISAbits 0085  
              _TRISDbits 0088              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 013D        ADC_config@channel 0074              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020          setupINTOSC@IRCF 0074  
               ?_spiInit 0074                 _ADC_read 00B1     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ??_setupINTOSC 0074               _ADC_config 0074      __end_of_setupINTOSC 0074  
               _temporal 0079                 _spiWrite 016F             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              ?_ADC_config 0074              _setupINTOSC 0015  
