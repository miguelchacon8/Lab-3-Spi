

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 00:21:06 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384     0000                     	;# 
   385     0001                     	;# 
   386     0002                     	;# 
   387     0003                     	;# 
   388     0004                     	;# 
   389     0005                     	;# 
   390     0006                     	;# 
   391     0007                     	;# 
   392     0008                     	;# 
   393     0009                     	;# 
   394     000A                     	;# 
   395     000B                     	;# 
   396     000C                     	;# 
   397     000D                     	;# 
   398     000E                     	;# 
   399     000E                     	;# 
   400     000F                     	;# 
   401     0010                     	;# 
   402     0011                     	;# 
   403     0012                     	;# 
   404     0013                     	;# 
   405     0014                     	;# 
   406     0015                     	;# 
   407     0015                     	;# 
   408     0016                     	;# 
   409     0017                     	;# 
   410     0018                     	;# 
   411     0019                     	;# 
   412     001A                     	;# 
   413     001B                     	;# 
   414     001B                     	;# 
   415     001C                     	;# 
   416     001D                     	;# 
   417     001E                     	;# 
   418     001F                     	;# 
   419     0081                     	;# 
   420     0085                     	;# 
   421     0086                     	;# 
   422     0087                     	;# 
   423     0088                     	;# 
   424     0089                     	;# 
   425     008C                     	;# 
   426     008D                     	;# 
   427     008E                     	;# 
   428     008F                     	;# 
   429     0090                     	;# 
   430     0091                     	;# 
   431     0092                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0094                     	;# 
   436     0095                     	;# 
   437     0096                     	;# 
   438     0097                     	;# 
   439     0098                     	;# 
   440     0099                     	;# 
   441     009A                     	;# 
   442     009B                     	;# 
   443     009C                     	;# 
   444     009D                     	;# 
   445     009E                     	;# 
   446     009F                     	;# 
   447     0105                     	;# 
   448     0107                     	;# 
   449     0108                     	;# 
   450     0109                     	;# 
   451     010C                     	;# 
   452     010C                     	;# 
   453     010D                     	;# 
   454     010E                     	;# 
   455     010F                     	;# 
   456     0185                     	;# 
   457     0187                     	;# 
   458     0188                     	;# 
   459     0189                     	;# 
   460     018C                     	;# 
   461     018D                     	;# 
   462     0000                     	;# 
   463     0001                     	;# 
   464     0002                     	;# 
   465     0003                     	;# 
   466     0004                     	;# 
   467     0005                     	;# 
   468     0006                     	;# 
   469     0007                     	;# 
   470     0008                     	;# 
   471     0009                     	;# 
   472     000A                     	;# 
   473     000B                     	;# 
   474     000C                     	;# 
   475     000D                     	;# 
   476     000E                     	;# 
   477     000E                     	;# 
   478     000F                     	;# 
   479     0010                     	;# 
   480     0011                     	;# 
   481     0012                     	;# 
   482     0013                     	;# 
   483     0014                     	;# 
   484     0015                     	;# 
   485     0015                     	;# 
   486     0016                     	;# 
   487     0017                     	;# 
   488     0018                     	;# 
   489     0019                     	;# 
   490     001A                     	;# 
   491     001B                     	;# 
   492     001B                     	;# 
   493     001C                     	;# 
   494     001D                     	;# 
   495     001E                     	;# 
   496     001F                     	;# 
   497     0081                     	;# 
   498     0085                     	;# 
   499     0086                     	;# 
   500     0087                     	;# 
   501     0088                     	;# 
   502     0089                     	;# 
   503     008C                     	;# 
   504     008D                     	;# 
   505     008E                     	;# 
   506     008F                     	;# 
   507     0090                     	;# 
   508     0091                     	;# 
   509     0092                     	;# 
   510     0093                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0094                     	;# 
   514     0095                     	;# 
   515     0096                     	;# 
   516     0097                     	;# 
   517     0098                     	;# 
   518     0099                     	;# 
   519     009A                     	;# 
   520     009B                     	;# 
   521     009C                     	;# 
   522     009D                     	;# 
   523     009E                     	;# 
   524     009F                     	;# 
   525     0105                     	;# 
   526     0107                     	;# 
   527     0108                     	;# 
   528     0109                     	;# 
   529     010C                     	;# 
   530     010C                     	;# 
   531     010D                     	;# 
   532     010E                     	;# 
   533     010F                     	;# 
   534     0185                     	;# 
   535     0187                     	;# 
   536     0188                     	;# 
   537     0189                     	;# 
   538     018C                     	;# 
   539     018D                     	;# 
   540     0000                     	;# 
   541     0001                     	;# 
   542     0002                     	;# 
   543     0003                     	;# 
   544     0004                     	;# 
   545     0005                     	;# 
   546     0006                     	;# 
   547     0007                     	;# 
   548     0008                     	;# 
   549     0009                     	;# 
   550     000A                     	;# 
   551     000B                     	;# 
   552     000C                     	;# 
   553     000D                     	;# 
   554     000E                     	;# 
   555     000E                     	;# 
   556     000F                     	;# 
   557     0010                     	;# 
   558     0011                     	;# 
   559     0012                     	;# 
   560     0013                     	;# 
   561     0014                     	;# 
   562     0015                     	;# 
   563     0015                     	;# 
   564     0016                     	;# 
   565     0017                     	;# 
   566     0018                     	;# 
   567     0019                     	;# 
   568     001A                     	;# 
   569     001B                     	;# 
   570     001B                     	;# 
   571     001C                     	;# 
   572     001D                     	;# 
   573     001E                     	;# 
   574     001F                     	;# 
   575     0081                     	;# 
   576     0085                     	;# 
   577     0086                     	;# 
   578     0087                     	;# 
   579     0088                     	;# 
   580     0089                     	;# 
   581     008C                     	;# 
   582     008D                     	;# 
   583     008E                     	;# 
   584     008F                     	;# 
   585     0090                     	;# 
   586     0091                     	;# 
   587     0092                     	;# 
   588     0093                     	;# 
   589     0093                     	;# 
   590     0093                     	;# 
   591     0094                     	;# 
   592     0095                     	;# 
   593     0096                     	;# 
   594     0097                     	;# 
   595     0098                     	;# 
   596     0099                     	;# 
   597     009A                     	;# 
   598     009B                     	;# 
   599     009C                     	;# 
   600     009D                     	;# 
   601     009E                     	;# 
   602     009F                     	;# 
   603     0105                     	;# 
   604     0107                     	;# 
   605     0108                     	;# 
   606     0109                     	;# 
   607     010C                     	;# 
   608     010C                     	;# 
   609     010D                     	;# 
   610     010E                     	;# 
   611     010F                     	;# 
   612     0185                     	;# 
   613     0187                     	;# 
   614     0188                     	;# 
   615     0189                     	;# 
   616     018C                     	;# 
   617     018D                     	;# 
   618                           
   619                           	psect	strings
   620     0003                     __pstrings:
   621     0003                     stringtab:
   622     0003                     __stringtab:
   623                           
   624                           ;	String table - string pointers are 1 byte each
   625     0003  1BFF               	btfsc	btemp+1,7
   626     0004  280D               	ljmp	stringcode
   627     0005  1383               	bcf	3,7
   628     0006  187F               	btfsc	btemp+1,0
   629     0007  1783               	bsf	3,7
   630     0008  0800               	movf	0,w
   631     0009  0A84               	incf	4,f
   632     000A  1903               	skipnz
   633     000B  0AFF               	incf	btemp+1,f
   634     000C  0008               	return
   635     000D                     stringcode:
   636     000D                     stringdir:
   637     000D  3000               	movlw	high stringdir
   638     000E  008A               	movwf	10
   639     000F  0804               	movf	4,w
   640     0010  0A84               	incf	4,f
   641     0011  0782               	addwf	2,f
   642     0012                     __stringbase:
   643     0012  3400               	retlw	0
   644     0013                     __end_of__stringtab:
   645     0013                     _dpowers:
   646     0013  3401               	retlw	1
   647     0014  3400               	retlw	0
   648     0015  340A               	retlw	10
   649     0016  3400               	retlw	0
   650     0017  3464               	retlw	100
   651     0018  3400               	retlw	0
   652     0019  34E8               	retlw	232
   653     001A  3403               	retlw	3
   654     001B  3410               	retlw	16
   655     001C  3427               	retlw	39
   656     001D                     __end_of_dpowers:
   657     001F                     _ADCON0bits	set	31
   658     000C                     _PIR1bits	set	12
   659     000B                     _INTCONbits	set	11
   660     0005                     _PORTAbits	set	5
   661     0008                     _PORTDbits	set	8
   662     0013                     _SSPBUF	set	19
   663     0014                     _SSPCON	set	20
   664     0009                     _PORTE	set	9
   665     0008                     _PORTD	set	8
   666     0006                     _PORTB	set	6
   667     0005                     _PORTA	set	5
   668     0007                     _PORTCbits	set	7
   669     009F                     _ADCON1bits	set	159
   670     008C                     _PIE1bits	set	140
   671     0085                     _TRISAbits	set	133
   672     0088                     _TRISDbits	set	136
   673     0094                     _SSPSTATbits	set	148
   674     0094                     _SSPSTAT	set	148
   675     008F                     _OSCCONbits	set	143
   676     0088                     _TRISD	set	136
   677     0087                     _TRISCbits	set	135
   678     0085                     _TRISA	set	133
   679     0086                     _TRISB	set	134
   680     043B                     _TRISC3	set	1083
   681     043D                     _TRISC5	set	1085
   682     0188                     _ANSELbits	set	392
   683     0189                     _ANSELH	set	393
   684     001D                     STR_1:
   685     001D  3453               	retlw	83	;'S'
   686     001E  3431               	retlw	49	;'1'
   687     001F  343A               	retlw	58	;':'
   688     0020  3420               	retlw	32	;' '
   689     0021  3420               	retlw	32	;' '
   690     0022  3420               	retlw	32	;' '
   691     0023  3420               	retlw	32	;' '
   692     0024  3453               	retlw	83	;'S'
   693     0025  3432               	retlw	50	;'2'
   694     0026  343A               	retlw	58	;':'
   695     0027  3420               	retlw	32	;' '
   696     0028  3420               	retlw	32	;' '
   697     0029  3420               	retlw	32	;' '
   698     002A  3453               	retlw	83	;'S'
   699     002B  3433               	retlw	51	;'3'
   700     002C  343A               	retlw	58	;':'
   701     002D  3400               	retlw	0
   702     002E                     STR_4:
   703     002E  3425               	retlw	37	;'%'
   704     002F  3475               	retlw	117	;'u'
   705     0030  3400               	retlw	0
   706     0031                     STR_5:
   707     0031  342E               	retlw	46	;'.'
   708     0032  3400               	retlw	0
   709     0033                     STR_2:
   710     0033  3441               	retlw	65	;'A'
   711     0034  3400               	retlw	0
   712     0035                     STR_3:
   713     0035  3442               	retlw	66	;'B'
   714     0036  3400               	retlw	0
   715     002E                     
   716                           	psect	cinit
   717     07EB                     start_initialization:	
   718                           ; #config settings
   719                           
   720     07EB                     __initialization:
   721                           
   722                           ; Clear objects allocated to BANK0
   723     07EB  1383               	bcf	3,7	;select IRP bank0
   724     07EC  3056               	movlw	low __pbssBANK0
   725     07ED  0084               	movwf	4
   726     07EE  306D               	movlw	low (__pbssBANK0+23)
   727     07EF  120A  118A  217A  120A  118A  	fcall	clear_ram0
   728                           
   729                           ; Clear objects allocated to BANK1
   730     07F4  30A0               	movlw	low __pbssBANK1
   731     07F5  0084               	movwf	4
   732     07F6  30B4               	movlw	low (__pbssBANK1+20)
   733     07F7  120A  118A  217A  120A  118A  	fcall	clear_ram0
   734     07FC                     end_of_initialization:	
   735                           ;End of C runtime variable initialization code
   736                           
   737     07FC                     __end_of__initialization:
   738     07FC  0183               	clrf	3
   739     07FD  120A  118A  2E7B   	ljmp	_main	;jump to C main() function
   740                           
   741                           	psect	bssBANK0
   742     0056                     __pbssBANK0:
   743     0056                     _contador:
   744     0056                     	ds	3
   745     0059                     _voltaje2:
   746     0059                     	ds	3
   747     005C                     _voltaje1:
   748     005C                     	ds	3
   749     005F                     _cont:
   750     005F                     	ds	2
   751     0061                     _d2:
   752     0061                     	ds	2
   753     0063                     _u2:
   754     0063                     	ds	2
   755     0065                     _d1:
   756     0065                     	ds	2
   757     0067                     _u1:
   758     0067                     	ds	2
   759     0069                     _VOLT1:
   760     0069                     	ds	2
   761     006B                     _V2:
   762     006B                     	ds	1
   763     006C                     _V1:
   764     006C                     	ds	1
   765                           
   766                           	psect	bssBANK1
   767     00A0                     __pbssBANK1:
   768     00A0                     _buffer:
   769     00A0                     	ds	20
   770                           
   771                           	psect	clrtext
   772     017A                     clear_ram0:	
   773                           ;	Called with FSR containing the base address, and
   774                           ;	W with the last address+1
   775                           
   776     017A  0064               	clrwdt	;clear the watchdog before getting into this loop
   777     017B                     clrloop0:
   778     017B  0180               	clrf	0	;clear RAM location pointed to by FSR
   779     017C  0A84               	incf	4,f	;increment pointer
   780     017D  0604               	xorwf	4,w	;XOR with final address
   781     017E  1903               	btfsc	3,2	;have we reached the end yet?
   782     017F  3400               	retlw	0	;all done for this memory range, return
   783     0180  0604               	xorwf	4,w	;XOR again to restore value
   784     0181  297B               	goto	clrloop0	;do the next byte
   785                           
   786                           	psect	cstackCOMMON
   787     0070                     __pcstackCOMMON:
   788     0070                     ?_setupINTOSC:
   789     0070                     ??_setupINTOSC:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_setup:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_Lcd_Init:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_Lcd_Clear:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_spiWrite:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_spiWrite:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_spiRead:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_spiRead:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_calculovolt:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_valorLCD:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?_spiInit:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_main:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_spiReceiveWait:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ??_spiReceiveWait:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_Lcd_Port:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ??_Lcd_Port:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_Lcd_Cmd:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?_Lcd_Write_Char:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?___lwdiv:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?___lmul:	
   847                           ; 2 bytes @ 0x0
   848                           
   849     0070                     setupINTOSC@IRCF:	
   850                           ; 4 bytes @ 0x0
   851                           
   852     0070                     spiInit@sDataSample:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     spiWrite@dat:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     Lcd_Port@a:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ___lwdiv@divisor:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ___lmul@multiplier:	
   865                           ; 2 bytes @ 0x0
   866                           
   867                           
   868                           ; 4 bytes @ 0x0
   869     0070                     	ds	1
   870     0071                     ??_Lcd_Cmd:
   871     0071                     ??_Lcd_Write_Char:	
   872                           ; 1 bytes @ 0x1
   873                           
   874     0071                     spiInit@sClockIdle:	
   875                           ; 1 bytes @ 0x1
   876                           
   877                           
   878                           ; 1 bytes @ 0x1
   879     0071                     	ds	1
   880     0072                     spiInit@sTransmitEdge:
   881     0072                     Lcd_Write_Char@temp:	
   882                           ; 1 bytes @ 0x2
   883                           
   884     0072                     ___lwdiv@dividend:	
   885                           ; 1 bytes @ 0x2
   886                           
   887                           
   888                           ; 2 bytes @ 0x2
   889     0072                     	ds	1
   890     0073                     ??_spiInit:
   891     0073                     spiInit@sType:	
   892                           ; 1 bytes @ 0x3
   893                           
   894     0073                     Lcd_Cmd@a:	
   895                           ; 1 bytes @ 0x3
   896                           
   897     0073                     Lcd_Write_Char@y:	
   898                           ; 1 bytes @ 0x3
   899                           
   900                           
   901                           ; 1 bytes @ 0x3
   902     0073                     	ds	1
   903     0074                     ??_setup:
   904     0074                     ??_Lcd_Init:	
   905                           ; 1 bytes @ 0x4
   906                           
   907     0074                     ??_Lcd_Clear:	
   908                           ; 1 bytes @ 0x4
   909                           
   910     0074                     ?_Lcd_Set_Cursor:	
   911                           ; 1 bytes @ 0x4
   912                           
   913     0074                     ??___lwdiv:	
   914                           ; 1 bytes @ 0x4
   915                           
   916     0074                     Lcd_Set_Cursor@b:	
   917                           ; 1 bytes @ 0x4
   918                           
   919     0074                     Lcd_Write_Char@a:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ___lmul@multiplicand:	
   923                           ; 1 bytes @ 0x4
   924                           
   925                           
   926                           ; 4 bytes @ 0x4
   927     0074                     	ds	1
   928     0075                     ??_Lcd_Set_Cursor:
   929     0075                     ?_Lcd_Write_String:	
   930                           ; 1 bytes @ 0x5
   931                           
   932     0075                     Lcd_Write_String@a:	
   933                           ; 1 bytes @ 0x5
   934                           
   935     0075                     ___lwdiv@quotient:	
   936                           ; 2 bytes @ 0x5
   937                           
   938                           
   939                           ; 2 bytes @ 0x5
   940     0075                     	ds	1
   941     0076                     Lcd_Set_Cursor@a:
   942                           
   943                           ; 1 bytes @ 0x6
   944     0076                     	ds	1
   945     0077                     ??_Lcd_Write_String:
   946     0077                     Lcd_Set_Cursor@z:	
   947                           ; 1 bytes @ 0x7
   948                           
   949     0077                     ___lwdiv@counter:	
   950                           ; 1 bytes @ 0x7
   951                           
   952                           
   953                           ; 1 bytes @ 0x7
   954     0077                     	ds	1
   955     0078                     ??___lmul:
   956     0078                     ?___lwmod:	
   957                           ; 1 bytes @ 0x8
   958                           
   959     0078                     Lcd_Set_Cursor@y:	
   960                           ; 2 bytes @ 0x8
   961                           
   962     0078                     ___lwmod@divisor:	
   963                           ; 1 bytes @ 0x8
   964                           
   965                           
   966                           ; 2 bytes @ 0x8
   967     0078                     	ds	1
   968     0079                     Lcd_Set_Cursor@temp:
   969     0079                     ___lmul@product:	
   970                           ; 1 bytes @ 0x9
   971                           
   972                           
   973                           ; 4 bytes @ 0x9
   974     0079                     	ds	1
   975     007A                     Lcd_Write_String@i:
   976     007A                     ___lwmod@dividend:	
   977                           ; 2 bytes @ 0xA
   978                           
   979                           
   980                           ; 2 bytes @ 0xA
   981     007A                     	ds	2
   982     007C                     ??___lwmod:
   983                           
   984                           ; 1 bytes @ 0xC
   985     007C                     	ds	1
   986     007D                     ??___aldiv:
   987     007D                     ___lwmod@counter:	
   988                           ; 1 bytes @ 0xD
   989                           
   990                           
   991                           ; 1 bytes @ 0xD
   992     007D                     	ds	1
   993     007E                     ??_calculovolt:
   994     007E                     ??_valorLCD:	
   995                           ; 1 bytes @ 0xE
   996                           
   997                           
   998                           	psect	cstackBANK0
   999     0020                     __pcstackBANK0:	
  1000                           ; 1 bytes @ 0xE
  1001                           
  1002     0020                     ?_sprintf:
  1003     0020                     ?___aldiv:	
  1004                           ; 2 bytes @ 0x0
  1005                           
  1006     0020                     sprintf@f:	
  1007                           ; 4 bytes @ 0x0
  1008                           
  1009     0020                     ___aldiv@divisor:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x0
  1014     0020                     	ds	3
  1015     0023                     ??_sprintf:
  1016                           
  1017                           ; 1 bytes @ 0x3
  1018     0023                     	ds	1
  1019     0024                     ___aldiv@dividend:
  1020                           
  1021                           ; 4 bytes @ 0x4
  1022     0024                     	ds	2
  1023     0026                     sprintf@flag:
  1024                           
  1025                           ; 1 bytes @ 0x6
  1026     0026                     	ds	1
  1027     0027                     sprintf@ap:
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030     0027                     	ds	1
  1031     0028                     ___aldiv@counter:
  1032     0028                     sprintf@val:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x8
  1037     0028                     	ds	1
  1038     0029                     ___aldiv@sign:
  1039                           
  1040                           ; 1 bytes @ 0x9
  1041     0029                     	ds	1
  1042     002A                     sprintf@prec:
  1043     002A                     ___aldiv@quotient:	
  1044                           ; 1 bytes @ 0xA
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0xA
  1048     002A                     	ds	1
  1049     002B                     sprintf@sp:
  1050                           
  1051                           ; 1 bytes @ 0xB
  1052     002B                     	ds	1
  1053     002C                     sprintf@c:
  1054                           
  1055                           ; 1 bytes @ 0xC
  1056     002C                     	ds	2
  1057     002E                     ?_map:
  1058     002E                     map@x:	
  1059                           ; 4 bytes @ 0xE
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0xE
  1063     002E                     	ds	4
  1064     0032                     map@eMin:
  1065                           
  1066                           ; 4 bytes @ 0x12
  1067     0032                     	ds	4
  1068     0036                     map@eMax:
  1069                           
  1070                           ; 4 bytes @ 0x16
  1071     0036                     	ds	4
  1072     003A                     map@sMin:
  1073                           
  1074                           ; 4 bytes @ 0x1A
  1075     003A                     	ds	4
  1076     003E                     map@sMax:
  1077                           
  1078                           ; 4 bytes @ 0x1E
  1079     003E                     	ds	4
  1080     0042                     ??_map:
  1081                           
  1082                           ; 1 bytes @ 0x22
  1083     0042                     	ds	16
  1084     0052                     ??_main:
  1085                           
  1086                           ; 1 bytes @ 0x32
  1087     0052                     	ds	4
  1088                           
  1089                           	psect	maintext
  1090     067B                     __pmaintext:	
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 67 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : B00/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       4       0       0       0
  1113 ;;      Totals:         0       4       0       0       0
  1114 ;;Total ram usage:        4 bytes
  1115 ;; Hardware stack levels required when called: 4
  1116 ;; This function calls:
  1117 ;;		_Lcd_Clear
  1118 ;;		_Lcd_Init
  1119 ;;		_Lcd_Set_Cursor
  1120 ;;		_Lcd_Write_String
  1121 ;;		_calculovolt
  1122 ;;		_map
  1123 ;;		_setup
  1124 ;;		_setupINTOSC
  1125 ;;		_spiRead
  1126 ;;		_spiWrite
  1127 ;;		_valorLCD
  1128 ;; This function is called by:
  1129 ;;		Startup code after reset
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133     067B                     _main:	
  1134                           ;psect for function _main
  1135                           
  1136     067B                     l1639:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1139                           
  1140                           
  1141                           ;main.c: 68:     setupINTOSC(6);
  1142     067B  3006               	movlw	6
  1143     067C  120A  118A  2371  120A  118A  	fcall	_setupINTOSC
  1144                           
  1145                           ;main.c: 69:     setup();
  1146     0681  120A  118A  21EA  120A  118A  	fcall	_setup
  1147                           
  1148                           ;main.c: 70:     Lcd_Init();
  1149     0686  120A  118A  23D0  120A  118A  	fcall	_Lcd_Init
  1150     068B                     l1641:
  1151                           
  1152                           ;main.c: 71:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1153     068B  3020               	movlw	32
  1154     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1155     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1156     068E  00D2               	movwf	??_main
  1157     068F                     u1317:
  1158     068F  0BD2               	decfsz	??_main,f
  1159     0690  2E8F               	goto	u1317
  1160     0691  0000               	nop
  1161     0692                     l1643:
  1162                           
  1163                           ;main.c: 72:     Lcd_Clear();
  1164     0692  120A  118A  218B  120A  118A  	fcall	_Lcd_Clear
  1165     0697                     l1645:
  1166                           
  1167                           ;main.c: 73:     Lcd_Set_Cursor(1,1);
  1168     0697  01F4               	clrf	Lcd_Set_Cursor@b
  1169     0698  0AF4               	incf	Lcd_Set_Cursor@b,f
  1170     0699  3001               	movlw	1
  1171     069A  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1172     069F                     l1647:
  1173                           
  1174                           ;main.c: 74:     Lcd_Write_String("S1:    S2:   S3:");
  1175     069F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1176     06A0  00F5               	movwf	Lcd_Write_String@a
  1177     06A1  3080               	movlw	128
  1178     06A2  00F6               	movwf	Lcd_Write_String@a+1
  1179     06A3  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1180     06A8                     l1649:
  1181                           
  1182                           ;main.c: 78:         setup();
  1183     06A8  120A  118A  21EA  120A  118A  	fcall	_setup
  1184     06AD                     l1651:
  1185                           
  1186                           ;main.c: 79:         PORTCbits.RC1 = 0;
  1187     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1188     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1189     06AF  1087               	bcf	7,1	;volatile
  1190     06B0                     l1653:
  1191                           
  1192                           ;main.c: 80:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1193     06B0  30C7               	movlw	199
  1194     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1195     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1196     06B3  00D2               	movwf	??_main
  1197     06B4                     u1327:
  1198     06B4  2EB5               	nop2
  1199     06B5  0BD2               	decfsz	??_main,f
  1200     06B6  2EB4               	goto	u1327
  1201     06B7  2EB8               	nop2
  1202     06B8                     l1655:
  1203                           
  1204                           ;main.c: 81:         spiWrite("A");
  1205     06B8  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1206     06B9  120A  118A  216D  120A  118A  	fcall	_spiWrite
  1207     06BE                     l1657:
  1208                           
  1209                           ;main.c: 82:         V1 = spiRead();
  1210     06BE  120A  118A  2182  120A  118A  	fcall	_spiRead
  1211     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1212     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1213     06C5  00EC               	movwf	_V1
  1214     06C6                     l1659:
  1215                           
  1216                           ;main.c: 83:         VOLT1 = map(V1, 0, 255, 1, 200);
  1217     06C6  086C               	movf	_V1,w
  1218     06C7  00D2               	movwf	??_main
  1219     06C8  01D3               	clrf	??_main+1
  1220     06C9  01D4               	clrf	??_main+2
  1221     06CA  01D5               	clrf	??_main+3
  1222     06CB  0855               	movf	??_main+3,w
  1223     06CC  00B1               	movwf	map@x+3
  1224     06CD  0854               	movf	??_main+2,w
  1225     06CE  00B0               	movwf	map@x+2
  1226     06CF  0853               	movf	??_main+1,w
  1227     06D0  00AF               	movwf	map@x+1
  1228     06D1  0852               	movf	??_main,w
  1229     06D2  00AE               	movwf	map@x
  1230     06D3  3000               	movlw	0
  1231     06D4  00B5               	movwf	map@eMin+3
  1232     06D5  3000               	movlw	0
  1233     06D6  00B4               	movwf	map@eMin+2
  1234     06D7  3000               	movlw	0
  1235     06D8  00B3               	movwf	map@eMin+1
  1236     06D9  3000               	movlw	0
  1237     06DA  00B2               	movwf	map@eMin
  1238     06DB  3000               	movlw	0
  1239     06DC  00B9               	movwf	map@eMax+3
  1240     06DD  3000               	movlw	0
  1241     06DE  00B8               	movwf	map@eMax+2
  1242     06DF  3000               	movlw	0
  1243     06E0  00B7               	movwf	map@eMax+1
  1244     06E1  30FF               	movlw	255
  1245     06E2  00B6               	movwf	map@eMax
  1246     06E3  3000               	movlw	0
  1247     06E4  00BD               	movwf	map@sMin+3
  1248     06E5  3000               	movlw	0
  1249     06E6  00BC               	movwf	map@sMin+2
  1250     06E7  3000               	movlw	0
  1251     06E8  00BB               	movwf	map@sMin+1
  1252     06E9  3001               	movlw	1
  1253     06EA  00BA               	movwf	map@sMin
  1254     06EB  3000               	movlw	0
  1255     06EC  00C1               	movwf	map@sMax+3
  1256     06ED  3000               	movlw	0
  1257     06EE  00C0               	movwf	map@sMax+2
  1258     06EF  3000               	movlw	0
  1259     06F0  00BF               	movwf	map@sMax+1
  1260     06F1  30C8               	movlw	200
  1261     06F2  00BE               	movwf	map@sMax
  1262     06F3  120A  118A  25D3  120A  118A  	fcall	_map
  1263     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1264     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1265     06FA  082F               	movf	?_map+1,w
  1266     06FB  00EA               	movwf	_VOLT1+1
  1267     06FC  082E               	movf	?_map,w
  1268     06FD  00E9               	movwf	_VOLT1
  1269     06FE                     l1661:
  1270                           
  1271                           ;main.c: 84:         calculovolt();
  1272     06FE  120A  118A  220F  120A  118A  	fcall	_calculovolt
  1273                           
  1274                           ;main.c: 85:         valorLCD();
  1275     0703  120A  118A  243A  120A  118A  	fcall	_valorLCD
  1276     0708                     l1663:
  1277                           
  1278                           ;main.c: 87:         spiWrite("B");
  1279     0708  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1280     0709  120A  118A  216D  120A  118A  	fcall	_spiWrite
  1281     070E                     l1665:
  1282                           
  1283                           ;main.c: 88:         cont = spiRead();
  1284     070E  120A  118A  2182  120A  118A  	fcall	_spiRead
  1285     0713  1283               	bcf	3,5	;RP0=0, select bank0
  1286     0714  1303               	bcf	3,6	;RP1=0, select bank0
  1287     0715  00D2               	movwf	??_main
  1288     0716  01D3               	clrf	??_main+1
  1289     0717  0852               	movf	??_main,w
  1290     0718  00DF               	movwf	_cont
  1291     0719  0853               	movf	??_main+1,w
  1292     071A  00E0               	movwf	_cont+1
  1293     071B                     l1667:
  1294                           
  1295                           ;main.c: 90:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1296     071B  30C7               	movlw	199
  1297     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1298     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1299     071E  00D2               	movwf	??_main
  1300     071F                     u1337:
  1301     071F  2F20               	nop2
  1302     0720  0BD2               	decfsz	??_main,f
  1303     0721  2F1F               	goto	u1337
  1304     0722  2F23               	nop2
  1305     0723                     l1669:
  1306                           
  1307                           ;main.c: 91:         PORTCbits.RC1 = 1;
  1308     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0725  1487               	bsf	7,1	;volatile
  1311     0726  2EA8               	goto	l1649
  1312     0727  120A  118A  2800   	ljmp	start
  1313     072A                     __end_of_main:
  1314                           
  1315                           	psect	text1
  1316     043A                     __ptext1:	
  1317 ;; *************** function _valorLCD *****************
  1318 ;; Defined at:
  1319 ;;		line 122 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0
  1336 ;;      Totals:         0       0       0       0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 3
  1340 ;; This function calls:
  1341 ;;		_Lcd_Set_Cursor
  1342 ;;		_Lcd_Write_String
  1343 ;;		_sprintf
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     043A                     _valorLCD:	
  1350                           ;psect for function _valorLCD
  1351                           
  1352     043A                     l1623:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _valorLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1355                           
  1356                           
  1357                           ;main.c: 123:     Lcd_Set_Cursor(2,1);
  1358     043A  01F4               	clrf	Lcd_Set_Cursor@b
  1359     043B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1360     043C  3002               	movlw	2
  1361     043D  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1362     0442                     l1625:
  1363                           
  1364                           ;main.c: 124:     sprintf(buffer, "%u", u1);
  1365     0442  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1366     0443  1283               	bcf	3,5	;RP0=0, select bank0
  1367     0444  1303               	bcf	3,6	;RP1=0, select bank0
  1368     0445  00A0               	movwf	sprintf@f
  1369     0446  0868               	movf	_u1+1,w
  1370     0447  00A2               	movwf	?_sprintf+2
  1371     0448  0867               	movf	_u1,w
  1372     0449  00A1               	movwf	?_sprintf+1
  1373     044A  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1374     044B  120A  118A  272A  120A  118A  	fcall	_sprintf
  1375     0450                     l1627:
  1376                           
  1377                           ;main.c: 125:     Lcd_Write_String(buffer);
  1378     0450  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1379     0451  00F5               	movwf	Lcd_Write_String@a
  1380     0452  3000               	movlw	0
  1381     0453  00F6               	movwf	Lcd_Write_String@a+1
  1382     0454  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1383                           
  1384                           ;main.c: 127:     Lcd_Set_Cursor(2,2);
  1385     0459  3002               	movlw	2
  1386     045A  00F4               	movwf	Lcd_Set_Cursor@b
  1387     045B  3002               	movlw	2
  1388     045C  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1389     0461                     l1629:
  1390                           
  1391                           ;main.c: 128:     Lcd_Write_String(".");
  1392     0461  301F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1393     0462  00F5               	movwf	Lcd_Write_String@a
  1394     0463  3080               	movlw	128
  1395     0464  00F6               	movwf	Lcd_Write_String@a+1
  1396     0465  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1397     046A                     l1631:
  1398                           
  1399                           ;main.c: 130:     Lcd_Set_Cursor(2,3);
  1400     046A  3003               	movlw	3
  1401     046B  00F4               	movwf	Lcd_Set_Cursor@b
  1402     046C  3002               	movlw	2
  1403     046D  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1404                           
  1405                           ;main.c: 131:     sprintf(buffer, "%u", d1);
  1406     0472  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1407     0473  1283               	bcf	3,5	;RP0=0, select bank0
  1408     0474  1303               	bcf	3,6	;RP1=0, select bank0
  1409     0475  00A0               	movwf	sprintf@f
  1410     0476  0866               	movf	_d1+1,w
  1411     0477  00A2               	movwf	?_sprintf+2
  1412     0478  0865               	movf	_d1,w
  1413     0479  00A1               	movwf	?_sprintf+1
  1414     047A  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1415     047B  120A  118A  272A  120A  118A  	fcall	_sprintf
  1416                           
  1417                           ;main.c: 132:     Lcd_Write_String(buffer);
  1418     0480  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1419     0481  00F5               	movwf	Lcd_Write_String@a
  1420     0482  3000               	movlw	0
  1421     0483  00F6               	movwf	Lcd_Write_String@a+1
  1422     0484  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1423     0489                     l1633:
  1424                           
  1425                           ;main.c: 134:     Lcd_Set_Cursor(2,7);
  1426     0489  3007               	movlw	7
  1427     048A  00F4               	movwf	Lcd_Set_Cursor@b
  1428     048B  3002               	movlw	2
  1429     048C  120A  118A  24A9  120A  118A  	fcall	_Lcd_Set_Cursor
  1430     0491                     l1635:
  1431                           
  1432                           ;main.c: 135:     sprintf(buffer, "%u", cont);
  1433     0491  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1434     0492  1283               	bcf	3,5	;RP0=0, select bank0
  1435     0493  1303               	bcf	3,6	;RP1=0, select bank0
  1436     0494  00A0               	movwf	sprintf@f
  1437     0495  0860               	movf	_cont+1,w
  1438     0496  00A2               	movwf	?_sprintf+2
  1439     0497  085F               	movf	_cont,w
  1440     0498  00A1               	movwf	?_sprintf+1
  1441     0499  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1442     049A  120A  118A  272A  120A  118A  	fcall	_sprintf
  1443     049F                     l1637:
  1444                           
  1445                           ;main.c: 136:     Lcd_Write_String(buffer);
  1446     049F  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1447     04A0  00F5               	movwf	Lcd_Write_String@a
  1448     04A1  3000               	movlw	0
  1449     04A2  00F6               	movwf	Lcd_Write_String@a+1
  1450     04A3  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1451     04A8                     l86:
  1452     04A8  0008               	return
  1453     04A9                     __end_of_valorLCD:
  1454                           
  1455                           	psect	text2
  1456     072A                     __ptext2:	
  1457 ;; *************** function _sprintf *****************
  1458 ;; Defined at:
  1459 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  sp              1    wreg     PTR unsigned char 
  1462 ;;		 -> buffer(20), 
  1463 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1464 ;;		 -> STR_7(3), STR_6(3), STR_4(3), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1467 ;;		 -> buffer(20), 
  1468 ;;  tmpval          4    0        struct .
  1469 ;;  val             2    8[BANK0 ] unsigned int 
  1470 ;;  cp              2    0        PTR const unsigned char 
  1471 ;;  len             2    0        unsigned int 
  1472 ;;  c               1   12[BANK0 ] unsigned char 
  1473 ;;  prec            1   10[BANK0 ] char 
  1474 ;;  ap              1    7[BANK0 ] PTR void [1]
  1475 ;;		 -> ?_sprintf(2), 
  1476 ;;  flag            1    6[BANK0 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    0[BANK0 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       3       0       0       0
  1487 ;;      Locals:         0       7       0       0       0
  1488 ;;      Temps:          0       3       0       0       0
  1489 ;;      Totals:         0      13       0       0       0
  1490 ;;Total ram usage:       13 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		___lwdiv
  1495 ;;		___lwmod
  1496 ;; This function is called by:
  1497 ;;		_valorLCD
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501     072A                     _sprintf:	
  1502                           ;psect for function _sprintf
  1503                           
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1507                           ;sprintf@sp stored from wreg
  1508     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1509     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1510     072C  00AB               	movwf	sprintf@sp
  1511     072D                     l1443:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1514     072D  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1515     072E  00A7               	movwf	sprintf@ap
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1518     072F  2FD6               	goto	l1485
  1519     0730                     l1445:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1522     0730  3025               	movlw	37
  1523     0731  062C               	xorwf	sprintf@c,w
  1524     0732  1903               	btfsc	3,2
  1525     0733  2F35               	goto	u991
  1526     0734  2F36               	goto	u990
  1527     0735                     u991:
  1528     0735  2F40               	goto	l1451
  1529     0736                     u990:
  1530     0736                     l1447:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1533     0736  082B               	movf	sprintf@sp,w
  1534     0737  0084               	movwf	4
  1535     0738  082C               	movf	sprintf@c,w
  1536     0739  1383               	bcf	3,7	;select IRP bank0
  1537     073A  0080               	movwf	0
  1538     073B                     l1449:
  1539     073B  3001               	movlw	1
  1540     073C  00A3               	movwf	??_sprintf
  1541     073D  0823               	movf	??_sprintf,w
  1542     073E  07AB               	addwf	sprintf@sp,f
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1545     073F  2FD6               	goto	l1485
  1546     0740                     l1451:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1549     0740  01A6               	clrf	sprintf@flag
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1552     0741  2F47               	goto	l1457
  1553     0742                     l1453:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1556     0742  30C0               	movlw	192
  1557     0743  00A3               	movwf	??_sprintf
  1558     0744  0823               	movf	??_sprintf,w
  1559     0745  04A6               	iorwf	sprintf@flag,f
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1562     0746  2F61               	goto	l1459
  1563     0747                     l1457:
  1564     0747  3001               	movlw	1
  1565     0748  07A0               	addwf	sprintf@f,f
  1566     0749  30FF               	movlw	-1
  1567     074A  0720               	addwf	sprintf@f,w
  1568     074B  0084               	movwf	4
  1569     074C  120A  118A  200D  120A  118A  	fcall	stringdir
  1570     0751  00AC               	movwf	sprintf@c
  1571     0752  00A3               	movwf	??_sprintf
  1572     0753  01A4               	clrf	??_sprintf+1
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ; direct_byte           11     8 (fixed)
  1581                           ; jumptable            260     6 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583     0754  0824               	movf	??_sprintf+1,w
  1584     0755  3A00               	xorlw	0	; case 0
  1585     0756  1903               	skipnz
  1586     0757  2F59               	goto	l1699
  1587     0758  2FD6               	goto	l1485
  1588     0759                     l1699:
  1589                           
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 2, Range of values is 0 to 117
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte            7     4 (average)
  1595                           ; jumptable            260     6 (fixed)
  1596                           ;	Chosen strategy is simple_byte
  1597     0759  0823               	movf	??_sprintf,w
  1598     075A  3A00               	xorlw	0	; case 0
  1599     075B  1903               	skipnz
  1600     075C  2FE6               	goto	l1487
  1601     075D  3A75               	xorlw	117	; case 117
  1602     075E  1903               	skipnz
  1603     075F  2F42               	goto	l1453
  1604     0760  2FD6               	goto	l1485
  1605     0761                     l1459:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1608     0761  0827               	movf	sprintf@ap,w
  1609     0762  0084               	movwf	4
  1610     0763  1383               	bcf	3,7	;select IRP bank0
  1611     0764  0800               	movf	0,w
  1612     0765  00A8               	movwf	sprintf@val
  1613     0766  0A84               	incf	4,f
  1614     0767  0800               	movf	0,w
  1615     0768  00A9               	movwf	sprintf@val+1
  1616     0769                     l1461:
  1617     0769  3002               	movlw	2
  1618     076A  00A3               	movwf	??_sprintf
  1619     076B  0823               	movf	??_sprintf,w
  1620     076C  07A7               	addwf	sprintf@ap,f
  1621     076D                     l1463:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1624     076D  01AC               	clrf	sprintf@c
  1625     076E  0AAC               	incf	sprintf@c,f
  1626     076F                     l1469:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1629     076F  082C               	movf	sprintf@c,w
  1630     0770  00A3               	movwf	??_sprintf
  1631     0771  0723               	addwf	??_sprintf,w
  1632     0772  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1633     0773  0084               	movwf	4
  1634     0774  120A  118A  200D  120A  118A  	fcall	stringdir
  1635     0779  00A4               	movwf	??_sprintf+1
  1636     077A  120A  118A  200D  120A  118A  	fcall	stringdir
  1637     077F  00A5               	movwf	??_sprintf+2
  1638     0780  0825               	movf	??_sprintf+2,w
  1639     0781  0229               	subwf	sprintf@val+1,w
  1640     0782  1D03               	skipz
  1641     0783  2F86               	goto	u1005
  1642     0784  0824               	movf	??_sprintf+1,w
  1643     0785  0228               	subwf	sprintf@val,w
  1644     0786                     u1005:
  1645     0786  1803               	skipnc
  1646     0787  2F89               	goto	u1001
  1647     0788  2F8A               	goto	u1000
  1648     0789                     u1001:
  1649     0789  2F8B               	goto	l1473
  1650     078A                     u1000:
  1651     078A  2F95               	goto	l1475
  1652     078B                     l1473:
  1653     078B  3001               	movlw	1
  1654     078C  00A3               	movwf	??_sprintf
  1655     078D  0823               	movf	??_sprintf,w
  1656     078E  07AC               	addwf	sprintf@c,f
  1657     078F  3005               	movlw	5
  1658     0790  062C               	xorwf	sprintf@c,w
  1659     0791  1D03               	btfss	3,2
  1660     0792  2F94               	goto	u1011
  1661     0793  2F95               	goto	u1010
  1662     0794                     u1011:
  1663     0794  2F6F               	goto	l1469
  1664     0795                     u1010:
  1665     0795                     l1475:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1668     0795  082C               	movf	sprintf@c,w
  1669     0796  00AA               	movwf	sprintf@prec
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1672     0797  2FCD               	goto	l1483
  1673     0798                     l1477:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1676     0798  300A               	movlw	10
  1677     0799  00F8               	movwf	___lwmod@divisor
  1678     079A  3000               	movlw	0
  1679     079B  00F9               	movwf	___lwmod@divisor+1
  1680     079C  082A               	movf	sprintf@prec,w
  1681     079D  00A3               	movwf	??_sprintf
  1682     079E  0723               	addwf	??_sprintf,w
  1683     079F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1684     07A0  0084               	movwf	4
  1685     07A1  120A  118A  200D  120A  118A  	fcall	stringdir
  1686     07A6  00F0               	movwf	___lwdiv@divisor
  1687     07A7  120A  118A  200D  120A  118A  	fcall	stringdir
  1688     07AC  00F1               	movwf	___lwdiv@divisor+1
  1689     07AD  0829               	movf	sprintf@val+1,w
  1690     07AE  00F3               	movwf	___lwdiv@dividend+1
  1691     07AF  0828               	movf	sprintf@val,w
  1692     07B0  00F2               	movwf	___lwdiv@dividend
  1693     07B1  120A  118A  22E7  120A  118A  	fcall	___lwdiv
  1694     07B6  0871               	movf	?___lwdiv+1,w
  1695     07B7  00FB               	movwf	___lwmod@dividend+1
  1696     07B8  0870               	movf	?___lwdiv,w
  1697     07B9  00FA               	movwf	___lwmod@dividend
  1698     07BA  120A  118A  226B  120A  118A  	fcall	___lwmod
  1699     07BF  0878               	movf	?___lwmod,w
  1700     07C0  3E30               	addlw	48
  1701     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1702     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1703     07C3  00AC               	movwf	sprintf@c
  1704     07C4                     l1479:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1707     07C4  082B               	movf	sprintf@sp,w
  1708     07C5  0084               	movwf	4
  1709     07C6  082C               	movf	sprintf@c,w
  1710     07C7  1383               	bcf	3,7	;select IRP bank0
  1711     07C8  0080               	movwf	0
  1712     07C9                     l1481:
  1713     07C9  3001               	movlw	1
  1714     07CA  00A3               	movwf	??_sprintf
  1715     07CB  0823               	movf	??_sprintf,w
  1716     07CC  07AB               	addwf	sprintf@sp,f
  1717     07CD                     l1483:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1720     07CD  30FF               	movlw	255
  1721     07CE  00A3               	movwf	??_sprintf
  1722     07CF  0823               	movf	??_sprintf,w
  1723     07D0  07AA               	addwf	sprintf@prec,f
  1724     07D1  0A2A               	incf	sprintf@prec,w
  1725     07D2  1D03               	btfss	3,2
  1726     07D3  2FD5               	goto	u1021
  1727     07D4  2FD6               	goto	u1020
  1728     07D5                     u1021:
  1729     07D5  2F98               	goto	l1477
  1730     07D6                     u1020:
  1731     07D6                     l1485:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1734     07D6  3001               	movlw	1
  1735     07D7  07A0               	addwf	sprintf@f,f
  1736     07D8  30FF               	movlw	-1
  1737     07D9  0720               	addwf	sprintf@f,w
  1738     07DA  0084               	movwf	4
  1739     07DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1740     07E0  00AC               	movwf	sprintf@c
  1741     07E1  082C               	movf	sprintf@c,w
  1742     07E2  1D03               	btfss	3,2
  1743     07E3  2FE5               	goto	u1031
  1744     07E4  2FE6               	goto	u1030
  1745     07E5                     u1031:
  1746     07E5  2F30               	goto	l1445
  1747     07E6                     u1030:
  1748     07E6                     l1487:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1751     07E6  082B               	movf	sprintf@sp,w
  1752     07E7  0084               	movwf	4
  1753     07E8  1383               	bcf	3,7	;select IRP bank0
  1754     07E9  0180               	clrf	0
  1755     07EA                     l341:
  1756     07EA  0008               	return
  1757     07EB                     __end_of_sprintf:
  1758                           
  1759                           	psect	text3
  1760     02A5                     __ptext3:	
  1761 ;; *************** function _Lcd_Write_String *****************
  1762 ;; Defined at:
  1763 ;;		line 104 in file "lcd.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  a               2    5[COMMON] PTR const unsigned char 
  1766 ;;		 -> STR_5(2), buffer(20), STR_1(17), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  i               2   10[COMMON] int 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         2       0       0       0       0
  1779 ;;      Locals:         2       0       0       0       0
  1780 ;;      Temps:          3       0       0       0       0
  1781 ;;      Totals:         7       0       0       0       0
  1782 ;;Total ram usage:        7 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 2
  1785 ;; This function calls:
  1786 ;;		_Lcd_Write_Char
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;;		_valorLCD
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     02A5                     _Lcd_Write_String:	
  1794                           ;psect for function _Lcd_Write_String
  1795                           
  1796     02A5                     l1425:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1799                           
  1800                           
  1801                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  1802     02A5  01FA               	clrf	Lcd_Write_String@i
  1803     02A6  01FB               	clrf	Lcd_Write_String@i+1
  1804     02A7  2ACA               	goto	l1431
  1805     02A8                     l1427:
  1806                           
  1807                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  1808     02A8  087A               	movf	Lcd_Write_String@i,w
  1809     02A9  0775               	addwf	Lcd_Write_String@a,w
  1810     02AA  00F8               	movwf	??_Lcd_Write_String+1
  1811     02AB  0876               	movf	Lcd_Write_String@a+1,w
  1812     02AC  00F7               	movwf	??_Lcd_Write_String
  1813     02AD  1803               	skipnc
  1814     02AE  0AF7               	incf	??_Lcd_Write_String,f
  1815     02AF  1FFA               	btfss	Lcd_Write_String@i,7
  1816     02B0  2AB2               	goto	u950
  1817     02B1  03F7               	decf	??_Lcd_Write_String,f
  1818     02B2                     u950:
  1819     02B2  0877               	movf	??_Lcd_Write_String,w
  1820     02B3  00F9               	movwf	??_Lcd_Write_String+2
  1821     02B4  0879               	movf	??_Lcd_Write_String+2,w
  1822     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1823     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1824     02B7  00FF               	movwf	btemp+1
  1825     02B8  0878               	movf	??_Lcd_Write_String+1,w
  1826     02B9  0084               	movwf	4
  1827     02BA  120A  118A  2003  120A  118A  	fcall	stringtab
  1828     02BF  120A  118A  2238  120A  118A  	fcall	_Lcd_Write_Char
  1829     02C4                     l1429:
  1830     02C4  3001               	movlw	1
  1831     02C5  07FA               	addwf	Lcd_Write_String@i,f
  1832     02C6  1803               	skipnc
  1833     02C7  0AFB               	incf	Lcd_Write_String@i+1,f
  1834     02C8  3000               	movlw	0
  1835     02C9  07FB               	addwf	Lcd_Write_String@i+1,f
  1836     02CA                     l1431:
  1837     02CA  087A               	movf	Lcd_Write_String@i,w
  1838     02CB  0775               	addwf	Lcd_Write_String@a,w
  1839     02CC  00F8               	movwf	??_Lcd_Write_String+1
  1840     02CD  0876               	movf	Lcd_Write_String@a+1,w
  1841     02CE  00F7               	movwf	??_Lcd_Write_String
  1842     02CF  1803               	skipnc
  1843     02D0  0AF7               	incf	??_Lcd_Write_String,f
  1844     02D1  1FFA               	btfss	Lcd_Write_String@i,7
  1845     02D2  2AD4               	goto	u960
  1846     02D3  03F7               	decf	??_Lcd_Write_String,f
  1847     02D4                     u960:
  1848     02D4  0877               	movf	??_Lcd_Write_String,w
  1849     02D5  00F9               	movwf	??_Lcd_Write_String+2
  1850     02D6  0879               	movf	??_Lcd_Write_String+2,w
  1851     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1852     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1853     02D9  00FF               	movwf	btemp+1
  1854     02DA  0878               	movf	??_Lcd_Write_String+1,w
  1855     02DB  0084               	movwf	4
  1856     02DC  120A  118A  2003  120A  118A  	fcall	stringtab
  1857     02E1  3A00               	xorlw	0
  1858     02E2  1D03               	skipz
  1859     02E3  2AE5               	goto	u971
  1860     02E4  2AE6               	goto	u970
  1861     02E5                     u971:
  1862     02E5  2AA8               	goto	l1427
  1863     02E6                     u970:
  1864     02E6                     l189:
  1865     02E6  0008               	return
  1866     02E7                     __end_of_Lcd_Write_String:
  1867                           
  1868                           	psect	text4
  1869     0238                     __ptext4:	
  1870 ;; *************** function _Lcd_Write_Char *****************
  1871 ;; Defined at:
  1872 ;;		line 88 in file "lcd.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  a               1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  a               1    4[COMMON] unsigned char 
  1877 ;;  y               1    3[COMMON] unsigned char 
  1878 ;;  temp            1    2[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         3       0       0       0       0
  1890 ;;      Temps:          1       0       0       0       0
  1891 ;;      Totals:         4       0       0       0       0
  1892 ;;Total ram usage:        4 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 1
  1895 ;; This function calls:
  1896 ;;		_Lcd_Port
  1897 ;; This function is called by:
  1898 ;;		_Lcd_Write_String
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902     0238                     _Lcd_Write_Char:	
  1903                           ;psect for function _Lcd_Write_Char
  1904                           
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1908                           ;Lcd_Write_Char@a stored from wreg
  1909     0238  00F4               	movwf	Lcd_Write_Char@a
  1910     0239                     l1315:
  1911                           
  1912                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  1913     0239  0874               	movf	Lcd_Write_Char@a,w
  1914     023A  390F               	andlw	15
  1915     023B  00F2               	movwf	Lcd_Write_Char@temp
  1916                           
  1917                           ;lcd.c: 92:     y = a&0xF0;
  1918     023C  0874               	movf	Lcd_Write_Char@a,w
  1919     023D  39F0               	andlw	240
  1920     023E  00F3               	movwf	Lcd_Write_Char@y
  1921     023F                     l1317:
  1922                           
  1923                           ;lcd.c: 93:     PORTDbits.RD2 = 1;
  1924     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1925     0240  1303               	bcf	3,6	;RP1=0, select bank0
  1926     0241  1508               	bsf	8,2	;volatile
  1927     0242                     l1319:
  1928                           
  1929                           ;lcd.c: 94:     Lcd_Port(y>>4);
  1930     0242  0873               	movf	Lcd_Write_Char@y,w
  1931     0243  00F1               	movwf	??_Lcd_Write_Char
  1932     0244  3004               	movlw	4
  1933     0245                     u735:
  1934     0245  1003               	clrc
  1935     0246  0CF1               	rrf	??_Lcd_Write_Char,f
  1936     0247  3EFF               	addlw	-1
  1937     0248  1D03               	skipz
  1938     0249  2A45               	goto	u735
  1939     024A  0871               	movf	??_Lcd_Write_Char,w
  1940     024B  120A  118A  21C8  120A  118A  	fcall	_Lcd_Port
  1941     0250                     l1321:
  1942                           
  1943                           ;lcd.c: 95:     PORTDbits.RD3 = 1;
  1944     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1945     0251  1303               	bcf	3,6	;RP1=0, select bank0
  1946     0252  1588               	bsf	8,3	;volatile
  1947     0253                     l1323:
  1948                           
  1949                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1950     0253  300D               	movlw	13
  1951     0254  00F1               	movwf	??_Lcd_Write_Char
  1952     0255                     u1347:
  1953     0255  0BF1               	decfsz	??_Lcd_Write_Char,f
  1954     0256  2A55               	goto	u1347
  1955     0257                     l1325:
  1956                           
  1957                           ;lcd.c: 97:     PORTDbits.RD3 = 0;
  1958     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1959     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1960     0259  1188               	bcf	8,3	;volatile
  1961     025A                     l1327:
  1962                           
  1963                           ;lcd.c: 98:     Lcd_Port(temp);
  1964     025A  0872               	movf	Lcd_Write_Char@temp,w
  1965     025B  120A  118A  21C8  120A  118A  	fcall	_Lcd_Port
  1966     0260                     l1329:
  1967                           
  1968                           ;lcd.c: 99:     PORTDbits.RD3 = 1;
  1969     0260  1283               	bcf	3,5	;RP0=0, select bank0
  1970     0261  1303               	bcf	3,6	;RP1=0, select bank0
  1971     0262  1588               	bsf	8,3	;volatile
  1972     0263                     l1331:
  1973                           
  1974                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1975     0263  300D               	movlw	13
  1976     0264  00F1               	movwf	??_Lcd_Write_Char
  1977     0265                     u1357:
  1978     0265  0BF1               	decfsz	??_Lcd_Write_Char,f
  1979     0266  2A65               	goto	u1357
  1980     0267                     l1333:
  1981                           
  1982                           ;lcd.c: 101:     PORTDbits.RD3 = 0;
  1983     0267  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0268  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0269  1188               	bcf	8,3	;volatile
  1986     026A                     l183:
  1987     026A  0008               	return
  1988     026B                     __end_of_Lcd_Write_Char:
  1989                           
  1990                           	psect	text5
  1991     04A9                     __ptext5:	
  1992 ;; *************** function _Lcd_Set_Cursor *****************
  1993 ;; Defined at:
  1994 ;;		line 26 in file "lcd.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  a               1    wreg     unsigned char 
  1997 ;;  b               1    4[COMMON] unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  a               1    6[COMMON] unsigned char 
  2000 ;;  temp            1    9[COMMON] unsigned char 
  2001 ;;  y               1    8[COMMON] unsigned char 
  2002 ;;  z               1    7[COMMON] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         1       0       0       0       0
  2013 ;;      Locals:         4       0       0       0       0
  2014 ;;      Temps:          1       0       0       0       0
  2015 ;;      Totals:         6       0       0       0       0
  2016 ;;Total ram usage:        6 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 2
  2019 ;; This function calls:
  2020 ;;		_Lcd_Cmd
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;;		_valorLCD
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027     04A9                     _Lcd_Set_Cursor:	
  2028                           ;psect for function _Lcd_Set_Cursor
  2029                           
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2033                           ;Lcd_Set_Cursor@a stored from wreg
  2034     04A9  00F6               	movwf	Lcd_Set_Cursor@a
  2035     04AA                     l1385:
  2036                           
  2037                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  2038     04AA  0376               	decf	Lcd_Set_Cursor@a,w
  2039     04AB  1D03               	btfss	3,2
  2040     04AC  2CAE               	goto	u871
  2041     04AD  2CAF               	goto	u870
  2042     04AE                     u871:
  2043     04AE  2CCC               	goto	l1395
  2044     04AF                     u870:
  2045     04AF                     l1387:
  2046                           
  2047                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  2048     04AF  0874               	movf	Lcd_Set_Cursor@b,w
  2049     04B0  3E7F               	addlw	127
  2050     04B1  00F9               	movwf	Lcd_Set_Cursor@temp
  2051                           
  2052                           ;lcd.c: 32:         z = temp>>4;
  2053     04B2  0879               	movf	Lcd_Set_Cursor@temp,w
  2054     04B3  00F5               	movwf	??_Lcd_Set_Cursor
  2055     04B4  3004               	movlw	4
  2056     04B5                     u885:
  2057     04B5  1003               	clrc
  2058     04B6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2059     04B7  3EFF               	addlw	-1
  2060     04B8  1D03               	skipz
  2061     04B9  2CB5               	goto	u885
  2062     04BA  0875               	movf	??_Lcd_Set_Cursor,w
  2063     04BB  00F7               	movwf	Lcd_Set_Cursor@z
  2064     04BC                     l1389:
  2065                           
  2066                           ;lcd.c: 33:         y = temp & 0x0F;
  2067     04BC  0879               	movf	Lcd_Set_Cursor@temp,w
  2068     04BD  390F               	andlw	15
  2069     04BE  00F8               	movwf	Lcd_Set_Cursor@y
  2070     04BF                     l1391:
  2071                           
  2072                           ;lcd.c: 34:         Lcd_Cmd(z);
  2073     04BF  0877               	movf	Lcd_Set_Cursor@z,w
  2074     04C0  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2075     04C5                     l1393:
  2076                           
  2077                           ;lcd.c: 35:         Lcd_Cmd(y);
  2078     04C5  0878               	movf	Lcd_Set_Cursor@y,w
  2079     04C6  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2080                           
  2081                           ;lcd.c: 36:     }
  2082     04CB  2D35               	goto	l177
  2083     04CC                     l1395:
  2084     04CC  3002               	movlw	2
  2085     04CD  0676               	xorwf	Lcd_Set_Cursor@a,w
  2086     04CE  1D03               	btfss	3,2
  2087     04CF  2CD1               	goto	u891
  2088     04D0  2CD2               	goto	u890
  2089     04D1                     u891:
  2090     04D1  2CEF               	goto	l1405
  2091     04D2                     u890:
  2092     04D2                     l1397:
  2093                           
  2094                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  2095     04D2  0874               	movf	Lcd_Set_Cursor@b,w
  2096     04D3  3EBF               	addlw	191
  2097     04D4  00F9               	movwf	Lcd_Set_Cursor@temp
  2098                           
  2099                           ;lcd.c: 40:         z = temp>>4;
  2100     04D5  0879               	movf	Lcd_Set_Cursor@temp,w
  2101     04D6  00F5               	movwf	??_Lcd_Set_Cursor
  2102     04D7  3004               	movlw	4
  2103     04D8                     u905:
  2104     04D8  1003               	clrc
  2105     04D9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2106     04DA  3EFF               	addlw	-1
  2107     04DB  1D03               	skipz
  2108     04DC  2CD8               	goto	u905
  2109     04DD  0875               	movf	??_Lcd_Set_Cursor,w
  2110     04DE  00F7               	movwf	Lcd_Set_Cursor@z
  2111     04DF                     l1399:
  2112                           
  2113                           ;lcd.c: 41:         y = temp & 0x0F;
  2114     04DF  0879               	movf	Lcd_Set_Cursor@temp,w
  2115     04E0  390F               	andlw	15
  2116     04E1  00F8               	movwf	Lcd_Set_Cursor@y
  2117     04E2                     l1401:
  2118                           
  2119                           ;lcd.c: 42:         Lcd_Cmd(z);
  2120     04E2  0877               	movf	Lcd_Set_Cursor@z,w
  2121     04E3  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2122     04E8                     l1403:
  2123                           
  2124                           ;lcd.c: 43:         Lcd_Cmd(y);
  2125     04E8  0878               	movf	Lcd_Set_Cursor@y,w
  2126     04E9  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2127                           
  2128                           ;lcd.c: 44:     }
  2129     04EE  2D35               	goto	l177
  2130     04EF                     l1405:
  2131     04EF  3003               	movlw	3
  2132     04F0  0676               	xorwf	Lcd_Set_Cursor@a,w
  2133     04F1  1D03               	btfss	3,2
  2134     04F2  2CF4               	goto	u911
  2135     04F3  2CF5               	goto	u910
  2136     04F4                     u911:
  2137     04F4  2D12               	goto	l1415
  2138     04F5                     u910:
  2139     04F5                     l1407:
  2140                           
  2141                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  2142     04F5  0874               	movf	Lcd_Set_Cursor@b,w
  2143     04F6  3E93               	addlw	147
  2144     04F7  00F9               	movwf	Lcd_Set_Cursor@temp
  2145                           
  2146                           ;lcd.c: 48:         z = temp>>4;
  2147     04F8  0879               	movf	Lcd_Set_Cursor@temp,w
  2148     04F9  00F5               	movwf	??_Lcd_Set_Cursor
  2149     04FA  3004               	movlw	4
  2150     04FB                     u925:
  2151     04FB  1003               	clrc
  2152     04FC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2153     04FD  3EFF               	addlw	-1
  2154     04FE  1D03               	skipz
  2155     04FF  2CFB               	goto	u925
  2156     0500  0875               	movf	??_Lcd_Set_Cursor,w
  2157     0501  00F7               	movwf	Lcd_Set_Cursor@z
  2158     0502                     l1409:
  2159                           
  2160                           ;lcd.c: 49:         y = temp & 0x0F;
  2161     0502  0879               	movf	Lcd_Set_Cursor@temp,w
  2162     0503  390F               	andlw	15
  2163     0504  00F8               	movwf	Lcd_Set_Cursor@y
  2164     0505                     l1411:
  2165                           
  2166                           ;lcd.c: 50:         Lcd_Cmd(z);
  2167     0505  0877               	movf	Lcd_Set_Cursor@z,w
  2168     0506  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2169     050B                     l1413:
  2170                           
  2171                           ;lcd.c: 51:         Lcd_Cmd(y);
  2172     050B  0878               	movf	Lcd_Set_Cursor@y,w
  2173     050C  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2174                           
  2175                           ;lcd.c: 52:     }
  2176     0511  2D35               	goto	l177
  2177     0512                     l1415:
  2178     0512  3004               	movlw	4
  2179     0513  0676               	xorwf	Lcd_Set_Cursor@a,w
  2180     0514  1D03               	btfss	3,2
  2181     0515  2D17               	goto	u931
  2182     0516  2D18               	goto	u930
  2183     0517                     u931:
  2184     0517  2D35               	goto	l173
  2185     0518                     u930:
  2186     0518                     l1417:
  2187                           
  2188                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  2189     0518  0874               	movf	Lcd_Set_Cursor@b,w
  2190     0519  3ED3               	addlw	211
  2191     051A  00F9               	movwf	Lcd_Set_Cursor@temp
  2192                           
  2193                           ;lcd.c: 56:         z = temp>>4;
  2194     051B  0879               	movf	Lcd_Set_Cursor@temp,w
  2195     051C  00F5               	movwf	??_Lcd_Set_Cursor
  2196     051D  3004               	movlw	4
  2197     051E                     u945:
  2198     051E  1003               	clrc
  2199     051F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2200     0520  3EFF               	addlw	-1
  2201     0521  1D03               	skipz
  2202     0522  2D1E               	goto	u945
  2203     0523  0875               	movf	??_Lcd_Set_Cursor,w
  2204     0524  00F7               	movwf	Lcd_Set_Cursor@z
  2205     0525                     l1419:
  2206                           
  2207                           ;lcd.c: 57:         y = temp & 0x0F;
  2208     0525  0879               	movf	Lcd_Set_Cursor@temp,w
  2209     0526  390F               	andlw	15
  2210     0527  00F8               	movwf	Lcd_Set_Cursor@y
  2211     0528                     l1421:
  2212                           
  2213                           ;lcd.c: 58:         Lcd_Cmd(z);
  2214     0528  0877               	movf	Lcd_Set_Cursor@z,w
  2215     0529  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2216     052E                     l1423:
  2217                           
  2218                           ;lcd.c: 59:         Lcd_Cmd(y);
  2219     052E  0878               	movf	Lcd_Set_Cursor@y,w
  2220     052F  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  2221     0534  2D35               	goto	l177
  2222     0535                     l173:
  2223     0535                     l177:
  2224     0535  0008               	return
  2225     0536                     __end_of_Lcd_Set_Cursor:
  2226                           
  2227                           	psect	text6
  2228     016D                     __ptext6:	
  2229 ;; *************** function _spiWrite *****************
  2230 ;; Defined at:
  2231 ;;		line 34 in file "SPI.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  dat             1    wreg     unsigned char 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  dat             1    0[COMMON] unsigned char 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0
  2246 ;;      Locals:         1       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0
  2248 ;;      Totals:         1       0       0       0       0
  2249 ;;Total ram usage:        1 bytes
  2250 ;; Hardware stack levels used: 1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258     016D                     _spiWrite:	
  2259                           ;psect for function _spiWrite
  2260                           
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _spiWrite: [wreg]
  2264                           ;spiWrite@dat stored from wreg
  2265     016D  00F0               	movwf	spiWrite@dat
  2266     016E                     l1609:
  2267                           
  2268                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2269     016E  0870               	movf	spiWrite@dat,w
  2270     016F  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0170  1303               	bcf	3,6	;RP1=0, select bank0
  2272     0171  0093               	movwf	19	;volatile
  2273     0172                     l128:
  2274     0172  0008               	return
  2275     0173                     __end_of_spiWrite:
  2276                           
  2277                           	psect	text7
  2278     0182                     __ptext7:	
  2279 ;; *************** function _spiRead *****************
  2280 ;; Defined at:
  2281 ;;		line 47 in file "SPI.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       0       0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 1
  2302 ;; This function calls:
  2303 ;;		_spiReceiveWait
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309     0182                     _spiRead:	
  2310                           ;psect for function _spiRead
  2311                           
  2312     0182                     l1611:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2315                           
  2316                           
  2317                           ;SPI.c: 49:     spiReceiveWait();
  2318     0182  120A  118A  2173  120A  118A  	fcall	_spiReceiveWait
  2319     0187                     l1613:
  2320                           
  2321                           ;SPI.c: 50:     return(SSPBUF);
  2322     0187  1283               	bcf	3,5	;RP0=0, select bank0
  2323     0188  1303               	bcf	3,6	;RP1=0, select bank0
  2324     0189  0813               	movf	19,w	;volatile
  2325     018A                     l136:
  2326     018A  0008               	return
  2327     018B                     __end_of_spiRead:
  2328                           
  2329                           	psect	text8
  2330     0173                     __ptext8:	
  2331 ;; *************** function _spiReceiveWait *****************
  2332 ;; Defined at:
  2333 ;;		line 29 in file "SPI.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		None
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_spiRead
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     0173                     _spiReceiveWait:	
  2361                           ;psect for function _spiReceiveWait
  2362                           
  2363     0173                     l1495:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _spiReceiveWait: []
  2366                           
  2367     0173                     l122:	
  2368                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2369                           
  2370     0173  1683               	bsf	3,5	;RP0=1, select bank1
  2371     0174  1303               	bcf	3,6	;RP1=0, select bank1
  2372     0175  1C14               	btfss	20,0	;volatile
  2373     0176  2978               	goto	u1041
  2374     0177  2979               	goto	u1040
  2375     0178                     u1041:
  2376     0178  2973               	goto	l122
  2377     0179                     u1040:
  2378     0179                     l125:
  2379     0179  0008               	return
  2380     017A                     __end_of_spiReceiveWait:
  2381                           
  2382                           	psect	text9
  2383     0371                     __ptext9:	
  2384 ;; *************** function _setupINTOSC *****************
  2385 ;; Defined at:
  2386 ;;		line 10 in file "oscilador.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  IRCF            1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  IRCF            1    0[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     0371                     _setupINTOSC:	
  2414                           ;psect for function _setupINTOSC
  2415                           
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2419                           ;setupINTOSC@IRCF stored from wreg
  2420     0371  00F0               	movwf	setupINTOSC@IRCF
  2421     0372                     l1551:
  2422                           
  2423                           ;oscilador.c: 11:     if (IRCF == 7){
  2424     0372  3007               	movlw	7
  2425     0373  0670               	xorwf	setupINTOSC@IRCF,w
  2426     0374  1D03               	btfss	3,2
  2427     0375  2B77               	goto	u1201
  2428     0376  2B78               	goto	u1200
  2429     0377                     u1201:
  2430     0377  2B7C               	goto	l94
  2431     0378                     u1200:
  2432     0378                     l1553:
  2433                           
  2434                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  2435     0378  3070               	movlw	112
  2436     0379  1683               	bsf	3,5	;RP0=1, select bank1
  2437     037A  1303               	bcf	3,6	;RP1=0, select bank1
  2438     037B  048F               	iorwf	15,f	;volatile
  2439     037C                     l94:	
  2440                           ;oscilador.c: 13:     }
  2441                           
  2442                           
  2443                           ;oscilador.c: 14:     if (IRCF == 6){
  2444     037C  3006               	movlw	6
  2445     037D  0670               	xorwf	setupINTOSC@IRCF,w
  2446     037E  1D03               	btfss	3,2
  2447     037F  2B81               	goto	u1211
  2448     0380  2B82               	goto	u1210
  2449     0381                     u1211:
  2450     0381  2B88               	goto	l95
  2451     0382                     u1210:
  2452     0382                     l1555:
  2453                           
  2454                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  2455     0382  1683               	bsf	3,5	;RP0=1, select bank1
  2456     0383  1303               	bcf	3,6	;RP1=0, select bank1
  2457     0384  080F               	movf	15,w	;volatile
  2458     0385  398F               	andlw	-113
  2459     0386  3860               	iorlw	96
  2460     0387  008F               	movwf	15	;volatile
  2461     0388                     l95:	
  2462                           ;oscilador.c: 16:     }
  2463                           
  2464                           
  2465                           ;oscilador.c: 17:     if (IRCF == 5){
  2466     0388  3005               	movlw	5
  2467     0389  0670               	xorwf	setupINTOSC@IRCF,w
  2468     038A  1D03               	btfss	3,2
  2469     038B  2B8D               	goto	u1221
  2470     038C  2B8E               	goto	u1220
  2471     038D                     u1221:
  2472     038D  2B94               	goto	l96
  2473     038E                     u1220:
  2474     038E                     l1557:
  2475                           
  2476                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  2477     038E  1683               	bsf	3,5	;RP0=1, select bank1
  2478     038F  1303               	bcf	3,6	;RP1=0, select bank1
  2479     0390  080F               	movf	15,w	;volatile
  2480     0391  398F               	andlw	-113
  2481     0392  3850               	iorlw	80
  2482     0393  008F               	movwf	15	;volatile
  2483     0394                     l96:	
  2484                           ;oscilador.c: 19:     }
  2485                           
  2486                           
  2487                           ;oscilador.c: 20:     if (IRCF == 4){
  2488     0394  3004               	movlw	4
  2489     0395  0670               	xorwf	setupINTOSC@IRCF,w
  2490     0396  1D03               	btfss	3,2
  2491     0397  2B99               	goto	u1231
  2492     0398  2B9A               	goto	u1230
  2493     0399                     u1231:
  2494     0399  2BA0               	goto	l97
  2495     039A                     u1230:
  2496     039A                     l1559:
  2497                           
  2498                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  2499     039A  1683               	bsf	3,5	;RP0=1, select bank1
  2500     039B  1303               	bcf	3,6	;RP1=0, select bank1
  2501     039C  080F               	movf	15,w	;volatile
  2502     039D  398F               	andlw	-113
  2503     039E  3840               	iorlw	64
  2504     039F  008F               	movwf	15	;volatile
  2505     03A0                     l97:	
  2506                           ;oscilador.c: 22:     }
  2507                           
  2508                           
  2509                           ;oscilador.c: 23:     if (IRCF == 3){
  2510     03A0  3003               	movlw	3
  2511     03A1  0670               	xorwf	setupINTOSC@IRCF,w
  2512     03A2  1D03               	btfss	3,2
  2513     03A3  2BA5               	goto	u1241
  2514     03A4  2BA6               	goto	u1240
  2515     03A5                     u1241:
  2516     03A5  2BAC               	goto	l98
  2517     03A6                     u1240:
  2518     03A6                     l1561:
  2519                           
  2520                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  2521     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2522     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2523     03A8  080F               	movf	15,w	;volatile
  2524     03A9  398F               	andlw	-113
  2525     03AA  3830               	iorlw	48
  2526     03AB  008F               	movwf	15	;volatile
  2527     03AC                     l98:	
  2528                           ;oscilador.c: 25:     }
  2529                           
  2530                           
  2531                           ;oscilador.c: 26:     if (IRCF == 2){
  2532     03AC  3002               	movlw	2
  2533     03AD  0670               	xorwf	setupINTOSC@IRCF,w
  2534     03AE  1D03               	btfss	3,2
  2535     03AF  2BB1               	goto	u1251
  2536     03B0  2BB2               	goto	u1250
  2537     03B1                     u1251:
  2538     03B1  2BB8               	goto	l99
  2539     03B2                     u1250:
  2540     03B2                     l1563:
  2541                           
  2542                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  2543     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2544     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2545     03B4  080F               	movf	15,w	;volatile
  2546     03B5  398F               	andlw	-113
  2547     03B6  3820               	iorlw	32
  2548     03B7  008F               	movwf	15	;volatile
  2549     03B8                     l99:	
  2550                           ;oscilador.c: 28:     }
  2551                           
  2552                           
  2553                           ;oscilador.c: 29:     if (IRCF == 1){
  2554     03B8  0370               	decf	setupINTOSC@IRCF,w
  2555     03B9  1D03               	btfss	3,2
  2556     03BA  2BBC               	goto	u1261
  2557     03BB  2BBD               	goto	u1260
  2558     03BC                     u1261:
  2559     03BC  2BC3               	goto	l100
  2560     03BD                     u1260:
  2561     03BD                     l1565:
  2562                           
  2563                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  2564     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2565     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2566     03BF  080F               	movf	15,w	;volatile
  2567     03C0  398F               	andlw	-113
  2568     03C1  3810               	iorlw	16
  2569     03C2  008F               	movwf	15	;volatile
  2570     03C3                     l100:	
  2571                           ;oscilador.c: 31:     }
  2572                           
  2573                           
  2574                           ;oscilador.c: 32:     if (IRCF == 0){
  2575     03C3  0870               	movf	setupINTOSC@IRCF,w
  2576     03C4  1D03               	btfss	3,2
  2577     03C5  2BC7               	goto	u1271
  2578     03C6  2BC8               	goto	u1270
  2579     03C7                     u1271:
  2580     03C7  2BCC               	goto	l1569
  2581     03C8                     u1270:
  2582     03C8                     l1567:
  2583                           
  2584                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  2585     03C8  308F               	movlw	-113
  2586     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2587     03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2588     03CB  058F               	andwf	15,f	;volatile
  2589     03CC                     l1569:
  2590                           
  2591                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  2592     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2593     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2594     03CE  140F               	bsf	15,0	;volatile
  2595     03CF                     l102:
  2596     03CF  0008               	return
  2597     03D0                     __end_of_setupINTOSC:
  2598                           
  2599                           	psect	text10
  2600     01EA                     __ptext10:	
  2601 ;; *************** function _setup *****************
  2602 ;; Defined at:
  2603 ;;		line 99 in file "main.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          2       0       0       0       0
  2620 ;;      Totals:         2       0       0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 1
  2624 ;; This function calls:
  2625 ;;		_spiInit
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631     01EA                     _setup:	
  2632                           ;psect for function _setup
  2633                           
  2634     01EA                     l1571:	
  2635                           ;incstack = 0
  2636                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2637                           
  2638                           
  2639                           ;main.c: 101:     ANSELH = 0;
  2640     01EA  1683               	bsf	3,5	;RP0=1, select bank3
  2641     01EB  1703               	bsf	3,6	;RP1=1, select bank3
  2642     01EC  0189               	clrf	9	;volatile
  2643     01ED                     l1573:
  2644                           
  2645                           ;main.c: 102:     TRISB = 0b00000011;
  2646     01ED  3003               	movlw	3
  2647     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2648     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2649     01F0  0086               	movwf	6	;volatile
  2650     01F1                     l1575:
  2651                           
  2652                           ;main.c: 103:     TRISA = 0;
  2653     01F1  0185               	clrf	5	;volatile
  2654     01F2                     l1577:
  2655                           
  2656                           ;main.c: 104:     TRISCbits.TRISC1 = 0;
  2657     01F2  1087               	bcf	7,1	;volatile
  2658     01F3                     l1579:
  2659                           
  2660                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  2661     01F3  1107               	bcf	7,2	;volatile
  2662     01F4                     l1581:
  2663                           
  2664                           ;main.c: 107:     TRISD = 0;
  2665     01F4  0188               	clrf	8	;volatile
  2666     01F5                     l1583:
  2667                           
  2668                           ;main.c: 109:     PORTA = 0;
  2669     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2670     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2671     01F7  0185               	clrf	5	;volatile
  2672     01F8                     l1585:
  2673                           
  2674                           ;main.c: 110:     PORTB = 0;
  2675     01F8  0186               	clrf	6	;volatile
  2676     01F9                     l1587:
  2677                           
  2678                           ;main.c: 112:     PORTD = 0;
  2679     01F9  0188               	clrf	8	;volatile
  2680     01FA                     l1589:
  2681                           
  2682                           ;main.c: 113:     PORTE = 0;
  2683     01FA  0189               	clrf	9	;volatile
  2684     01FB                     l1591:
  2685                           
  2686                           ;main.c: 115:     PORTCbits.RC1 = 1;
  2687     01FB  1487               	bsf	7,1	;volatile
  2688     01FC                     l1593:
  2689                           
  2690                           ;main.c: 117:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  2691     01FC  01F0               	clrf	spiInit@sDataSample
  2692     01FD  01F1               	clrf	spiInit@sClockIdle
  2693     01FE  01F2               	clrf	spiInit@sTransmitEdge
  2694     01FF  3020               	movlw	32
  2695     0200  120A  118A  2198  120A  118A  	fcall	_spiInit
  2696     0205                     l1595:
  2697                           
  2698                           ;main.c: 118:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2699     0205  300D               	movlw	13
  2700     0206  00F5               	movwf	??_setup+1
  2701     0207  30FB               	movlw	251
  2702     0208  00F4               	movwf	??_setup
  2703     0209                     u1367:
  2704     0209  0BF4               	decfsz	??_setup,f
  2705     020A  2A09               	goto	u1367
  2706     020B  0BF5               	decfsz	??_setup+1,f
  2707     020C  2A09               	goto	u1367
  2708     020D  2A0E               	nop2
  2709     020E                     l83:
  2710     020E  0008               	return
  2711     020F                     __end_of_setup:
  2712                           
  2713                           	psect	text11
  2714     0198                     __ptext11:	
  2715 ;; *************** function _spiInit *****************
  2716 ;; Defined at:
  2717 ;;		line 12 in file "SPI.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  sType           1    wreg     enum E1292
  2720 ;;  sDataSample     1    0[COMMON] enum E1300
  2721 ;;  sClockIdle      1    1[COMMON] enum E1304
  2722 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  sType           1    3[COMMON] enum E1292
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         3       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0
  2737 ;;      Totals:         4       0       0       0       0
  2738 ;;Total ram usage:        4 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_setup
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     0198                     _spiInit:	
  2748                           ;psect for function _spiInit
  2749                           
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2753                           ;spiInit@sType stored from wreg
  2754     0198  00F3               	movwf	spiInit@sType
  2755     0199                     l1433:
  2756                           
  2757                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2758     0199  1683               	bsf	3,5	;RP0=1, select bank1
  2759     019A  1303               	bcf	3,6	;RP1=0, select bank1
  2760     019B  1287               	bcf	7,5	;volatile
  2761                           
  2762                           ;SPI.c: 15:     if(sType & 0b00000100)
  2763     019C  1D73               	btfss	spiInit@sType,2
  2764     019D  299F               	goto	u981
  2765     019E  29A0               	goto	u980
  2766     019F                     u981:
  2767     019F  29A4               	goto	l1439
  2768     01A0                     u980:
  2769     01A0                     l1435:
  2770                           
  2771                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2772     01A0  0872               	movf	spiInit@sTransmitEdge,w
  2773     01A1  0094               	movwf	20	;volatile
  2774     01A2                     l1437:
  2775                           
  2776                           ;SPI.c: 18:         TRISC3 = 1;
  2777     01A2  1587               	bsf	7,3	;volatile
  2778                           
  2779                           ;SPI.c: 19:     }
  2780     01A3  29A8               	goto	l118
  2781     01A4                     l1439:
  2782                           
  2783                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2784     01A4  0870               	movf	spiInit@sDataSample,w
  2785     01A5  0472               	iorwf	spiInit@sTransmitEdge,w
  2786     01A6  0094               	movwf	20	;volatile
  2787     01A7                     l1441:
  2788                           
  2789                           ;SPI.c: 23:         TRISC3 = 0;
  2790     01A7  1187               	bcf	7,3	;volatile
  2791     01A8                     l118:	
  2792                           ;SPI.c: 24:     }
  2793                           
  2794                           
  2795                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2796     01A8  0873               	movf	spiInit@sType,w
  2797     01A9  0471               	iorwf	spiInit@sClockIdle,w
  2798     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2799     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2800     01AC  0094               	movwf	20	;volatile
  2801     01AD                     l119:
  2802     01AD  0008               	return
  2803     01AE                     __end_of_spiInit:
  2804                           
  2805                           	psect	text12
  2806     05D3                     __ptext12:	
  2807 ;; *************** function _map *****************
  2808 ;; Defined at:
  2809 ;;		line 10 in file "mapf.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  x               4   14[BANK0 ] long 
  2812 ;;  eMin            4   18[BANK0 ] long 
  2813 ;;  eMax            4   22[BANK0 ] long 
  2814 ;;  sMin            4   26[BANK0 ] long 
  2815 ;;  sMax            4   30[BANK0 ] long 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  4   14[BANK0 ] long 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0      20       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0      16       0       0       0
  2830 ;;      Totals:         0      36       0       0       0
  2831 ;;Total ram usage:       36 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 1
  2834 ;; This function calls:
  2835 ;;		___aldiv
  2836 ;;		___lmul
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842     05D3                     _map:	
  2843                           ;psect for function _map
  2844                           
  2845     05D3                     l1617:	
  2846                           ;incstack = 0
  2847                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2848                           
  2849                           
  2850                           ;mapf.c: 10: long map(long x, long eMin, long eMax, long sMin, long sMax);mapf.c: 11: {;
      +                          mapf.c: 12:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
  2851     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2852     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2853     05D5  0836               	movf	map@eMax,w
  2854     05D6  00C2               	movwf	??_map
  2855     05D7  0837               	movf	map@eMax+1,w
  2856     05D8  00C3               	movwf	??_map+1
  2857     05D9  0838               	movf	map@eMax+2,w
  2858     05DA  00C4               	movwf	??_map+2
  2859     05DB  0839               	movf	map@eMax+3,w
  2860     05DC  00C5               	movwf	??_map+3
  2861     05DD  0832               	movf	map@eMin,w
  2862     05DE  02C2               	subwf	??_map,f
  2863     05DF  0833               	movf	map@eMin+1,w
  2864     05E0  1C03               	skipc
  2865     05E1  0F33               	incfsz	map@eMin+1,w
  2866     05E2  2DE4               	goto	u1281
  2867     05E3  2DE5               	goto	u1282
  2868     05E4                     u1281:
  2869     05E4  02C3               	subwf	??_map+1,f
  2870     05E5                     u1282:
  2871     05E5  0834               	movf	map@eMin+2,w
  2872     05E6  1C03               	skipc
  2873     05E7  0F34               	incfsz	map@eMin+2,w
  2874     05E8  2DEA               	goto	u1283
  2875     05E9  2DEB               	goto	u1284
  2876     05EA                     u1283:
  2877     05EA  02C4               	subwf	??_map+2,f
  2878     05EB                     u1284:
  2879     05EB  0835               	movf	map@eMin+3,w
  2880     05EC  1C03               	skipc
  2881     05ED  0F35               	incfsz	map@eMin+3,w
  2882     05EE  2DF0               	goto	u1285
  2883     05EF  2DF1               	goto	u1286
  2884     05F0                     u1285:
  2885     05F0  02C5               	subwf	??_map+3,f
  2886     05F1                     u1286:
  2887     05F1  0845               	movf	??_map+3,w
  2888     05F2  00A3               	movwf	___aldiv@divisor+3
  2889     05F3  0844               	movf	??_map+2,w
  2890     05F4  00A2               	movwf	___aldiv@divisor+2
  2891     05F5  0843               	movf	??_map+1,w
  2892     05F6  00A1               	movwf	___aldiv@divisor+1
  2893     05F7  0842               	movf	??_map,w
  2894     05F8  00A0               	movwf	___aldiv@divisor
  2895     05F9  082E               	movf	map@x,w
  2896     05FA  00C6               	movwf	??_map+4
  2897     05FB  082F               	movf	map@x+1,w
  2898     05FC  00C7               	movwf	??_map+5
  2899     05FD  0830               	movf	map@x+2,w
  2900     05FE  00C8               	movwf	??_map+6
  2901     05FF  0831               	movf	map@x+3,w
  2902     0600  00C9               	movwf	??_map+7
  2903     0601  0832               	movf	map@eMin,w
  2904     0602  02C6               	subwf	??_map+4,f
  2905     0603  0833               	movf	map@eMin+1,w
  2906     0604  1C03               	skipc
  2907     0605  0F33               	incfsz	map@eMin+1,w
  2908     0606  2E08               	goto	u1291
  2909     0607  2E09               	goto	u1292
  2910     0608                     u1291:
  2911     0608  02C7               	subwf	??_map+5,f
  2912     0609                     u1292:
  2913     0609  0834               	movf	map@eMin+2,w
  2914     060A  1C03               	skipc
  2915     060B  0F34               	incfsz	map@eMin+2,w
  2916     060C  2E0E               	goto	u1293
  2917     060D  2E0F               	goto	u1294
  2918     060E                     u1293:
  2919     060E  02C8               	subwf	??_map+6,f
  2920     060F                     u1294:
  2921     060F  0835               	movf	map@eMin+3,w
  2922     0610  1C03               	skipc
  2923     0611  0F35               	incfsz	map@eMin+3,w
  2924     0612  2E14               	goto	u1295
  2925     0613  2E15               	goto	u1296
  2926     0614                     u1295:
  2927     0614  02C9               	subwf	??_map+7,f
  2928     0615                     u1296:
  2929     0615  0849               	movf	??_map+7,w
  2930     0616  00F3               	movwf	___lmul@multiplier+3
  2931     0617  0848               	movf	??_map+6,w
  2932     0618  00F2               	movwf	___lmul@multiplier+2
  2933     0619  0847               	movf	??_map+5,w
  2934     061A  00F1               	movwf	___lmul@multiplier+1
  2935     061B  0846               	movf	??_map+4,w
  2936     061C  00F0               	movwf	___lmul@multiplier
  2937     061D  083E               	movf	map@sMax,w
  2938     061E  00CA               	movwf	??_map+8
  2939     061F  083F               	movf	map@sMax+1,w
  2940     0620  00CB               	movwf	??_map+9
  2941     0621  0840               	movf	map@sMax+2,w
  2942     0622  00CC               	movwf	??_map+10
  2943     0623  0841               	movf	map@sMax+3,w
  2944     0624  00CD               	movwf	??_map+11
  2945     0625  083A               	movf	map@sMin,w
  2946     0626  02CA               	subwf	??_map+8,f
  2947     0627  083B               	movf	map@sMin+1,w
  2948     0628  1C03               	skipc
  2949     0629  0F3B               	incfsz	map@sMin+1,w
  2950     062A  2E2C               	goto	u1301
  2951     062B  2E2D               	goto	u1302
  2952     062C                     u1301:
  2953     062C  02CB               	subwf	??_map+9,f
  2954     062D                     u1302:
  2955     062D  083C               	movf	map@sMin+2,w
  2956     062E  1C03               	skipc
  2957     062F  0F3C               	incfsz	map@sMin+2,w
  2958     0630  2E32               	goto	u1303
  2959     0631  2E33               	goto	u1304
  2960     0632                     u1303:
  2961     0632  02CC               	subwf	??_map+10,f
  2962     0633                     u1304:
  2963     0633  083D               	movf	map@sMin+3,w
  2964     0634  1C03               	skipc
  2965     0635  0F3D               	incfsz	map@sMin+3,w
  2966     0636  2E38               	goto	u1305
  2967     0637  2E39               	goto	u1306
  2968     0638                     u1305:
  2969     0638  02CD               	subwf	??_map+11,f
  2970     0639                     u1306:
  2971     0639  084D               	movf	??_map+11,w
  2972     063A  00F7               	movwf	___lmul@multiplicand+3
  2973     063B  084C               	movf	??_map+10,w
  2974     063C  00F6               	movwf	___lmul@multiplicand+2
  2975     063D  084B               	movf	??_map+9,w
  2976     063E  00F5               	movwf	___lmul@multiplicand+1
  2977     063F  084A               	movf	??_map+8,w
  2978     0640  00F4               	movwf	___lmul@multiplicand
  2979     0641  120A  118A  232B  120A  118A  	fcall	___lmul
  2980     0646  0873               	movf	?___lmul+3,w
  2981     0647  1283               	bcf	3,5	;RP0=0, select bank0
  2982     0648  1303               	bcf	3,6	;RP1=0, select bank0
  2983     0649  00A7               	movwf	___aldiv@dividend+3
  2984     064A  0872               	movf	?___lmul+2,w
  2985     064B  00A6               	movwf	___aldiv@dividend+2
  2986     064C  0871               	movf	?___lmul+1,w
  2987     064D  00A5               	movwf	___aldiv@dividend+1
  2988     064E  0870               	movf	?___lmul,w
  2989     064F  00A4               	movwf	___aldiv@dividend
  2990     0650  120A  118A  2536  120A  118A  	fcall	___aldiv
  2991     0655  1283               	bcf	3,5	;RP0=0, select bank0
  2992     0656  1303               	bcf	3,6	;RP1=0, select bank0
  2993     0657  0820               	movf	?___aldiv,w
  2994     0658  073A               	addwf	map@sMin,w
  2995     0659  00CE               	movwf	??_map+12
  2996     065A  3000               	movlw	0
  2997     065B  1803               	skipnc
  2998     065C  3001               	movlw	1
  2999     065D  0721               	addwf	?___aldiv+1,w
  3000     065E  01D0               	clrf	??_map+14
  3001     065F  1803               	skipnc
  3002     0660  0AD0               	incf	??_map+14,f
  3003     0661  073B               	addwf	map@sMin+1,w
  3004     0662  00CF               	movwf	??_map+13
  3005     0663  1803               	skipnc
  3006     0664  0AD0               	incf	??_map+14,f
  3007     0665  0822               	movf	?___aldiv+2,w
  3008     0666  0750               	addwf	??_map+14,w
  3009     0667  01D1               	clrf	??_map+15
  3010     0668  1803               	skipnc
  3011     0669  0AD1               	incf	??_map+15,f
  3012     066A  073C               	addwf	map@sMin+2,w
  3013     066B  00D0               	movwf	??_map+14
  3014     066C  1803               	skipnc
  3015     066D  0AD1               	incf	??_map+15,f
  3016     066E  0823               	movf	?___aldiv+3,w
  3017     066F  0751               	addwf	??_map+15,w
  3018     0670  073D               	addwf	map@sMin+3,w
  3019     0671  00D1               	movwf	??_map+15
  3020     0672  0851               	movf	??_map+15,w
  3021     0673  00B1               	movwf	?_map+3
  3022     0674  0850               	movf	??_map+14,w
  3023     0675  00B0               	movwf	?_map+2
  3024     0676  084F               	movf	??_map+13,w
  3025     0677  00AF               	movwf	?_map+1
  3026     0678  084E               	movf	??_map+12,w
  3027     0679  00AE               	movwf	?_map
  3028     067A                     l204:
  3029     067A  0008               	return
  3030     067B                     __end_of_map:
  3031                           
  3032                           	psect	text13
  3033     032B                     __ptext13:	
  3034 ;; *************** function ___lmul *****************
  3035 ;; Defined at:
  3036 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  multiplier      4    0[COMMON] unsigned long 
  3039 ;;  multiplicand    4    4[COMMON] unsigned long 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  product         4    9[COMMON] unsigned long 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  4    0[COMMON] unsigned long 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         8       0       0       0       0
  3052 ;;      Locals:         4       0       0       0       0
  3053 ;;      Temps:          1       0       0       0       0
  3054 ;;      Totals:        13       0       0       0       0
  3055 ;;Total ram usage:       13 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_map
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     032B                     ___lmul:	
  3065                           ;psect for function ___lmul
  3066                           
  3067     032B                     l1497:	
  3068                           ;incstack = 0
  3069                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3070                           
  3071     032B  3000               	movlw	0
  3072     032C  00FC               	movwf	___lmul@product+3
  3073     032D  3000               	movlw	0
  3074     032E  00FB               	movwf	___lmul@product+2
  3075     032F  3000               	movlw	0
  3076     0330  00FA               	movwf	___lmul@product+1
  3077     0331  3000               	movlw	0
  3078     0332  00F9               	movwf	___lmul@product
  3079     0333                     l1499:
  3080     0333  1C70               	btfss	___lmul@multiplier,0
  3081     0334  2B36               	goto	u1051
  3082     0335  2B37               	goto	u1050
  3083     0336                     u1051:
  3084     0336  2B4E               	goto	l1503
  3085     0337                     u1050:
  3086     0337                     l1501:
  3087     0337  0874               	movf	___lmul@multiplicand,w
  3088     0338  07F9               	addwf	___lmul@product,f
  3089     0339  0875               	movf	___lmul@multiplicand+1,w
  3090     033A  1103               	clrz
  3091     033B  1803               	skipnc
  3092     033C  3E01               	addlw	1
  3093     033D  1903               	skipnz
  3094     033E  2B40               	goto	u1061
  3095     033F  07FA               	addwf	___lmul@product+1,f
  3096     0340                     u1061:
  3097     0340  0876               	movf	___lmul@multiplicand+2,w
  3098     0341  1103               	clrz
  3099     0342  1803               	skipnc
  3100     0343  3E01               	addlw	1
  3101     0344  1903               	skipnz
  3102     0345  2B47               	goto	u1062
  3103     0346  07FB               	addwf	___lmul@product+2,f
  3104     0347                     u1062:
  3105     0347  0877               	movf	___lmul@multiplicand+3,w
  3106     0348  1103               	clrz
  3107     0349  1803               	skipnc
  3108     034A  3E01               	addlw	1
  3109     034B  1903               	skipnz
  3110     034C  2B4E               	goto	u1063
  3111     034D  07FC               	addwf	___lmul@product+3,f
  3112     034E                     u1063:
  3113     034E                     l1503:
  3114     034E  3001               	movlw	1
  3115     034F  00F8               	movwf	??___lmul
  3116     0350                     u1075:
  3117     0350  1003               	clrc
  3118     0351  0DF4               	rlf	___lmul@multiplicand,f
  3119     0352  0DF5               	rlf	___lmul@multiplicand+1,f
  3120     0353  0DF6               	rlf	___lmul@multiplicand+2,f
  3121     0354  0DF7               	rlf	___lmul@multiplicand+3,f
  3122     0355  0BF8               	decfsz	??___lmul,f
  3123     0356  2B50               	goto	u1075
  3124     0357                     l1505:
  3125     0357  3001               	movlw	1
  3126     0358                     u1085:
  3127     0358  1003               	clrc
  3128     0359  0CF3               	rrf	___lmul@multiplier+3,f
  3129     035A  0CF2               	rrf	___lmul@multiplier+2,f
  3130     035B  0CF1               	rrf	___lmul@multiplier+1,f
  3131     035C  0CF0               	rrf	___lmul@multiplier,f
  3132     035D  3EFF               	addlw	-1
  3133     035E  1D03               	skipz
  3134     035F  2B58               	goto	u1085
  3135     0360  0873               	movf	___lmul@multiplier+3,w
  3136     0361  0472               	iorwf	___lmul@multiplier+2,w
  3137     0362  0471               	iorwf	___lmul@multiplier+1,w
  3138     0363  0470               	iorwf	___lmul@multiplier,w
  3139     0364  1D03               	skipz
  3140     0365  2B67               	goto	u1091
  3141     0366  2B68               	goto	u1090
  3142     0367                     u1091:
  3143     0367  2B33               	goto	l1499
  3144     0368                     u1090:
  3145     0368                     l1507:
  3146     0368  087C               	movf	___lmul@product+3,w
  3147     0369  00F3               	movwf	?___lmul+3
  3148     036A  087B               	movf	___lmul@product+2,w
  3149     036B  00F2               	movwf	?___lmul+2
  3150     036C  087A               	movf	___lmul@product+1,w
  3151     036D  00F1               	movwf	?___lmul+1
  3152     036E  0879               	movf	___lmul@product,w
  3153     036F  00F0               	movwf	?___lmul
  3154     0370                     l359:
  3155     0370  0008               	return
  3156     0371                     __end_of___lmul:
  3157                           
  3158                           	psect	text14
  3159     0536                     __ptext14:	
  3160 ;; *************** function ___aldiv *****************
  3161 ;; Defined at:
  3162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  divisor         4    0[BANK0 ] long 
  3165 ;;  dividend        4    4[BANK0 ] long 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  quotient        4   10[BANK0 ] long 
  3168 ;;  sign            1    9[BANK0 ] unsigned char 
  3169 ;;  counter         1    8[BANK0 ] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  4    0[BANK0 ] long 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       8       0       0       0
  3180 ;;      Locals:         0       6       0       0       0
  3181 ;;      Temps:          1       0       0       0       0
  3182 ;;      Totals:         1      14       0       0       0
  3183 ;;Total ram usage:       15 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_map
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192     0536                     ___aldiv:	
  3193                           ;psect for function ___aldiv
  3194                           
  3195     0536                     l1511:	
  3196                           ;incstack = 0
  3197                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3198                           
  3199     0536  1283               	bcf	3,5	;RP0=0, select bank0
  3200     0537  1303               	bcf	3,6	;RP1=0, select bank0
  3201     0538  01A9               	clrf	___aldiv@sign
  3202     0539                     l1513:
  3203     0539  1FA3               	btfss	___aldiv@divisor+3,7
  3204     053A  2D3C               	goto	u1101
  3205     053B  2D3D               	goto	u1100
  3206     053C                     u1101:
  3207     053C  2D4A               	goto	l410
  3208     053D                     u1100:
  3209     053D                     l1515:
  3210     053D  09A0               	comf	___aldiv@divisor,f
  3211     053E  09A1               	comf	___aldiv@divisor+1,f
  3212     053F  09A2               	comf	___aldiv@divisor+2,f
  3213     0540  09A3               	comf	___aldiv@divisor+3,f
  3214     0541  0AA0               	incf	___aldiv@divisor,f
  3215     0542  1903               	skipnz
  3216     0543  0AA1               	incf	___aldiv@divisor+1,f
  3217     0544  1903               	skipnz
  3218     0545  0AA2               	incf	___aldiv@divisor+2,f
  3219     0546  1903               	skipnz
  3220     0547  0AA3               	incf	___aldiv@divisor+3,f
  3221     0548  01A9               	clrf	___aldiv@sign
  3222     0549  0AA9               	incf	___aldiv@sign,f
  3223     054A                     l410:
  3224     054A  1FA7               	btfss	___aldiv@dividend+3,7
  3225     054B  2D4D               	goto	u1111
  3226     054C  2D4E               	goto	u1110
  3227     054D                     u1111:
  3228     054D  2D5D               	goto	l1521
  3229     054E                     u1110:
  3230     054E                     l1517:
  3231     054E  09A4               	comf	___aldiv@dividend,f
  3232     054F  09A5               	comf	___aldiv@dividend+1,f
  3233     0550  09A6               	comf	___aldiv@dividend+2,f
  3234     0551  09A7               	comf	___aldiv@dividend+3,f
  3235     0552  0AA4               	incf	___aldiv@dividend,f
  3236     0553  1903               	skipnz
  3237     0554  0AA5               	incf	___aldiv@dividend+1,f
  3238     0555  1903               	skipnz
  3239     0556  0AA6               	incf	___aldiv@dividend+2,f
  3240     0557  1903               	skipnz
  3241     0558  0AA7               	incf	___aldiv@dividend+3,f
  3242     0559                     l1519:
  3243     0559  3001               	movlw	1
  3244     055A  00FD               	movwf	??___aldiv
  3245     055B  087D               	movf	??___aldiv,w
  3246     055C  06A9               	xorwf	___aldiv@sign,f
  3247     055D                     l1521:
  3248     055D  3000               	movlw	0
  3249     055E  00AD               	movwf	___aldiv@quotient+3
  3250     055F  3000               	movlw	0
  3251     0560  00AC               	movwf	___aldiv@quotient+2
  3252     0561  3000               	movlw	0
  3253     0562  00AB               	movwf	___aldiv@quotient+1
  3254     0563  3000               	movlw	0
  3255     0564  00AA               	movwf	___aldiv@quotient
  3256     0565                     l1523:
  3257     0565  0823               	movf	___aldiv@divisor+3,w
  3258     0566  0422               	iorwf	___aldiv@divisor+2,w
  3259     0567  0421               	iorwf	___aldiv@divisor+1,w
  3260     0568  0420               	iorwf	___aldiv@divisor,w
  3261     0569  1903               	skipnz
  3262     056A  2D6C               	goto	u1121
  3263     056B  2D6D               	goto	u1120
  3264     056C                     u1121:
  3265     056C  2DBA               	goto	l1543
  3266     056D                     u1120:
  3267     056D                     l1525:
  3268     056D  01A8               	clrf	___aldiv@counter
  3269     056E  0AA8               	incf	___aldiv@counter,f
  3270     056F  2D7D               	goto	l1529
  3271     0570                     l1527:
  3272     0570  3001               	movlw	1
  3273     0571  00FD               	movwf	??___aldiv
  3274     0572                     u1135:
  3275     0572  1003               	clrc
  3276     0573  0DA0               	rlf	___aldiv@divisor,f
  3277     0574  0DA1               	rlf	___aldiv@divisor+1,f
  3278     0575  0DA2               	rlf	___aldiv@divisor+2,f
  3279     0576  0DA3               	rlf	___aldiv@divisor+3,f
  3280     0577  0BFD               	decfsz	??___aldiv,f
  3281     0578  2D72               	goto	u1135
  3282     0579  3001               	movlw	1
  3283     057A  00FD               	movwf	??___aldiv
  3284     057B  087D               	movf	??___aldiv,w
  3285     057C  07A8               	addwf	___aldiv@counter,f
  3286     057D                     l1529:
  3287     057D  1FA3               	btfss	___aldiv@divisor+3,7
  3288     057E  2D80               	goto	u1141
  3289     057F  2D81               	goto	u1140
  3290     0580                     u1141:
  3291     0580  2D70               	goto	l1527
  3292     0581                     u1140:
  3293     0581                     l1531:
  3294     0581  3001               	movlw	1
  3295     0582  00FD               	movwf	??___aldiv
  3296     0583                     u1155:
  3297     0583  1003               	clrc
  3298     0584  0DAA               	rlf	___aldiv@quotient,f
  3299     0585  0DAB               	rlf	___aldiv@quotient+1,f
  3300     0586  0DAC               	rlf	___aldiv@quotient+2,f
  3301     0587  0DAD               	rlf	___aldiv@quotient+3,f
  3302     0588  0BFD               	decfsz	??___aldiv,f
  3303     0589  2D83               	goto	u1155
  3304     058A                     l1533:
  3305     058A  0823               	movf	___aldiv@divisor+3,w
  3306     058B  0227               	subwf	___aldiv@dividend+3,w
  3307     058C  1D03               	skipz
  3308     058D  2D98               	goto	u1165
  3309     058E  0822               	movf	___aldiv@divisor+2,w
  3310     058F  0226               	subwf	___aldiv@dividend+2,w
  3311     0590  1D03               	skipz
  3312     0591  2D98               	goto	u1165
  3313     0592  0821               	movf	___aldiv@divisor+1,w
  3314     0593  0225               	subwf	___aldiv@dividend+1,w
  3315     0594  1D03               	skipz
  3316     0595  2D98               	goto	u1165
  3317     0596  0820               	movf	___aldiv@divisor,w
  3318     0597  0224               	subwf	___aldiv@dividend,w
  3319     0598                     u1165:
  3320     0598  1C03               	skipc
  3321     0599  2D9B               	goto	u1161
  3322     059A  2D9C               	goto	u1160
  3323     059B                     u1161:
  3324     059B  2DAB               	goto	l1539
  3325     059C                     u1160:
  3326     059C                     l1535:
  3327     059C  0820               	movf	___aldiv@divisor,w
  3328     059D  02A4               	subwf	___aldiv@dividend,f
  3329     059E  0821               	movf	___aldiv@divisor+1,w
  3330     059F  1C03               	skipc
  3331     05A0  0F21               	incfsz	___aldiv@divisor+1,w
  3332     05A1  02A5               	subwf	___aldiv@dividend+1,f
  3333     05A2  0822               	movf	___aldiv@divisor+2,w
  3334     05A3  1C03               	skipc
  3335     05A4  0F22               	incfsz	___aldiv@divisor+2,w
  3336     05A5  02A6               	subwf	___aldiv@dividend+2,f
  3337     05A6  0823               	movf	___aldiv@divisor+3,w
  3338     05A7  1C03               	skipc
  3339     05A8  0F23               	incfsz	___aldiv@divisor+3,w
  3340     05A9  02A7               	subwf	___aldiv@dividend+3,f
  3341     05AA                     l1537:
  3342     05AA  142A               	bsf	___aldiv@quotient,0
  3343     05AB                     l1539:
  3344     05AB  3001               	movlw	1
  3345     05AC                     u1175:
  3346     05AC  1003               	clrc
  3347     05AD  0CA3               	rrf	___aldiv@divisor+3,f
  3348     05AE  0CA2               	rrf	___aldiv@divisor+2,f
  3349     05AF  0CA1               	rrf	___aldiv@divisor+1,f
  3350     05B0  0CA0               	rrf	___aldiv@divisor,f
  3351     05B1  3EFF               	addlw	-1
  3352     05B2  1D03               	skipz
  3353     05B3  2DAC               	goto	u1175
  3354     05B4                     l1541:
  3355     05B4  3001               	movlw	1
  3356     05B5  02A8               	subwf	___aldiv@counter,f
  3357     05B6  1D03               	btfss	3,2
  3358     05B7  2DB9               	goto	u1181
  3359     05B8  2DBA               	goto	u1180
  3360     05B9                     u1181:
  3361     05B9  2D81               	goto	l1531
  3362     05BA                     u1180:
  3363     05BA                     l1543:
  3364     05BA  0829               	movf	___aldiv@sign,w
  3365     05BB  1903               	btfsc	3,2
  3366     05BC  2DBE               	goto	u1191
  3367     05BD  2DBF               	goto	u1190
  3368     05BE                     u1191:
  3369     05BE  2DCA               	goto	l1547
  3370     05BF                     u1190:
  3371     05BF                     l1545:
  3372     05BF  09AA               	comf	___aldiv@quotient,f
  3373     05C0  09AB               	comf	___aldiv@quotient+1,f
  3374     05C1  09AC               	comf	___aldiv@quotient+2,f
  3375     05C2  09AD               	comf	___aldiv@quotient+3,f
  3376     05C3  0AAA               	incf	___aldiv@quotient,f
  3377     05C4  1903               	skipnz
  3378     05C5  0AAB               	incf	___aldiv@quotient+1,f
  3379     05C6  1903               	skipnz
  3380     05C7  0AAC               	incf	___aldiv@quotient+2,f
  3381     05C8  1903               	skipnz
  3382     05C9  0AAD               	incf	___aldiv@quotient+3,f
  3383     05CA                     l1547:
  3384     05CA  082D               	movf	___aldiv@quotient+3,w
  3385     05CB  00A3               	movwf	?___aldiv+3
  3386     05CC  082C               	movf	___aldiv@quotient+2,w
  3387     05CD  00A2               	movwf	?___aldiv+2
  3388     05CE  082B               	movf	___aldiv@quotient+1,w
  3389     05CF  00A1               	movwf	?___aldiv+1
  3390     05D0  082A               	movf	___aldiv@quotient,w
  3391     05D1  00A0               	movwf	?___aldiv
  3392     05D2                     l420:
  3393     05D2  0008               	return
  3394     05D3                     __end_of___aldiv:
  3395                           
  3396                           	psect	text15
  3397     020F                     __ptext15:	
  3398 ;; *************** function _calculovolt *****************
  3399 ;; Defined at:
  3400 ;;		line 141 in file "main.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, pclath, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 1
  3421 ;; This function calls:
  3422 ;;		___lwdiv
  3423 ;;		___lwmod
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429     020F                     _calculovolt:	
  3430                           ;psect for function _calculovolt
  3431                           
  3432     020F                     l1621:	
  3433                           ;incstack = 0
  3434                           ; Regs used in _calculovolt: [wreg+status,2+status,0+pclath+cstack]
  3435                           
  3436                           
  3437                           ;main.c: 142:     u1 = VOLT1/40;
  3438     020F  3028               	movlw	40
  3439     0210  00F0               	movwf	___lwdiv@divisor
  3440     0211  3000               	movlw	0
  3441     0212  00F1               	movwf	___lwdiv@divisor+1
  3442     0213  1283               	bcf	3,5	;RP0=0, select bank0
  3443     0214  1303               	bcf	3,6	;RP1=0, select bank0
  3444     0215  086A               	movf	_VOLT1+1,w
  3445     0216  00F3               	movwf	___lwdiv@dividend+1
  3446     0217  0869               	movf	_VOLT1,w
  3447     0218  00F2               	movwf	___lwdiv@dividend
  3448     0219  120A  118A  22E7  120A  118A  	fcall	___lwdiv
  3449     021E  0871               	movf	?___lwdiv+1,w
  3450     021F  1283               	bcf	3,5	;RP0=0, select bank0
  3451     0220  1303               	bcf	3,6	;RP1=0, select bank0
  3452     0221  00E8               	movwf	_u1+1
  3453     0222  0870               	movf	?___lwdiv,w
  3454     0223  00E7               	movwf	_u1
  3455                           
  3456                           ;main.c: 143:     d1 = VOLT1%40;
  3457     0224  3028               	movlw	40
  3458     0225  00F8               	movwf	___lwmod@divisor
  3459     0226  3000               	movlw	0
  3460     0227  00F9               	movwf	___lwmod@divisor+1
  3461     0228  086A               	movf	_VOLT1+1,w
  3462     0229  00FB               	movwf	___lwmod@dividend+1
  3463     022A  0869               	movf	_VOLT1,w
  3464     022B  00FA               	movwf	___lwmod@dividend
  3465     022C  120A  118A  226B  120A  118A  	fcall	___lwmod
  3466     0231  0879               	movf	?___lwmod+1,w
  3467     0232  1283               	bcf	3,5	;RP0=0, select bank0
  3468     0233  1303               	bcf	3,6	;RP1=0, select bank0
  3469     0234  00E6               	movwf	_d1+1
  3470     0235  0878               	movf	?___lwmod,w
  3471     0236  00E5               	movwf	_d1
  3472     0237                     l89:
  3473     0237  0008               	return
  3474     0238                     __end_of_calculovolt:
  3475                           
  3476                           	psect	text16
  3477     026B                     __ptext16:	
  3478 ;; *************** function ___lwmod *****************
  3479 ;; Defined at:
  3480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  divisor         2    8[COMMON] unsigned int 
  3483 ;;  dividend        2   10[COMMON] unsigned int 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  counter         1   13[COMMON] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2    8[COMMON] unsigned int 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         4       0       0       0       0
  3496 ;;      Locals:         1       0       0       0       0
  3497 ;;      Temps:          1       0       0       0       0
  3498 ;;      Totals:         6       0       0       0       0
  3499 ;;Total ram usage:        6 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_calculovolt
  3505 ;;		_sprintf
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509     026B                     ___lwmod:	
  3510                           ;psect for function ___lwmod
  3511                           
  3512     026B                     l1361:	
  3513                           ;incstack = 0
  3514                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3515                           
  3516     026B  0878               	movf	___lwmod@divisor,w
  3517     026C  0479               	iorwf	___lwmod@divisor+1,w
  3518     026D  1903               	btfsc	3,2
  3519     026E  2A70               	goto	u811
  3520     026F  2A71               	goto	u810
  3521     0270                     u811:
  3522     0270  2AA0               	goto	l1379
  3523     0271                     u810:
  3524     0271                     l1363:
  3525     0271  01FD               	clrf	___lwmod@counter
  3526     0272  0AFD               	incf	___lwmod@counter,f
  3527     0273  2A7F               	goto	l1369
  3528     0274                     l1365:
  3529     0274  3001               	movlw	1
  3530     0275                     u825:
  3531     0275  1003               	clrc
  3532     0276  0DF8               	rlf	___lwmod@divisor,f
  3533     0277  0DF9               	rlf	___lwmod@divisor+1,f
  3534     0278  3EFF               	addlw	-1
  3535     0279  1D03               	skipz
  3536     027A  2A75               	goto	u825
  3537     027B                     l1367:
  3538     027B  3001               	movlw	1
  3539     027C  00FC               	movwf	??___lwmod
  3540     027D  087C               	movf	??___lwmod,w
  3541     027E  07FD               	addwf	___lwmod@counter,f
  3542     027F                     l1369:
  3543     027F  1FF9               	btfss	___lwmod@divisor+1,7
  3544     0280  2A82               	goto	u831
  3545     0281  2A83               	goto	u830
  3546     0282                     u831:
  3547     0282  2A74               	goto	l1365
  3548     0283                     u830:
  3549     0283                     l1371:
  3550     0283  0879               	movf	___lwmod@divisor+1,w
  3551     0284  027B               	subwf	___lwmod@dividend+1,w
  3552     0285  1D03               	skipz
  3553     0286  2A89               	goto	u845
  3554     0287  0878               	movf	___lwmod@divisor,w
  3555     0288  027A               	subwf	___lwmod@dividend,w
  3556     0289                     u845:
  3557     0289  1C03               	skipc
  3558     028A  2A8C               	goto	u841
  3559     028B  2A8D               	goto	u840
  3560     028C                     u841:
  3561     028C  2A93               	goto	l1375
  3562     028D                     u840:
  3563     028D                     l1373:
  3564     028D  0878               	movf	___lwmod@divisor,w
  3565     028E  02FA               	subwf	___lwmod@dividend,f
  3566     028F  0879               	movf	___lwmod@divisor+1,w
  3567     0290  1C03               	skipc
  3568     0291  03FB               	decf	___lwmod@dividend+1,f
  3569     0292  02FB               	subwf	___lwmod@dividend+1,f
  3570     0293                     l1375:
  3571     0293  3001               	movlw	1
  3572     0294                     u855:
  3573     0294  1003               	clrc
  3574     0295  0CF9               	rrf	___lwmod@divisor+1,f
  3575     0296  0CF8               	rrf	___lwmod@divisor,f
  3576     0297  3EFF               	addlw	-1
  3577     0298  1D03               	skipz
  3578     0299  2A94               	goto	u855
  3579     029A                     l1377:
  3580     029A  3001               	movlw	1
  3581     029B  02FD               	subwf	___lwmod@counter,f
  3582     029C  1D03               	btfss	3,2
  3583     029D  2A9F               	goto	u861
  3584     029E  2AA0               	goto	u860
  3585     029F                     u861:
  3586     029F  2A83               	goto	l1371
  3587     02A0                     u860:
  3588     02A0                     l1379:
  3589     02A0  087B               	movf	___lwmod@dividend+1,w
  3590     02A1  00F9               	movwf	?___lwmod+1
  3591     02A2  087A               	movf	___lwmod@dividend,w
  3592     02A3  00F8               	movwf	?___lwmod
  3593     02A4                     l627:
  3594     02A4  0008               	return
  3595     02A5                     __end_of___lwmod:
  3596                           
  3597                           	psect	text17
  3598     02E7                     __ptext17:	
  3599 ;; *************** function ___lwdiv *****************
  3600 ;; Defined at:
  3601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  divisor         2    0[COMMON] unsigned int 
  3604 ;;  dividend        2    2[COMMON] unsigned int 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  quotient        2    5[COMMON] unsigned int 
  3607 ;;  counter         1    7[COMMON] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2    0[COMMON] unsigned int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         4       0       0       0       0
  3618 ;;      Locals:         3       0       0       0       0
  3619 ;;      Temps:          1       0       0       0       0
  3620 ;;      Totals:         8       0       0       0       0
  3621 ;;Total ram usage:        8 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_calculovolt
  3627 ;;		_sprintf
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631     02E7                     ___lwdiv:	
  3632                           ;psect for function ___lwdiv
  3633                           
  3634     02E7                     l1335:	
  3635                           ;incstack = 0
  3636                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3637                           
  3638     02E7  01F5               	clrf	___lwdiv@quotient
  3639     02E8  01F6               	clrf	___lwdiv@quotient+1
  3640     02E9                     l1337:
  3641     02E9  0870               	movf	___lwdiv@divisor,w
  3642     02EA  0471               	iorwf	___lwdiv@divisor+1,w
  3643     02EB  1903               	btfsc	3,2
  3644     02EC  2AEE               	goto	u741
  3645     02ED  2AEF               	goto	u740
  3646     02EE                     u741:
  3647     02EE  2B26               	goto	l1357
  3648     02EF                     u740:
  3649     02EF                     l1339:
  3650     02EF  01F7               	clrf	___lwdiv@counter
  3651     02F0  0AF7               	incf	___lwdiv@counter,f
  3652     02F1  2AFD               	goto	l1345
  3653     02F2                     l1341:
  3654     02F2  3001               	movlw	1
  3655     02F3                     u755:
  3656     02F3  1003               	clrc
  3657     02F4  0DF0               	rlf	___lwdiv@divisor,f
  3658     02F5  0DF1               	rlf	___lwdiv@divisor+1,f
  3659     02F6  3EFF               	addlw	-1
  3660     02F7  1D03               	skipz
  3661     02F8  2AF3               	goto	u755
  3662     02F9                     l1343:
  3663     02F9  3001               	movlw	1
  3664     02FA  00F4               	movwf	??___lwdiv
  3665     02FB  0874               	movf	??___lwdiv,w
  3666     02FC  07F7               	addwf	___lwdiv@counter,f
  3667     02FD                     l1345:
  3668     02FD  1FF1               	btfss	___lwdiv@divisor+1,7
  3669     02FE  2B00               	goto	u761
  3670     02FF  2B01               	goto	u760
  3671     0300                     u761:
  3672     0300  2AF2               	goto	l1341
  3673     0301                     u760:
  3674     0301                     l1347:
  3675     0301  3001               	movlw	1
  3676     0302                     u775:
  3677     0302  1003               	clrc
  3678     0303  0DF5               	rlf	___lwdiv@quotient,f
  3679     0304  0DF6               	rlf	___lwdiv@quotient+1,f
  3680     0305  3EFF               	addlw	-1
  3681     0306  1D03               	skipz
  3682     0307  2B02               	goto	u775
  3683     0308  0871               	movf	___lwdiv@divisor+1,w
  3684     0309  0273               	subwf	___lwdiv@dividend+1,w
  3685     030A  1D03               	skipz
  3686     030B  2B0E               	goto	u785
  3687     030C  0870               	movf	___lwdiv@divisor,w
  3688     030D  0272               	subwf	___lwdiv@dividend,w
  3689     030E                     u785:
  3690     030E  1C03               	skipc
  3691     030F  2B11               	goto	u781
  3692     0310  2B12               	goto	u780
  3693     0311                     u781:
  3694     0311  2B19               	goto	l1353
  3695     0312                     u780:
  3696     0312                     l1349:
  3697     0312  0870               	movf	___lwdiv@divisor,w
  3698     0313  02F2               	subwf	___lwdiv@dividend,f
  3699     0314  0871               	movf	___lwdiv@divisor+1,w
  3700     0315  1C03               	skipc
  3701     0316  03F3               	decf	___lwdiv@dividend+1,f
  3702     0317  02F3               	subwf	___lwdiv@dividend+1,f
  3703     0318                     l1351:
  3704     0318  1475               	bsf	___lwdiv@quotient,0
  3705     0319                     l1353:
  3706     0319  3001               	movlw	1
  3707     031A                     u795:
  3708     031A  1003               	clrc
  3709     031B  0CF1               	rrf	___lwdiv@divisor+1,f
  3710     031C  0CF0               	rrf	___lwdiv@divisor,f
  3711     031D  3EFF               	addlw	-1
  3712     031E  1D03               	skipz
  3713     031F  2B1A               	goto	u795
  3714     0320                     l1355:
  3715     0320  3001               	movlw	1
  3716     0321  02F7               	subwf	___lwdiv@counter,f
  3717     0322  1D03               	btfss	3,2
  3718     0323  2B25               	goto	u801
  3719     0324  2B26               	goto	u800
  3720     0325                     u801:
  3721     0325  2B01               	goto	l1347
  3722     0326                     u800:
  3723     0326                     l1357:
  3724     0326  0876               	movf	___lwdiv@quotient+1,w
  3725     0327  00F1               	movwf	?___lwdiv+1
  3726     0328  0875               	movf	___lwdiv@quotient,w
  3727     0329  00F0               	movwf	?___lwdiv
  3728     032A                     l617:
  3729     032A  0008               	return
  3730     032B                     __end_of___lwdiv:
  3731                           
  3732                           	psect	text18
  3733     03D0                     __ptext18:	
  3734 ;; *************** function _Lcd_Init *****************
  3735 ;; Defined at:
  3736 ;;		line 63 in file "lcd.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0
  3752 ;;      Temps:          2       0       0       0       0
  3753 ;;      Totals:         2       0       0       0       0
  3754 ;;Total ram usage:        2 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 3
  3757 ;; This function calls:
  3758 ;;		_Lcd_Clear
  3759 ;;		_Lcd_Cmd
  3760 ;;		_Lcd_Port
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766     03D0                     _Lcd_Init:	
  3767                           ;psect for function _Lcd_Init
  3768                           
  3769     03D0                     l1597:	
  3770                           ;incstack = 0
  3771                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3772                           
  3773                           
  3774                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  3775     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  3776     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  3777     03D2  1108               	bcf	8,2	;volatile
  3778                           
  3779                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  3780     03D3  1188               	bcf	8,3	;volatile
  3781                           
  3782                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  3783     03D4  1208               	bcf	8,4	;volatile
  3784                           
  3785                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  3786     03D5  1288               	bcf	8,5	;volatile
  3787                           
  3788                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  3789     03D6  1308               	bcf	8,6	;volatile
  3790                           
  3791                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  3792     03D7  1388               	bcf	8,7	;volatile
  3793     03D8                     l1599:
  3794                           
  3795                           ;lcd.c: 71:     Lcd_Port(0x00);
  3796     03D8  3000               	movlw	0
  3797     03D9  120A  118A  21C8  120A  118A  	fcall	_Lcd_Port
  3798     03DE                     l1601:
  3799                           
  3800                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3801     03DE  301A               	movlw	26
  3802     03DF  00F5               	movwf	??_Lcd_Init+1
  3803     03E0  30F8               	movlw	248
  3804     03E1  00F4               	movwf	??_Lcd_Init
  3805     03E2                     u1377:
  3806     03E2  0BF4               	decfsz	??_Lcd_Init,f
  3807     03E3  2BE2               	goto	u1377
  3808     03E4  0BF5               	decfsz	??_Lcd_Init+1,f
  3809     03E5  2BE2               	goto	u1377
  3810     03E6  0000               	nop
  3811     03E7                     l1603:
  3812                           
  3813                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3814     03E7  3003               	movlw	3
  3815     03E8  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3816                           
  3817                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3818     03ED  3007               	movlw	7
  3819     03EE  00F5               	movwf	??_Lcd_Init+1
  3820     03EF  307D               	movlw	125
  3821     03F0  00F4               	movwf	??_Lcd_Init
  3822     03F1                     u1387:
  3823     03F1  0BF4               	decfsz	??_Lcd_Init,f
  3824     03F2  2BF1               	goto	u1387
  3825     03F3  0BF5               	decfsz	??_Lcd_Init+1,f
  3826     03F4  2BF1               	goto	u1387
  3827     03F5                     l1605:
  3828                           
  3829                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  3830     03F5  3003               	movlw	3
  3831     03F6  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3832     03FB                     l1607:
  3833                           
  3834                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3835     03FB  300F               	movlw	15
  3836     03FC  00F5               	movwf	??_Lcd_Init+1
  3837     03FD  3047               	movlw	71
  3838     03FE  00F4               	movwf	??_Lcd_Init
  3839     03FF                     u1397:
  3840     03FF  0BF4               	decfsz	??_Lcd_Init,f
  3841     0400  2BFF               	goto	u1397
  3842     0401  0BF5               	decfsz	??_Lcd_Init+1,f
  3843     0402  2BFF               	goto	u1397
  3844     0403  2C04               	nop2
  3845                           
  3846                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3847     0404  3003               	movlw	3
  3848     0405  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3849                           
  3850                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  3851     040A  3002               	movlw	2
  3852     040B  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3853                           
  3854                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  3855     0410  3002               	movlw	2
  3856     0411  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3857                           
  3858                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  3859     0416  3008               	movlw	8
  3860     0417  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3861                           
  3862                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  3863     041C  3000               	movlw	0
  3864     041D  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3865                           
  3866                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  3867     0422  300C               	movlw	12
  3868     0423  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3869                           
  3870                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  3871     0428  3000               	movlw	0
  3872     0429  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3873                           
  3874                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  3875     042E  3006               	movlw	6
  3876     042F  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3877                           
  3878                           ;lcd.c: 85:     Lcd_Clear();
  3879     0434  120A  118A  218B  120A  118A  	fcall	_Lcd_Clear
  3880     0439                     l180:
  3881     0439  0008               	return
  3882     043A                     __end_of_Lcd_Init:
  3883                           
  3884                           	psect	text19
  3885     018B                     __ptext19:	
  3886 ;; *************** function _Lcd_Clear *****************
  3887 ;; Defined at:
  3888 ;;		line 20 in file "lcd.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, pclath, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 2
  3909 ;; This function calls:
  3910 ;;		_Lcd_Cmd
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;;		_Lcd_Init
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     018B                     _Lcd_Clear:	
  3918                           ;psect for function _Lcd_Clear
  3919                           
  3920     018B                     l1383:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3923                           
  3924                           
  3925                           ;lcd.c: 22:     Lcd_Cmd(0);
  3926     018B  3000               	movlw	0
  3927     018C  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3928                           
  3929                           ;lcd.c: 23:     Lcd_Cmd(1);
  3930     0191  3001               	movlw	1
  3931     0192  120A  118A  21AE  120A  118A  	fcall	_Lcd_Cmd
  3932     0197                     l167:
  3933     0197  0008               	return
  3934     0198                     __end_of_Lcd_Clear:
  3935                           
  3936                           	psect	text20
  3937     01AE                     __ptext20:	
  3938 ;; *************** function _Lcd_Cmd *****************
  3939 ;; Defined at:
  3940 ;;		line 11 in file "lcd.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  a               1    wreg     unsigned char 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  a               1    3[COMMON] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0, pclath, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       0       0       0
  3955 ;;      Locals:         1       0       0       0       0
  3956 ;;      Temps:          2       0       0       0       0
  3957 ;;      Totals:         3       0       0       0       0
  3958 ;;Total ram usage:        3 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 1
  3961 ;; This function calls:
  3962 ;;		_Lcd_Port
  3963 ;; This function is called by:
  3964 ;;		_Lcd_Clear
  3965 ;;		_Lcd_Set_Cursor
  3966 ;;		_Lcd_Init
  3967 ;;		_Lcd_Shift_Right
  3968 ;;		_Lcd_Shift_Left
  3969 ;;		_Lcd_Blink
  3970 ;;		_Lcd_NoBlink
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974     01AE                     _Lcd_Cmd:	
  3975                           ;psect for function _Lcd_Cmd
  3976                           
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3980                           ;Lcd_Cmd@a stored from wreg
  3981     01AE  00F3               	movwf	Lcd_Cmd@a
  3982     01AF                     l1305:
  3983                           
  3984                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTDbits.RD2 = 0;
  3985     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  3986     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  3987     01B1  1108               	bcf	8,2	;volatile
  3988     01B2                     l1307:
  3989                           
  3990                           ;lcd.c: 14:     Lcd_Port(a);
  3991     01B2  0873               	movf	Lcd_Cmd@a,w
  3992     01B3  120A  118A  21C8  120A  118A  	fcall	_Lcd_Port
  3993     01B8                     l1309:
  3994                           
  3995                           ;lcd.c: 15:     PORTDbits.RD3 = 1;
  3996     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3997     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3998     01BA  1588               	bsf	8,3	;volatile
  3999     01BB                     l1311:
  4000                           
  4001                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4002     01BB  3006               	movlw	6
  4003     01BC  00F2               	movwf	??_Lcd_Cmd+1
  4004     01BD  3030               	movlw	48
  4005     01BE  00F1               	movwf	??_Lcd_Cmd
  4006     01BF                     u1407:
  4007     01BF  0BF1               	decfsz	??_Lcd_Cmd,f
  4008     01C0  29BF               	goto	u1407
  4009     01C1  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4010     01C2  29BF               	goto	u1407
  4011     01C3  0000               	nop
  4012     01C4                     l1313:
  4013                           
  4014                           ;lcd.c: 17:     PORTDbits.RD3 = 0;
  4015     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  4016     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  4017     01C6  1188               	bcf	8,3	;volatile
  4018     01C7                     l164:
  4019     01C7  0008               	return
  4020     01C8                     __end_of_Lcd_Cmd:
  4021                           
  4022                           	psect	text21
  4023     01C8                     __ptext21:	
  4024 ;; *************** function _Lcd_Port *****************
  4025 ;; Defined at:
  4026 ;;		line 3 in file "lcd.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  a               1    wreg     unsigned char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  a               1    0[COMMON] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       0       0       0
  4041 ;;      Locals:         1       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0
  4043 ;;      Totals:         1       0       0       0       0
  4044 ;;Total ram usage:        1 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_Lcd_Cmd
  4050 ;;		_Lcd_Init
  4051 ;;		_Lcd_Write_Char
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055     01C8                     _Lcd_Port:	
  4056                           ;psect for function _Lcd_Port
  4057                           
  4058                           
  4059                           ;incstack = 0
  4060                           ; Regs used in _Lcd_Port: [wreg]
  4061                           ;Lcd_Port@a stored from wreg
  4062     01C8  00F0               	movwf	Lcd_Port@a
  4063     01C9                     l1295:
  4064                           
  4065                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTDbits.RD4 = 1)
      +                           : (PORTDbits.RD4 = 0);
  4066     01C9  1C70               	btfss	Lcd_Port@a,0
  4067     01CA  29CC               	goto	u691
  4068     01CB  29CD               	goto	u690
  4069     01CC                     u691:
  4070     01CC  29D1               	goto	l146
  4071     01CD                     u690:
  4072     01CD                     l1297:
  4073     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  4074     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  4075     01CF  1608               	bsf	8,4	;volatile
  4076     01D0  29D4               	goto	l148
  4077     01D1                     l146:
  4078     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4079     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4080     01D3  1208               	bcf	8,4	;volatile
  4081     01D4                     l148:
  4082                           
  4083                           ;lcd.c: 6:     (a & 2) ? (PORTDbits.RD5 = 1) : (PORTDbits.RD5 = 0);
  4084     01D4  1CF0               	btfss	Lcd_Port@a,1
  4085     01D5  29D7               	goto	u701
  4086     01D6  29D8               	goto	u700
  4087     01D7                     u701:
  4088     01D7  29DA               	goto	l150
  4089     01D8                     u700:
  4090     01D8                     l1299:
  4091     01D8  1688               	bsf	8,5	;volatile
  4092     01D9  29DB               	goto	l152
  4093     01DA                     l150:
  4094     01DA  1288               	bcf	8,5	;volatile
  4095     01DB                     l152:
  4096                           
  4097                           ;lcd.c: 7:     (a & 4) ? (PORTDbits.RD6 = 1) : (PORTDbits.RD6 = 0);
  4098     01DB  1D70               	btfss	Lcd_Port@a,2
  4099     01DC  29DE               	goto	u711
  4100     01DD  29DF               	goto	u710
  4101     01DE                     u711:
  4102     01DE  29E1               	goto	l154
  4103     01DF                     u710:
  4104     01DF                     l1301:
  4105     01DF  1708               	bsf	8,6	;volatile
  4106     01E0  29E2               	goto	l156
  4107     01E1                     l154:
  4108     01E1  1308               	bcf	8,6	;volatile
  4109     01E2                     l156:
  4110                           
  4111                           ;lcd.c: 8:     (a & 8) ? (PORTDbits.RD7 = 1) : (PORTDbits.RD7 = 0);
  4112     01E2  1DF0               	btfss	Lcd_Port@a,3
  4113     01E3  29E5               	goto	u721
  4114     01E4  29E6               	goto	u720
  4115     01E5                     u721:
  4116     01E5  29E8               	goto	l158
  4117     01E6                     u720:
  4118     01E6                     l1303:
  4119     01E6  1788               	bsf	8,7	;volatile
  4120     01E7  29E9               	goto	l161
  4121     01E8                     l158:
  4122     01E8  1388               	bcf	8,7	;volatile
  4123     01E9                     l161:
  4124     01E9  0008               	return
  4125     01EA                     __end_of_Lcd_Port:
  4126     007E                     btemp	set	126	;btemp
  4127     007E                     wtemp0	set	126
  4128                           
  4129                           	psect	idloc
  4130                           
  4131                           ;Config register IDLOC0 @ 0x2000
  4132                           ;	unspecified, using default values
  4133     2000                     	org	8192
  4134     2000  3FFF               	dw	16383
  4135                           
  4136                           ;Config register IDLOC1 @ 0x2001
  4137                           ;	unspecified, using default values
  4138     2001                     	org	8193
  4139     2001  3FFF               	dw	16383
  4140                           
  4141                           ;Config register IDLOC2 @ 0x2002
  4142                           ;	unspecified, using default values
  4143     2002                     	org	8194
  4144     2002  3FFF               	dw	16383
  4145                           
  4146                           ;Config register IDLOC3 @ 0x2003
  4147                           ;	unspecified, using default values
  4148     2003                     	org	8195
  4149     2003  3FFF               	dw	16383
  4150                           
  4151                           	psect	config
  4152                           
  4153                           ;Config register CONFIG1 @ 0x2007
  4154                           ;	Oscillator Selection bits
  4155                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4156                           ;	Watchdog Timer Enable bit
  4157                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4158                           ;	Power-up Timer Enable bit
  4159                           ;	PWRTE = OFF, PWRT disabled
  4160                           ;	RE3/MCLR pin function select bit
  4161                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4162                           ;	Code Protection bit
  4163                           ;	CP = OFF, Program memory code protection is disabled
  4164                           ;	Data Code Protection bit
  4165                           ;	CPD = OFF, Data memory code protection is disabled
  4166                           ;	Brown Out Reset Selection bits
  4167                           ;	BOREN = OFF, BOR disabled
  4168                           ;	Internal External Switchover bit
  4169                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4170                           ;	Fail-Safe Clock Monitor Enabled bit
  4171                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4172                           ;	Low Voltage Programming Enable bit
  4173                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4174                           ;	In-Circuit Debugger Mode bit
  4175                           ;	DEBUG = 0x1, unprogramme  4176     2007                     	org	8199
  4177     2007  20D4               	dw	8404
  4178                           
  4179                           ;Config register CONFIG2 @ 0x2008
  4180                           ;	Brown-out Reset Selection bit
  4181                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4182                           ;	Flash Program Memory Self Write Enable bits
  4183                           ;	WRT = OFF, Write protection off
  4184     2008                     	org	8200
  4185     2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      77
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[2]), buffer(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_spiInit
    _map->___aldiv
    ___aldiv->___lmul
    _calculovolt->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_map
    _valorLCD->_sprintf
    _map->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8134
                                             50 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _calculovolt
                                _map
                              _setup
                        _setupINTOSC
                            _spiRead
                           _spiWrite
                           _valorLCD
 ---------------------------------------------------------------------------------
 (1) _valorLCD                                             0     0      0    3321
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1643
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     648
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1030
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     360
                                              4 COMMON     2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    1230
                                             14 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calculovolt                                          0     0      0     929
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _calculovolt
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _setup
     _spiInit
   _setupINTOSC
   _spiRead
     _spiReceiveWait
   _spiWrite
   _valorLCD
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 00:21:06 2023

                       pc 0002               _SSPSTATbits 0094                        l83 020E  
                      l94 037C                        l86 04A8                        l95 0388  
                      l96 0394                        l89 0237                        l97 03A0  
                      _V1 006C                        l98 03AC                        _V2 006B  
                      l99 03B8                        _d1 0065                        _d2 0061  
                      _u1 0067                        _u2 0063                        fsr 0004  
                     l100 03C3                       l102 03CF                       l122 0173  
                     l204 067A                       l125 0179                       l150 01DA  
                     l118 01A8                       l119 01AD                       l152 01DB  
                     l136 018A                       l128 0172                       l161 01E9  
                     l154 01E1                       l146 01D1                       l410 054A  
                     l156 01E2                       l148 01D4                       l164 01C7  
                     l180 0439                       l420 05D2                       l173 0535  
                     l341 07EA                       l158 01E8                       l167 0197  
                     l183 026A                       l177 0535                       l189 02E6  
                     l359 0370                       l617 032A                       l627 02A4  
                     u700 01D8                       u701 01D7                       u710 01DF  
                     u711 01DE                       u720 01E6                       u800 0326  
                     u721 01E5                       u801 0325                       u810 0271  
                     u811 0270                       u740 02EF                       u741 02EE  
                     u830 0283                       u910 04F5                       u831 0282  
                     u911 04F4                       u735 0245                       u760 0301  
                     u840 028D                       u761 0300                       u841 028C  
                     u825 0275                       u905 04D8                       u690 01CD  
                     u930 0518                       u691 01CC                       u755 02F3  
                     u931 0517                       u780 0312                       u860 02A0  
                     u781 0311                       u861 029F                       u845 0289  
                     u925 04FB                       u870 04AF                       u950 02B2  
                     u775 0302                       u855 0294                       u871 04AE  
                     u960 02D4                       u785 030E                       u945 051E  
                     u890 04D2                       u970 02E6                       u795 031A  
                     u891 04D1                       u971 02E5                       u980 01A0  
                     u981 019F                       u885 04B5                       u990 0736  
                     u991 0735                       _map 05D3                       fsr0 0004  
                     indf 0000                      l1301 01DF                      l1303 01E6  
                    l1311 01BB                      l1313 01C4                      l1305 01AF  
                    l1401 04E2                      l1321 0250                      l1307 01B2  
                    l1411 0505                      l1403 04E8                      l1331 0263  
                    l1323 0253                      l1315 0239                      l1309 01B8  
                    l1341 02F2                      l1501 0337                      l1421 0528  
                    l1413 050B                      l1405 04EF                      l1333 0267  
                    l1325 0257                      l1317 023F                      l1351 0318  
                    l1343 02F9                      l1335 02E7                      l1511 0536  
                    l1503 034E                      l1423 052E                      l1407 04F5  
                    l1415 0512                      l1327 025A                      l1319 0242  
                    l1431 02CA                      l1601 03DE                      l1353 0319  
                    l1345 02FD                      l1337 02E9                      l1361 026B  
                    l1521 055D                      l1513 0539                      l1505 0357  
                    l1441 01A7                      l1433 0199                      l1417 0518  
                    l1409 0502                      l1329 0260                      l1425 02A5  
                    l1603 03E7                      l1355 0320                      l1347 0301  
                    l1339 02EF                      l1371 0283                      l1363 0271  
                    l1531 0581                      l1523 0565                      l1515 053D  
                    l1507 0368                      l1435 01A0                      l1611 0182  
                    l1419 0525                      l1427 02A8                      l1451 0740  
                    l1443 072D                      l1605 03F5                      l1349 0312  
                    l1357 0326                      l1373 028D                      l1365 0274  
                    l1621 020F                      l1541 05B4                      l1533 058A  
                    l1525 056D                      l1517 054E                      l1437 01A2  
                    l1613 0187                      l1429 02C4                      l1461 0769  
                    l1453 0742                      l1445 0730                      l1295 01C9  
                    l1383 018B                      l1607 03FB                      l1375 0293  
                    l1367 027B                      l1535 059C                      l1527 0570  
                    l1543 05BA                      l1519 0559                      l1439 01A4  
                    l1551 0372                      l1391 04BF                      l1463 076D  
                    l1447 0736                      l1631 046A                      l1623 043A  
                    l1297 01CD                      l1377 029A                      l1369 027F  
                    l1545 05BF                      l1537 05AA                      l1529 057D  
                    l1617 05D3                      l1561 03A6                      l1553 0378  
                    l1609 016E                      l1393 04C5                      l1385 04AA  
                    l1481 07C9                      l1473 078B                      l1457 0747  
                    l1449 073B                      l1633 0489                      l1625 0442  
                    l1641 068B                      l1299 01D8                      l1379 02A0  
                    l1547 05CA                      l1539 05AB                      l1571 01EA  
                    l1563 03B2                      l1555 0382                      l1387 04AF  
                    l1395 04CC                      l1483 07CD                      l1475 0795  
                    l1459 0761                      l1635 0491                      l1627 0450  
                    l1651 06AD                      l1643 0692                      l1581 01F4  
                    l1573 01ED                      l1565 03BD                      l1557 038E  
                    l1397 04D2                      l1389 04BC                      l1477 0798  
                    l1469 076F                      l1485 07D6                      l1637 049F  
                    l1629 0461                      l1661 06FE                      l1653 06B0  
                    l1645 0697                      l1591 01FB                      l1583 01F5  
                    l1575 01F1                      l1567 03C8                      l1559 039A  
                    l1495 0173                      l1399 04DF                      l1479 07C4  
                    l1487 07E6                      l1663 0708                      l1655 06B8  
                    l1647 069F                      l1639 067B                      l1497 032B  
                    l1593 01FC                      l1585 01F8                      l1577 01F2  
                    l1569 03CC                      l1665 070E                      l1657 06BE  
                    l1649 06A8                      l1499 0333                      l1595 0205  
                    l1587 01F9                      l1579 01F3                      l1667 071B  
                    l1659 06C6                      l1597 03D0                      l1589 01FA  
                    l1669 0723                      l1599 03D8                      l1699 0759  
                    ?_map 002E                      STR_1 001D                      STR_2 0033  
                    STR_3 0035                      STR_4 002E                      STR_5 0031  
                    STR_6 002E                      STR_7 002E                      u1000 078A  
                    u1001 0789                      u1010 0795                      u1011 0794  
                    u1100 053D                      u1020 07D6                      u1101 053C  
                    u1021 07D5                      u1005 0786                      u1110 054E  
                    u1030 07E6                      u1111 054D                      u1031 07E5  
                    u1120 056D                      u1200 0378                      u1040 0179  
                    u1121 056C                      u1201 0377                      u1041 0178  
                    u1050 0337                      u1210 0382                      u1051 0336  
                    u1211 0381                      u1140 0581                      u1220 038E  
                    u1141 0580                      u1061 0340                      u1301 062C  
                    u1221 038D                      u1062 0347                      u1302 062D  
                    u1230 039A                      u1135 0572                      u1063 034E  
                    u1303 0632                      u1231 0399                      u1160 059C  
                    u1304 0633                      u1240 03A6                      u1161 059B  
                    u1305 0638                      u1241 03A5                      u1090 0368  
                    u1306 0639                      u1250 03B2                      u1155 0583  
                    u1091 0367                      u1075 0350                      u1251 03B1  
                    u1180 05BA                      u1260 03BD                      u1181 05B9  
                    u1165 0598                      u1085 0358                      u1261 03BC  
                    u1317 068F                      u1190 05BF                      u1270 03C8  
                    u1407 01BF                      u1191 05BE                      u1175 05AC  
                    u1271 03C7                      u1327 06B4                      u1281 05E4  
                    u1337 071F                      u1282 05E5                      u1291 0608  
                    u1283 05EA                      u1347 0255                      u1292 0609  
                    u1284 05EB                      u1293 060E                      u1285 05F0  
                    u1357 0265                      u1294 060F                      u1286 05F1  
                    u1295 0614                      u1367 0209                      u1296 0615  
                    u1377 03E2                      u1387 03F1                      u1397 03FF  
       ?_Lcd_Write_String 0075                      _cont 005F                      _main 067B  
                    map@x 002E                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 01C8                     ??_map 0042  
         __end_of___aldiv 05D3                     ?_main 0070           __end_of___lwdiv 032B  
         __end_of___lwmod 02A5                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _VOLT1 0069  
     ___lmul@multiplicand 0074           __end_of_dpowers 001D                     _setup 01EA  
                   pclath 000A           __end_of_spiInit 01AE           __end_of_spiRead 018B  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07EB  
        __end_of_Lcd_Init 043A          __end_of_Lcd_Port 01EA           __initialization 07EB  
            __end_of_main 072A                    ??_main 0052                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
                  ___lmul 032B                 ??___aldiv 007D                 ??___lwdiv 0074  
               ??___lwmod 007C                    _buffer 00A0              ?_setupINTOSC 0070  
        __end_of_valorLCD 04A9          __end_of_spiWrite 0173                 ??_spiInit 0073  
               ??_spiRead 0070                 ??_sprintf 0023           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0198            __pcstackCOMMON 0070  
           __end_of_setup 020F            _Lcd_Set_Cursor 04A9                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0074                __pbssBANK0 0056  
              __pbssBANK1 00A0                __pmaintext 067B                   ?___lmul 0070  
          ___lmul@product 0079    __end_of_Lcd_Set_Cursor 0536                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 0238                   _Lcd_Cmd 01AE                 ?_valorLCD 0070  
               ?_spiWrite 0070                   ___aldiv 0536                   ___lwdiv 02E7  
                 ___lwmod 026B                 _ANSELbits 0188           ?_Lcd_Set_Cursor 0074  
           ??_calculovolt 007E                   __ptext1 043A                   __ptext2 072A  
                 __ptext3 02A5                   __ptext4 0238                   __ptext5 04A9  
                 __ptext6 016D                   __ptext7 0182                   __ptext8 0173  
                 __ptext9 0371                   _dpowers 0013          ___aldiv@dividend 0024  
                 _spiInit 0198                   _spiRead 0182                   map@eMax 0036  
                 map@eMin 0032                   map@sMax 003E                   map@sMin 003A  
                 _sprintf 072A                   clrloop0 017B    __end_of_Lcd_Write_Char 026B  
    end_of_initialization 07FC                ??_valorLCD 007E          ___aldiv@quotient 002A  
              ??_spiWrite 0070                 Lcd_Port@a 0070                 _PORTAbits 0005  
               _PORTCbits 0007                 _PORTDbits 0008                 _TRISAbits 0085  
               _TRISCbits 0087                 _TRISDbits 0088       __end_of_calculovolt 0238  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A                 _Lcd_Clear 018B            _spiReceiveWait 0173  
          __end_of___lmul 0371          _Lcd_Write_String 02A5       start_initialization 07EB  
             __end_of_map 067B    __end_of_spiReceiveWait 017A                ?_Lcd_Clear 0070  
                ??___lmul 0078           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
             _calculovolt 020F                 ___latbits 0002             __pcstackBANK0 0020  
         setupINTOSC@IRCF 0070                  ?_Lcd_Cmd 0070               sprintf@flag 0026  
             sprintf@prec 002A          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___aldiv 0020                  ?___lwdiv 0070  
                ?___lwmod 0078                 __pstrings 0003                  ?_spiInit 0070  
                ?_spiRead 0070          ___lwdiv@quotient 0075                  ?_sprintf 0020  
         ___aldiv@divisor 0020      spiInit@sTransmitEdge 0072           ___aldiv@counter 0028  
               clear_ram0 017A                  _PIE1bits 008C        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073                  _PIR1bits 000C               ??_Lcd_Clear 0074  
              _ADCON0bits 001F               __stringbase 0012                _ADCON1bits 009F  
           ??_setupINTOSC 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 03D0  
                _Lcd_Port 01C8         ___lmul@multiplier 0070  __end_of_Lcd_Write_String 02E7  
      __end_of__stringtab 0013                sprintf@val 0028           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 01EA                  __ptext11 0198  
                __ptext20 01AE                  __ptext12 05D3                  __ptext21 01C8  
                __ptext13 032B                  __ptext14 0536                  __ptext15 020F  
                __ptext16 026B                  __ptext17 02E7                  __ptext18 03D0  
                __ptext19 018B       __end_of_setupINTOSC 03D0                  _contador 0056  
                _valorLCD 043A                  _spiWrite 016D              spiInit@sType 0073  
       spiInit@sClockIdle 0071                  _voltaje1 005C                  _voltaje2 0059  
            ?_calculovolt 0070                _INTCONbits 000B        Lcd_Write_Char@temp 0072  
               sprintf@ap 0027                 sprintf@sp 002B          ___lwmod@dividend 007A  
        ??_spiReceiveWait 0070                 stringcode 000D                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079               _setupINTOSC 0371                  sprintf@c 002C  
                sprintf@f 0020           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                stringdir 000D                  stringtab 0003              ___aldiv@sign 0029  
