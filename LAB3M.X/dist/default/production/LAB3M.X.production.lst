

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 15:41:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461     0000                     	;# 
   462     0001                     	;# 
   463     0002                     	;# 
   464     0003                     	;# 
   465     0004                     	;# 
   466     0005                     	;# 
   467     0006                     	;# 
   468     0007                     	;# 
   469     0008                     	;# 
   470     0009                     	;# 
   471     000A                     	;# 
   472     000B                     	;# 
   473     000C                     	;# 
   474     000D                     	;# 
   475     000E                     	;# 
   476     000E                     	;# 
   477     000F                     	;# 
   478     0010                     	;# 
   479     0011                     	;# 
   480     0012                     	;# 
   481     0013                     	;# 
   482     0014                     	;# 
   483     0015                     	;# 
   484     0015                     	;# 
   485     0016                     	;# 
   486     0017                     	;# 
   487     0018                     	;# 
   488     0019                     	;# 
   489     001A                     	;# 
   490     001B                     	;# 
   491     001B                     	;# 
   492     001C                     	;# 
   493     001D                     	;# 
   494     001E                     	;# 
   495     001F                     	;# 
   496     0081                     	;# 
   497     0085                     	;# 
   498     0086                     	;# 
   499     0087                     	;# 
   500     0088                     	;# 
   501     0089                     	;# 
   502     008C                     	;# 
   503     008D                     	;# 
   504     008E                     	;# 
   505     008F                     	;# 
   506     0090                     	;# 
   507     0091                     	;# 
   508     0092                     	;# 
   509     0093                     	;# 
   510     0093                     	;# 
   511     0093                     	;# 
   512     0094                     	;# 
   513     0095                     	;# 
   514     0096                     	;# 
   515     0097                     	;# 
   516     0098                     	;# 
   517     0099                     	;# 
   518     009A                     	;# 
   519     009B                     	;# 
   520     009C                     	;# 
   521     009D                     	;# 
   522     009E                     	;# 
   523     009F                     	;# 
   524     0105                     	;# 
   525     0107                     	;# 
   526     0108                     	;# 
   527     0109                     	;# 
   528     010C                     	;# 
   529     010C                     	;# 
   530     010D                     	;# 
   531     010E                     	;# 
   532     010F                     	;# 
   533     0185                     	;# 
   534     0187                     	;# 
   535     0188                     	;# 
   536     0189                     	;# 
   537     018C                     	;# 
   538     018D                     	;# 
   539     0000                     	;# 
   540     0001                     	;# 
   541     0002                     	;# 
   542     0003                     	;# 
   543     0004                     	;# 
   544     0005                     	;# 
   545     0006                     	;# 
   546     0007                     	;# 
   547     0008                     	;# 
   548     0009                     	;# 
   549     000A                     	;# 
   550     000B                     	;# 
   551     000C                     	;# 
   552     000D                     	;# 
   553     000E                     	;# 
   554     000E                     	;# 
   555     000F                     	;# 
   556     0010                     	;# 
   557     0011                     	;# 
   558     0012                     	;# 
   559     0013                     	;# 
   560     0014                     	;# 
   561     0015                     	;# 
   562     0015                     	;# 
   563     0016                     	;# 
   564     0017                     	;# 
   565     0018                     	;# 
   566     0019                     	;# 
   567     001A                     	;# 
   568     001B                     	;# 
   569     001B                     	;# 
   570     001C                     	;# 
   571     001D                     	;# 
   572     001E                     	;# 
   573     001F                     	;# 
   574     0081                     	;# 
   575     0085                     	;# 
   576     0086                     	;# 
   577     0087                     	;# 
   578     0088                     	;# 
   579     0089                     	;# 
   580     008C                     	;# 
   581     008D                     	;# 
   582     008E                     	;# 
   583     008F                     	;# 
   584     0090                     	;# 
   585     0091                     	;# 
   586     0092                     	;# 
   587     0093                     	;# 
   588     0093                     	;# 
   589     0093                     	;# 
   590     0094                     	;# 
   591     0095                     	;# 
   592     0096                     	;# 
   593     0097                     	;# 
   594     0098                     	;# 
   595     0099                     	;# 
   596     009A                     	;# 
   597     009B                     	;# 
   598     009C                     	;# 
   599     009D                     	;# 
   600     009E                     	;# 
   601     009F                     	;# 
   602     0105                     	;# 
   603     0107                     	;# 
   604     0108                     	;# 
   605     0109                     	;# 
   606     010C                     	;# 
   607     010C                     	;# 
   608     010D                     	;# 
   609     010E                     	;# 
   610     010F                     	;# 
   611     0185                     	;# 
   612     0187                     	;# 
   613     0188                     	;# 
   614     0189                     	;# 
   615     018C                     	;# 
   616     018D                     	;# 
   617                           
   618                           	psect	strings
   619     071A                     __pstrings:
   620     071A                     stringtab:
   621     071A                     __stringtab:
   622                           
   623                           ;	String table - string pointers are 1 byte each
   624     071A  1BFF               	btfsc	btemp+1,7
   625     071B  2F24               	ljmp	stringcode
   626     071C  1383               	bcf	3,7
   627     071D  187F               	btfsc	btemp+1,0
   628     071E  1783               	bsf	3,7
   629     071F  0800               	movf	0,w
   630     0720  0A84               	incf	4,f
   631     0721  1903               	skipnz
   632     0722  0AFF               	incf	btemp+1,f
   633     0723  0008               	return
   634     0724                     stringcode:
   635     0724                     stringdir:
   636     0724  3007               	movlw	high stringdir
   637     0725  008A               	movwf	10
   638     0726  0804               	movf	4,w
   639     0727  0A84               	incf	4,f
   640     0728  0782               	addwf	2,f
   641     0729                     __stringbase:
   642     0729  3400               	retlw	0
   643     072A                     __end_of__stringtab:
   644     072A                     _dpowers:
   645     072A  3401               	retlw	1
   646     072B  3400               	retlw	0
   647     072C  340A               	retlw	10
   648     072D  3400               	retlw	0
   649     072E  3464               	retlw	100
   650     072F  3400               	retlw	0
   651     0730  34E8               	retlw	232
   652     0731  3403               	retlw	3
   653     0732  3410               	retlw	16
   654     0733  3427               	retlw	39
   655     0734                     __end_of_dpowers:
   656     001F                     _ADCON0bits	set	31
   657     0005                     _PORTAbits	set	5
   658     0008                     _PORTDbits	set	8
   659     0014                     _SSPCON	set	20
   660     0009                     _PORTE	set	9
   661     0008                     _PORTD	set	8
   662     0006                     _PORTB	set	6
   663     0005                     _PORTA	set	5
   664     0013                     _SSPBUF	set	19
   665     0007                     _PORTCbits	set	7
   666     000B                     _INTCONbits	set	11
   667     000C                     _PIR1bits	set	12
   668     009F                     _ADCON1bits	set	159
   669     0085                     _TRISAbits	set	133
   670     0088                     _TRISDbits	set	136
   671     0094                     _SSPSTAT	set	148
   672     008F                     _OSCCONbits	set	143
   673     008C                     _PIE1bits	set	140
   674     0088                     _TRISD	set	136
   675     0087                     _TRISCbits	set	135
   676     0085                     _TRISA	set	133
   677     0086                     _TRISB	set	134
   678     0094                     _SSPSTATbits	set	148
   679     043B                     _TRISC3	set	1083
   680     043D                     _TRISC5	set	1085
   681     0188                     _ANSELbits	set	392
   682     0189                     _ANSELH	set	393
   683     0734                     STR_1:
   684     0734  3453               	retlw	83	;'S'
   685     0735  3431               	retlw	49	;'1'
   686     0736  343A               	retlw	58	;':'
   687     0737  3420               	retlw	32	;' '
   688     0738  3420               	retlw	32	;' '
   689     0739  3420               	retlw	32	;' '
   690     073A  3420               	retlw	32	;' '
   691     073B  3453               	retlw	83	;'S'
   692     073C  3432               	retlw	50	;'2'
   693     073D  343A               	retlw	58	;':'
   694     073E  3420               	retlw	32	;' '
   695     073F  3420               	retlw	32	;' '
   696     0740  3420               	retlw	32	;' '
   697     0741  3453               	retlw	83	;'S'
   698     0742  3433               	retlw	51	;'3'
   699     0743  343A               	retlw	58	;':'
   700     0744  3400               	retlw	0
   701     0745                     STR_2:
   702     0745  3425               	retlw	37	;'%'
   703     0746  3475               	retlw	117	;'u'
   704     0747  3400               	retlw	0
   705     0748                     STR_3:
   706     0748  342E               	retlw	46	;'.'
   707     0749  3400               	retlw	0
   708     0748                     
   709                           	psect	cinit
   710     000F                     start_initialization:	
   711                           ; #config settings
   712                           
   713     000F                     __initialization:
   714                           
   715                           ; Clear objects allocated to BANK0
   716     000F  1383               	bcf	3,7	;select IRP bank0
   717     0010  305A               	movlw	low __pbssBANK0
   718     0011  0084               	movwf	4
   719     0012  306A               	movlw	low (__pbssBANK0+16)
   720     0013  120A  118A  27F3  120A  118A  	fcall	clear_ram0
   721                           
   722                           ; Clear objects allocated to BANK1
   723     0018  30A0               	movlw	low __pbssBANK1
   724     0019  0084               	movwf	4
   725     001A  30B4               	movlw	low (__pbssBANK1+20)
   726     001B  120A  118A  27F3  120A  118A  	fcall	clear_ram0
   727     0020                     end_of_initialization:	
   728                           ;End of C runtime variable initialization code
   729                           
   730     0020                     __end_of__initialization:
   731     0020  0183               	clrf	3
   732     0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   733                           
   734                           	psect	bssBANK0
   735     005A                     __pbssBANK0:
   736     005A                     _cont:
   737     005A                     	ds	2
   738     005C                     _d2:
   739     005C                     	ds	2
   740     005E                     _u2:
   741     005E                     	ds	2
   742     0060                     _d1:
   743     0060                     	ds	2
   744     0062                     _u1:
   745     0062                     	ds	2
   746     0064                     _VOLT2:
   747     0064                     	ds	2
   748     0066                     _VOLT1:
   749     0066                     	ds	2
   750     0068                     _V2:
   751     0068                     	ds	1
   752     0069                     _V1:
   753     0069                     	ds	1
   754                           
   755                           	psect	bssBANK1
   756     00A0                     __pbssBANK1:
   757     00A0                     _buffer:
   758     00A0                     	ds	20
   759                           
   760                           	psect	clrtext
   761     07F3                     clear_ram0:	
   762                           ;	Called with FSR containing the base address, and
   763                           ;	W with the last address+1
   764                           
   765     07F3  0064               	clrwdt	;clear the watchdog before getting into this loop
   766     07F4                     clrloop0:
   767     07F4  0180               	clrf	0	;clear RAM location pointed to by FSR
   768     07F5  0A84               	incf	4,f	;increment pointer
   769     07F6  0604               	xorwf	4,w	;XOR with final address
   770     07F7  1903               	btfsc	3,2	;have we reached the end yet?
   771     07F8  3400               	retlw	0	;all done for this memory range, return
   772     07F9  0604               	xorwf	4,w	;XOR again to restore value
   773     07FA  2FF4               	goto	clrloop0	;do the next byte
   774                           
   775                           	psect	cstackCOMMON
   776     0070                     __pcstackCOMMON:
   777     0070                     ?_setupINTOSC:
   778     0070                     ?_setup:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_Lcd_Init:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_Lcd_Clear:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_calculovolt:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_valorLCD:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_isr:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ??_isr:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?_main:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_Lcd_Port:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_Lcd_Cmd:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_Lcd_Write_Char:	
   809                           ; 1 bytes @ 0x0
   810                           
   811                           
   812                           ; 1 bytes @ 0x0
   813     0070                     	ds	2
   814     0072                     ??_setupINTOSC:
   815     0072                     ?_spiInit:	
   816                           ; 1 bytes @ 0x2
   817                           
   818     0072                     ??_Lcd_Port:	
   819                           ; 1 bytes @ 0x2
   820                           
   821     0072                     ?___lwdiv:	
   822                           ; 1 bytes @ 0x2
   823                           
   824     0072                     ?___lmul:	
   825                           ; 2 bytes @ 0x2
   826                           
   827     0072                     setupINTOSC@IRCF:	
   828                           ; 4 bytes @ 0x2
   829                           
   830     0072                     spiInit@sDataSample:	
   831                           ; 1 bytes @ 0x2
   832                           
   833     0072                     Lcd_Port@a:	
   834                           ; 1 bytes @ 0x2
   835                           
   836     0072                     ___lwdiv@divisor:	
   837                           ; 1 bytes @ 0x2
   838                           
   839     0072                     ___lmul@multiplier:	
   840                           ; 2 bytes @ 0x2
   841                           
   842                           
   843                           ; 4 bytes @ 0x2
   844     0072                     	ds	1
   845     0073                     ??_Lcd_Cmd:
   846     0073                     ??_Lcd_Write_Char:	
   847                           ; 1 bytes @ 0x3
   848                           
   849     0073                     spiInit@sClockIdle:	
   850                           ; 1 bytes @ 0x3
   851                           
   852                           
   853                           ; 1 bytes @ 0x3
   854     0073                     	ds	1
   855     0074                     spiInit@sTransmitEdge:
   856     0074                     Lcd_Write_Char@temp:	
   857                           ; 1 bytes @ 0x4
   858                           
   859     0074                     ___lwdiv@dividend:	
   860                           ; 1 bytes @ 0x4
   861                           
   862                           
   863                           ; 2 bytes @ 0x4
   864     0074                     	ds	1
   865     0075                     ??_spiInit:
   866     0075                     spiInit@sType:	
   867                           ; 1 bytes @ 0x5
   868                           
   869     0075                     Lcd_Cmd@a:	
   870                           ; 1 bytes @ 0x5
   871                           
   872     0075                     Lcd_Write_Char@y:	
   873                           ; 1 bytes @ 0x5
   874                           
   875                           
   876                           ; 1 bytes @ 0x5
   877     0075                     	ds	1
   878     0076                     ??_setup:
   879     0076                     ??_Lcd_Init:	
   880                           ; 1 bytes @ 0x6
   881                           
   882     0076                     ??_Lcd_Clear:	
   883                           ; 1 bytes @ 0x6
   884                           
   885     0076                     ?_Lcd_Set_Cursor:	
   886                           ; 1 bytes @ 0x6
   887                           
   888     0076                     ??___lwdiv:	
   889                           ; 1 bytes @ 0x6
   890                           
   891     0076                     Lcd_Set_Cursor@b:	
   892                           ; 1 bytes @ 0x6
   893                           
   894     0076                     Lcd_Write_Char@a:	
   895                           ; 1 bytes @ 0x6
   896                           
   897     0076                     ___lmul@multiplicand:	
   898                           ; 1 bytes @ 0x6
   899                           
   900                           
   901                           ; 4 bytes @ 0x6
   902     0076                     	ds	1
   903     0077                     ??_Lcd_Set_Cursor:
   904     0077                     ?_Lcd_Write_String:	
   905                           ; 1 bytes @ 0x7
   906                           
   907     0077                     Lcd_Write_String@a:	
   908                           ; 1 bytes @ 0x7
   909                           
   910     0077                     ___lwdiv@quotient:	
   911                           ; 2 bytes @ 0x7
   912                           
   913                           
   914                           ; 2 bytes @ 0x7
   915     0077                     	ds	1
   916     0078                     Lcd_Set_Cursor@a:
   917                           
   918                           ; 1 bytes @ 0x8
   919     0078                     	ds	1
   920     0079                     ??_Lcd_Write_String:
   921     0079                     Lcd_Set_Cursor@z:	
   922                           ; 1 bytes @ 0x9
   923                           
   924     0079                     ___lwdiv@counter:	
   925                           ; 1 bytes @ 0x9
   926                           
   927                           
   928                           ; 1 bytes @ 0x9
   929     0079                     	ds	1
   930     007A                     ??___lmul:
   931     007A                     ??___lwmod:	
   932                           ; 1 bytes @ 0xA
   933                           
   934     007A                     Lcd_Set_Cursor@y:	
   935                           ; 1 bytes @ 0xA
   936                           
   937                           
   938                           ; 1 bytes @ 0xA
   939     007A                     	ds	1
   940     007B                     ??___aldiv:
   941     007B                     Lcd_Set_Cursor@temp:	
   942                           ; 1 bytes @ 0xB
   943                           
   944     007B                     ___lwmod@counter:	
   945                           ; 1 bytes @ 0xB
   946                           
   947                           
   948                           ; 1 bytes @ 0xB
   949     007B                     	ds	1
   950     007C                     ??_calculovolt:
   951     007C                     ??_valorLCD:	
   952                           ; 1 bytes @ 0xC
   953                           
   954                           
   955                           	psect	cstackBANK0
   956     0020                     __pcstackBANK0:	
   957                           ; 1 bytes @ 0xC
   958                           
   959     0020                     ?___lwmod:
   960     0020                     Lcd_Write_String@i:	
   961                           ; 2 bytes @ 0x0
   962                           
   963     0020                     ___lwmod@divisor:	
   964                           ; 2 bytes @ 0x0
   965                           
   966     0020                     ___lmul@product:	
   967                           ; 2 bytes @ 0x0
   968                           
   969                           
   970                           ; 4 bytes @ 0x0
   971     0020                     	ds	2
   972     0022                     ___lwmod@dividend:
   973                           
   974                           ; 2 bytes @ 0x2
   975     0022                     	ds	2
   976     0024                     ?_sprintf:
   977     0024                     ?___aldiv:	
   978                           ; 2 bytes @ 0x4
   979                           
   980     0024                     sprintf@f:	
   981                           ; 4 bytes @ 0x4
   982                           
   983     0024                     ___aldiv@divisor:	
   984                           ; 1 bytes @ 0x4
   985                           
   986                           
   987                           ; 4 bytes @ 0x4
   988     0024                     	ds	3
   989     0027                     ??_sprintf:
   990                           
   991                           ; 1 bytes @ 0x7
   992     0027                     	ds	1
   993     0028                     ___aldiv@dividend:
   994                           
   995                           ; 4 bytes @ 0x8
   996     0028                     	ds	2
   997     002A                     sprintf@flag:
   998                           
   999                           ; 1 bytes @ 0xA
  1000     002A                     	ds	1
  1001     002B                     sprintf@ap:
  1002                           
  1003                           ; 1 bytes @ 0xB
  1004     002B                     	ds	1
  1005     002C                     ___aldiv@counter:
  1006     002C                     sprintf@val:	
  1007                           ; 1 bytes @ 0xC
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0xC
  1011     002C                     	ds	1
  1012     002D                     ___aldiv@sign:
  1013                           
  1014                           ; 1 bytes @ 0xD
  1015     002D                     	ds	1
  1016     002E                     sprintf@prec:
  1017     002E                     ___aldiv@quotient:	
  1018                           ; 1 bytes @ 0xE
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0xE
  1022     002E                     	ds	1
  1023     002F                     sprintf@sp:
  1024                           
  1025                           ; 1 bytes @ 0xF
  1026     002F                     	ds	1
  1027     0030                     sprintf@c:
  1028                           
  1029                           ; 1 bytes @ 0x10
  1030     0030                     	ds	2
  1031     0032                     ?_map:
  1032     0032                     map@x:	
  1033                           ; 4 bytes @ 0x12
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x12
  1037     0032                     	ds	4
  1038     0036                     map@eMin:
  1039                           
  1040                           ; 4 bytes @ 0x16
  1041     0036                     	ds	4
  1042     003A                     map@eMax:
  1043                           
  1044                           ; 4 bytes @ 0x1A
  1045     003A                     	ds	4
  1046     003E                     map@sMin:
  1047                           
  1048                           ; 4 bytes @ 0x1E
  1049     003E                     	ds	4
  1050     0042                     map@sMax:
  1051                           
  1052                           ; 4 bytes @ 0x22
  1053     0042                     	ds	4
  1054     0046                     ??_map:
  1055                           
  1056                           ; 1 bytes @ 0x26
  1057     0046                     	ds	16
  1058     0056                     ??_main:
  1059                           
  1060                           ; 1 bytes @ 0x36
  1061     0056                     	ds	4
  1062                           
  1063                           	psect	maintext
  1064     0024                     __pmaintext:	
  1065 ;;
  1066 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1067 ;;
  1068 ;; *************** function _main *****************
  1069 ;; Defined at:
  1070 ;;		line 85 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : B00/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       4       0       0       0
  1087 ;;      Totals:         0       4       0       0       0
  1088 ;;Total ram usage:        4 bytes
  1089 ;; Hardware stack levels required when called: 5
  1090 ;; This function calls:
  1091 ;;		_Lcd_Clear
  1092 ;;		_Lcd_Init
  1093 ;;		_Lcd_Set_Cursor
  1094 ;;		_Lcd_Write_String
  1095 ;;		_calculovolt
  1096 ;;		_map
  1097 ;;		_setup
  1098 ;;		_setupINTOSC
  1099 ;;		_valorLCD
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105     0024                     _main:	
  1106                           ;psect for function _main
  1107                           
  1108     0024                     l1689:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1111                           
  1112                           
  1113                           ;main.c: 86:     setupINTOSC(6);
  1114     0024  3006               	movlw	6
  1115     0025  120A  118A  2527  120A  118A  	fcall	_setupINTOSC
  1116                           
  1117                           ;main.c: 87:     setup();
  1118     002A  120A  118A  274A  120A  118A  	fcall	_setup
  1119                           
  1120                           ;main.c: 88:     Lcd_Init();
  1121     002F  120A  118A  24BD  120A  118A  	fcall	_Lcd_Init
  1122     0034                     l1691:
  1123                           
  1124                           ;main.c: 89:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1125     0034  3020               	movlw	32
  1126     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1127     0036  1303               	bcf	3,6	;RP1=0, select bank0
  1128     0037  00D6               	movwf	??_main
  1129     0038                     u1407:
  1130     0038  0BD6               	decfsz	??_main,f
  1131     0039  2838               	goto	u1407
  1132     003A  0000               	nop
  1133     003B                     l1693:
  1134                           
  1135                           ;main.c: 90:     Lcd_Clear();
  1136     003B  120A  118A  27E6  120A  118A  	fcall	_Lcd_Clear
  1137     0040                     l1695:
  1138                           
  1139                           ;main.c: 91:     Lcd_Set_Cursor(1,1);
  1140     0040  01F6               	clrf	Lcd_Set_Cursor@b
  1141     0041  0AF6               	incf	Lcd_Set_Cursor@b,f
  1142     0042  3001               	movlw	1
  1143     0043  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1144     0048                     l1697:
  1145                           
  1146                           ;main.c: 92:     Lcd_Write_String("S1:    S2:   S3:");
  1147     0048  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1148     0049  00F7               	movwf	Lcd_Write_String@a
  1149     004A  3080               	movlw	128
  1150     004B  00F8               	movwf	Lcd_Write_String@a+1
  1151     004C  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1152     0051                     l1699:
  1153                           
  1154                           ;main.c: 98:         PORTCbits.RC1 = 1;
  1155     0051  1283               	bcf	3,5	;RP0=0, select bank0
  1156     0052  1303               	bcf	3,6	;RP1=0, select bank0
  1157     0053  1487               	bsf	7,1	;volatile
  1158     0054                     l1701:
  1159                           
  1160                           ;main.c: 99:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1161     0054  300D               	movlw	13
  1162     0055  1283               	bcf	3,5	;RP0=0, select bank0
  1163     0056  1303               	bcf	3,6	;RP1=0, select bank0
  1164     0057  00D7               	movwf	??_main+1
  1165     0058  30FB               	movlw	251
  1166     0059  00D6               	movwf	??_main
  1167     005A                     u1417:
  1168     005A  0BD6               	decfsz	??_main,f
  1169     005B  285A               	goto	u1417
  1170     005C  0BD7               	decfsz	??_main+1,f
  1171     005D  285A               	goto	u1417
  1172     005E                     l1703:
  1173                           
  1174                           ;main.c: 100:         PORTCbits.RC1 = 0;
  1175     005E  1283               	bcf	3,5	;RP0=0, select bank0
  1176     005F  1303               	bcf	3,6	;RP1=0, select bank0
  1177     0060  1087               	bcf	7,1	;volatile
  1178     0061                     l1705:
  1179                           
  1180                           ;main.c: 102:         SSPBUF = 0;
  1181     0061  0193               	clrf	19	;volatile
  1182     0062                     l89:	
  1183                           ;main.c: 105:         }
  1184                           
  1185                           
  1186                           ;main.c: 103:         while(!SSPSTATbits.BF){
  1187     0062  1683               	bsf	3,5	;RP0=1, select bank1
  1188     0063  1303               	bcf	3,6	;RP1=0, select bank1
  1189     0064  1C14               	btfss	20,0	;volatile
  1190     0065  2867               	goto	u1371
  1191     0066  2868               	goto	u1370
  1192     0067                     u1371:
  1193     0067  2862               	goto	l89
  1194     0068                     u1370:
  1195     0068                     l1707:
  1196                           
  1197                           ;main.c: 106:         cont = SSPBUF;
  1198     0068  1283               	bcf	3,5	;RP0=0, select bank0
  1199     0069  1303               	bcf	3,6	;RP1=0, select bank0
  1200     006A  0813               	movf	19,w	;volatile
  1201     006B  00D6               	movwf	??_main
  1202     006C  01D7               	clrf	??_main+1
  1203     006D  0856               	movf	??_main,w
  1204     006E  00DA               	movwf	_cont
  1205     006F  0857               	movf	??_main+1,w
  1206     0070  00DB               	movwf	_cont+1
  1207                           
  1208                           ;main.c: 107:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1209     0071  300D               	movlw	13
  1210     0072  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0073  1303               	bcf	3,6	;RP1=0, select bank0
  1212     0074  00D7               	movwf	??_main+1
  1213     0075  30FB               	movlw	251
  1214     0076  00D6               	movwf	??_main
  1215     0077                     u1427:
  1216     0077  0BD6               	decfsz	??_main,f
  1217     0078  2877               	goto	u1427
  1218     0079  0BD7               	decfsz	??_main+1,f
  1219     007A  2877               	goto	u1427
  1220     007B                     l1709:
  1221                           
  1222                           ;main.c: 111:         PORTCbits.RC1 = 1;
  1223     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1224     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1225     007D  1487               	bsf	7,1	;volatile
  1226                           
  1227                           ;main.c: 112:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1228     007E  300D               	movlw	13
  1229     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1231     0081  00D7               	movwf	??_main+1
  1232     0082  30FB               	movlw	251
  1233     0083  00D6               	movwf	??_main
  1234     0084                     u1437:
  1235     0084  0BD6               	decfsz	??_main,f
  1236     0085  2884               	goto	u1437
  1237     0086  0BD7               	decfsz	??_main+1,f
  1238     0087  2884               	goto	u1437
  1239     0088                     l1711:
  1240                           
  1241                           ;main.c: 113:         PORTCbits.RC1 = 0;
  1242     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1244     008A  1087               	bcf	7,1	;volatile
  1245                           
  1246                           ;main.c: 114:         SSPBUF = 1;
  1247     008B  3001               	movlw	1
  1248     008C  0093               	movwf	19	;volatile
  1249     008D                     l92:	
  1250                           ;main.c: 116:         while(!SSPSTATbits.BF){}
  1251                           
  1252     008D  1683               	bsf	3,5	;RP0=1, select bank1
  1253     008E  1303               	bcf	3,6	;RP1=0, select bank1
  1254     008F  1C14               	btfss	20,0	;volatile
  1255     0090  2892               	goto	u1381
  1256     0091  2893               	goto	u1380
  1257     0092                     u1381:
  1258     0092  288D               	goto	l92
  1259     0093                     u1380:
  1260     0093                     l1713:
  1261                           
  1262                           ;main.c: 117:         V1 = SSPBUF;
  1263     0093  1283               	bcf	3,5	;RP0=0, select bank0
  1264     0094  1303               	bcf	3,6	;RP1=0, select bank0
  1265     0095  0813               	movf	19,w	;volatile
  1266     0096  00E9               	movwf	_V1
  1267                           
  1268                           ;main.c: 118:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1269     0097  300D               	movlw	13
  1270     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1271     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1272     009A  00D7               	movwf	??_main+1
  1273     009B  30FB               	movlw	251
  1274     009C  00D6               	movwf	??_main
  1275     009D                     u1447:
  1276     009D  0BD6               	decfsz	??_main,f
  1277     009E  289D               	goto	u1447
  1278     009F  0BD7               	decfsz	??_main+1,f
  1279     00A0  289D               	goto	u1447
  1280     00A1                     l1715:
  1281                           
  1282                           ;main.c: 121:         PORTCbits.RC1 = 1;
  1283     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1284     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1285     00A3  1487               	bsf	7,1	;volatile
  1286                           
  1287                           ;main.c: 122:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1288     00A4  300D               	movlw	13
  1289     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1290     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1291     00A7  00D7               	movwf	??_main+1
  1292     00A8  30FB               	movlw	251
  1293     00A9  00D6               	movwf	??_main
  1294     00AA                     u1457:
  1295     00AA  0BD6               	decfsz	??_main,f
  1296     00AB  28AA               	goto	u1457
  1297     00AC  0BD7               	decfsz	??_main+1,f
  1298     00AD  28AA               	goto	u1457
  1299     00AE                     l1717:
  1300                           
  1301                           ;main.c: 123:         PORTCbits.RC2 = 1;
  1302     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1303     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1304     00B0  1507               	bsf	7,2	;volatile
  1305                           
  1306                           ;main.c: 124:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1307     00B1  300D               	movlw	13
  1308     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1309     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1310     00B4  00D7               	movwf	??_main+1
  1311     00B5  30FB               	movlw	251
  1312     00B6  00D6               	movwf	??_main
  1313     00B7                     u1467:
  1314     00B7  0BD6               	decfsz	??_main,f
  1315     00B8  28B7               	goto	u1467
  1316     00B9  0BD7               	decfsz	??_main+1,f
  1317     00BA  28B7               	goto	u1467
  1318     00BB                     l1719:
  1319                           
  1320                           ;main.c: 125:         PORTCbits.RC2 = 0;
  1321     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1322     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1323     00BD  1107               	bcf	7,2	;volatile
  1324     00BE                     l1721:
  1325                           
  1326                           ;main.c: 127:         SSPBUF = 0;
  1327     00BE  0193               	clrf	19	;volatile
  1328     00BF                     l95:	
  1329                           ;main.c: 129:         while(!SSPSTATbits.BF){}
  1330                           
  1331     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1332     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1333     00C1  1C14               	btfss	20,0	;volatile
  1334     00C2  28C4               	goto	u1391
  1335     00C3  28C5               	goto	u1390
  1336     00C4                     u1391:
  1337     00C4  28BF               	goto	l95
  1338     00C5                     u1390:
  1339     00C5                     l1723:
  1340                           
  1341                           ;main.c: 130:         V2 = SSPBUF;
  1342     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1343     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1344     00C7  0813               	movf	19,w	;volatile
  1345     00C8  00E8               	movwf	_V2
  1346     00C9                     l1725:
  1347                           
  1348                           ;main.c: 131:         PORTCbits.RC2 = 1;
  1349     00C9  1507               	bsf	7,2	;volatile
  1350                           
  1351                           ;main.c: 132:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1352     00CA  3003               	movlw	3
  1353     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1354     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1355     00CD  00D7               	movwf	??_main+1
  1356     00CE  3097               	movlw	151
  1357     00CF  00D6               	movwf	??_main
  1358     00D0                     u1477:
  1359     00D0  0BD6               	decfsz	??_main,f
  1360     00D1  28D0               	goto	u1477
  1361     00D2  0BD7               	decfsz	??_main+1,f
  1362     00D3  28D0               	goto	u1477
  1363     00D4                     l1727:
  1364                           
  1365                           ;main.c: 136:         VOLT1 = map(V1, 0, 255, 1, 200);
  1366     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1367     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1368     00D6  0869               	movf	_V1,w
  1369     00D7  00D6               	movwf	??_main
  1370     00D8  01D7               	clrf	??_main+1
  1371     00D9  01D8               	clrf	??_main+2
  1372     00DA  01D9               	clrf	??_main+3
  1373     00DB  0859               	movf	??_main+3,w
  1374     00DC  00B5               	movwf	map@x+3
  1375     00DD  0858               	movf	??_main+2,w
  1376     00DE  00B4               	movwf	map@x+2
  1377     00DF  0857               	movf	??_main+1,w
  1378     00E0  00B3               	movwf	map@x+1
  1379     00E1  0856               	movf	??_main,w
  1380     00E2  00B2               	movwf	map@x
  1381     00E3  3000               	movlw	0
  1382     00E4  00B9               	movwf	map@eMin+3
  1383     00E5  3000               	movlw	0
  1384     00E6  00B8               	movwf	map@eMin+2
  1385     00E7  3000               	movlw	0
  1386     00E8  00B7               	movwf	map@eMin+1
  1387     00E9  3000               	movlw	0
  1388     00EA  00B6               	movwf	map@eMin
  1389     00EB  3000               	movlw	0
  1390     00EC  00BD               	movwf	map@eMax+3
  1391     00ED  3000               	movlw	0
  1392     00EE  00BC               	movwf	map@eMax+2
  1393     00EF  3000               	movlw	0
  1394     00F0  00BB               	movwf	map@eMax+1
  1395     00F1  30FF               	movlw	255
  1396     00F2  00BA               	movwf	map@eMax
  1397     00F3  3000               	movlw	0
  1398     00F4  00C1               	movwf	map@sMin+3
  1399     00F5  3000               	movlw	0
  1400     00F6  00C0               	movwf	map@sMin+2
  1401     00F7  3000               	movlw	0
  1402     00F8  00BF               	movwf	map@sMin+1
  1403     00F9  3001               	movlw	1
  1404     00FA  00BE               	movwf	map@sMin
  1405     00FB  3000               	movlw	0
  1406     00FC  00C5               	movwf	map@sMax+3
  1407     00FD  3000               	movlw	0
  1408     00FE  00C4               	movwf	map@sMax+2
  1409     00FF  3000               	movlw	0
  1410     0100  00C3               	movwf	map@sMax+1
  1411     0101  30C8               	movlw	200
  1412     0102  00C2               	movwf	map@sMax
  1413     0103  120A  118A  22EB  120A  118A  	fcall	_map
  1414     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1416     010A  0833               	movf	?_map+1,w
  1417     010B  00E7               	movwf	_VOLT1+1
  1418     010C  0832               	movf	?_map,w
  1419     010D  00E6               	movwf	_VOLT1
  1420     010E                     l1729:
  1421                           
  1422                           ;main.c: 137:         calculovolt();
  1423     010E  120A  118A  2586  120A  118A  	fcall	_calculovolt
  1424     0113                     l1731:
  1425                           
  1426                           ;main.c: 138:         valorLCD();
  1427     0113  120A  118A  222D  120A  118A  	fcall	_valorLCD
  1428     0118                     l1733:
  1429                           
  1430                           ;main.c: 140:         VOLT2 = map(V2, 0, 255, 1, 200);
  1431     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1432     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1433     011A  0868               	movf	_V2,w
  1434     011B  00D6               	movwf	??_main
  1435     011C  01D7               	clrf	??_main+1
  1436     011D  01D8               	clrf	??_main+2
  1437     011E  01D9               	clrf	??_main+3
  1438     011F  0859               	movf	??_main+3,w
  1439     0120  00B5               	movwf	map@x+3
  1440     0121  0858               	movf	??_main+2,w
  1441     0122  00B4               	movwf	map@x+2
  1442     0123  0857               	movf	??_main+1,w
  1443     0124  00B3               	movwf	map@x+1
  1444     0125  0856               	movf	??_main,w
  1445     0126  00B2               	movwf	map@x
  1446     0127  3000               	movlw	0
  1447     0128  00B9               	movwf	map@eMin+3
  1448     0129  3000               	movlw	0
  1449     012A  00B8               	movwf	map@eMin+2
  1450     012B  3000               	movlw	0
  1451     012C  00B7               	movwf	map@eMin+1
  1452     012D  3000               	movlw	0
  1453     012E  00B6               	movwf	map@eMin
  1454     012F  3000               	movlw	0
  1455     0130  00BD               	movwf	map@eMax+3
  1456     0131  3000               	movlw	0
  1457     0132  00BC               	movwf	map@eMax+2
  1458     0133  3000               	movlw	0
  1459     0134  00BB               	movwf	map@eMax+1
  1460     0135  30FF               	movlw	255
  1461     0136  00BA               	movwf	map@eMax
  1462     0137  3000               	movlw	0
  1463     0138  00C1               	movwf	map@sMin+3
  1464     0139  3000               	movlw	0
  1465     013A  00C0               	movwf	map@sMin+2
  1466     013B  3000               	movlw	0
  1467     013C  00BF               	movwf	map@sMin+1
  1468     013D  3001               	movlw	1
  1469     013E  00BE               	movwf	map@sMin
  1470     013F  3000               	movlw	0
  1471     0140  00C5               	movwf	map@sMax+3
  1472     0141  3000               	movlw	0
  1473     0142  00C4               	movwf	map@sMax+2
  1474     0143  3000               	movlw	0
  1475     0144  00C3               	movwf	map@sMax+1
  1476     0145  30C8               	movlw	200
  1477     0146  00C2               	movwf	map@sMax
  1478     0147  120A  118A  22EB  120A  118A  	fcall	_map
  1479     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1480     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1481     014E  0833               	movf	?_map+1,w
  1482     014F  00E5               	movwf	_VOLT2+1
  1483     0150  0832               	movf	?_map,w
  1484     0151  00E4               	movwf	_VOLT2
  1485     0152                     l1735:
  1486                           
  1487                           ;main.c: 141:         calculovolt();
  1488     0152  120A  118A  2586  120A  118A  	fcall	_calculovolt
  1489     0157                     l1737:
  1490                           
  1491                           ;main.c: 142:         valorLCD();
  1492     0157  120A  118A  222D  120A  118A  	fcall	_valorLCD
  1493                           
  1494                           ;main.c: 143:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1495     015C  3003               	movlw	3
  1496     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1497     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1498     015F  00D7               	movwf	??_main+1
  1499     0160  3097               	movlw	151
  1500     0161  00D6               	movwf	??_main
  1501     0162                     u1487:
  1502     0162  0BD6               	decfsz	??_main,f
  1503     0163  2962               	goto	u1487
  1504     0164  0BD7               	decfsz	??_main+1,f
  1505     0165  2962               	goto	u1487
  1506     0166  2851               	goto	l1699
  1507     0167  120A  118A  280C   	ljmp	start
  1508     016A                     __end_of_main:
  1509                           
  1510                           	psect	text1
  1511     022D                     __ptext1:	
  1512 ;; *************** function _valorLCD *****************
  1513 ;; Defined at:
  1514 ;;		line 178 in file "main.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 4
  1535 ;; This function calls:
  1536 ;;		_Lcd_Set_Cursor
  1537 ;;		_Lcd_Write_String
  1538 ;;		_sprintf
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544     022D                     _valorLCD:	
  1545                           ;psect for function _valorLCD
  1546                           
  1547     022D                     l1663:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _valorLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1550                           
  1551                           
  1552                           ;main.c: 179:     Lcd_Set_Cursor(2,1);
  1553     022D  01F6               	clrf	Lcd_Set_Cursor@b
  1554     022E  0AF6               	incf	Lcd_Set_Cursor@b,f
  1555     022F  3002               	movlw	2
  1556     0230  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1557     0235                     l1665:
  1558                           
  1559                           ;main.c: 180:     sprintf(buffer, "%u", u1);
  1560     0235  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1561     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1562     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1563     0238  00A4               	movwf	sprintf@f
  1564     0239  0863               	movf	_u1+1,w
  1565     023A  00A6               	movwf	?_sprintf+2
  1566     023B  0862               	movf	_u1,w
  1567     023C  00A5               	movwf	?_sprintf+1
  1568     023D  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1569     023E  120A  118A  216A  120A  118A  	fcall	_sprintf
  1570     0243                     l1667:
  1571                           
  1572                           ;main.c: 181:     Lcd_Write_String(buffer);
  1573     0243  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1574     0244  00F7               	movwf	Lcd_Write_String@a
  1575     0245  3000               	movlw	0
  1576     0246  00F8               	movwf	Lcd_Write_String@a+1
  1577     0247  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1578                           
  1579                           ;main.c: 183:     Lcd_Set_Cursor(2,2);
  1580     024C  3002               	movlw	2
  1581     024D  00F6               	movwf	Lcd_Set_Cursor@b
  1582     024E  3002               	movlw	2
  1583     024F  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1584     0254                     l1669:
  1585                           
  1586                           ;main.c: 184:     Lcd_Write_String(".");
  1587     0254  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1588     0255  00F7               	movwf	Lcd_Write_String@a
  1589     0256  3080               	movlw	128
  1590     0257  00F8               	movwf	Lcd_Write_String@a+1
  1591     0258  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1592     025D                     l1671:
  1593                           
  1594                           ;main.c: 186:     Lcd_Set_Cursor(2,3);
  1595     025D  3003               	movlw	3
  1596     025E  00F6               	movwf	Lcd_Set_Cursor@b
  1597     025F  3002               	movlw	2
  1598     0260  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1599                           
  1600                           ;main.c: 187:     sprintf(buffer, "%u", d1);
  1601     0265  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1602     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1603     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1604     0268  00A4               	movwf	sprintf@f
  1605     0269  0861               	movf	_d1+1,w
  1606     026A  00A6               	movwf	?_sprintf+2
  1607     026B  0860               	movf	_d1,w
  1608     026C  00A5               	movwf	?_sprintf+1
  1609     026D  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1610     026E  120A  118A  216A  120A  118A  	fcall	_sprintf
  1611                           
  1612                           ;main.c: 188:     Lcd_Write_String(buffer);
  1613     0273  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1614     0274  00F7               	movwf	Lcd_Write_String@a
  1615     0275  3000               	movlw	0
  1616     0276  00F8               	movwf	Lcd_Write_String@a+1
  1617     0277  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1618     027C                     l1673:
  1619                           
  1620                           ;main.c: 190:     Lcd_Set_Cursor(2,12);
  1621     027C  300C               	movlw	12
  1622     027D  00F6               	movwf	Lcd_Set_Cursor@b
  1623     027E  3002               	movlw	2
  1624     027F  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1625     0284                     l1675:
  1626                           
  1627                           ;main.c: 191:     sprintf(buffer, "%u", u2);
  1628     0284  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1629     0285  1283               	bcf	3,5	;RP0=0, select bank0
  1630     0286  1303               	bcf	3,6	;RP1=0, select bank0
  1631     0287  00A4               	movwf	sprintf@f
  1632     0288  085F               	movf	_u2+1,w
  1633     0289  00A6               	movwf	?_sprintf+2
  1634     028A  085E               	movf	_u2,w
  1635     028B  00A5               	movwf	?_sprintf+1
  1636     028C  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1637     028D  120A  118A  216A  120A  118A  	fcall	_sprintf
  1638     0292                     l1677:
  1639                           
  1640                           ;main.c: 192:     Lcd_Write_String(buffer);
  1641     0292  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1642     0293  00F7               	movwf	Lcd_Write_String@a
  1643     0294  3000               	movlw	0
  1644     0295  00F8               	movwf	Lcd_Write_String@a+1
  1645     0296  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1646     029B                     l1679:
  1647                           
  1648                           ;main.c: 194:     Lcd_Set_Cursor(2,13);
  1649     029B  300D               	movlw	13
  1650     029C  00F6               	movwf	Lcd_Set_Cursor@b
  1651     029D  3002               	movlw	2
  1652     029E  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1653                           
  1654                           ;main.c: 195:     Lcd_Write_String(".");
  1655     02A3  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1656     02A4  00F7               	movwf	Lcd_Write_String@a
  1657     02A5  3080               	movlw	128
  1658     02A6  00F8               	movwf	Lcd_Write_String@a+1
  1659     02A7  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1660     02AC                     l1681:
  1661                           
  1662                           ;main.c: 197:     Lcd_Set_Cursor(2,14);
  1663     02AC  300E               	movlw	14
  1664     02AD  00F6               	movwf	Lcd_Set_Cursor@b
  1665     02AE  3002               	movlw	2
  1666     02AF  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1667     02B4                     l1683:
  1668                           
  1669                           ;main.c: 198:     sprintf(buffer, "%u", d2);
  1670     02B4  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1671     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1672     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1673     02B7  00A4               	movwf	sprintf@f
  1674     02B8  085D               	movf	_d2+1,w
  1675     02B9  00A6               	movwf	?_sprintf+2
  1676     02BA  085C               	movf	_d2,w
  1677     02BB  00A5               	movwf	?_sprintf+1
  1678     02BC  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1679     02BD  120A  118A  216A  120A  118A  	fcall	_sprintf
  1680     02C2                     l1685:
  1681                           
  1682                           ;main.c: 199:     Lcd_Write_String(buffer);
  1683     02C2  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1684     02C3  00F7               	movwf	Lcd_Write_String@a
  1685     02C4  3000               	movlw	0
  1686     02C5  00F8               	movwf	Lcd_Write_String@a+1
  1687     02C6  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1688     02CB                     l1687:
  1689                           
  1690                           ;main.c: 201:     Lcd_Set_Cursor(2,7);
  1691     02CB  3007               	movlw	7
  1692     02CC  00F6               	movwf	Lcd_Set_Cursor@b
  1693     02CD  3002               	movlw	2
  1694     02CE  120A  118A  2430  120A  118A  	fcall	_Lcd_Set_Cursor
  1695                           
  1696                           ;main.c: 202:     sprintf(buffer, "%u", cont);
  1697     02D3  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1698     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1699     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1700     02D6  00A4               	movwf	sprintf@f
  1701     02D7  085B               	movf	_cont+1,w
  1702     02D8  00A6               	movwf	?_sprintf+2
  1703     02D9  085A               	movf	_cont,w
  1704     02DA  00A5               	movwf	?_sprintf+1
  1705     02DB  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1706     02DC  120A  118A  216A  120A  118A  	fcall	_sprintf
  1707                           
  1708                           ;main.c: 203:     Lcd_Write_String(buffer);
  1709     02E1  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1710     02E2  00F7               	movwf	Lcd_Write_String@a
  1711     02E3  3000               	movlw	0
  1712     02E4  00F8               	movwf	Lcd_Write_String@a+1
  1713     02E5  120A  118A  2621  120A  118A  	fcall	_Lcd_Write_String
  1714     02EA                     l106:
  1715     02EA  0008               	return
  1716     02EB                     __end_of_valorLCD:
  1717                           
  1718                           	psect	text2
  1719     016A                     __ptext2:	
  1720 ;; *************** function _sprintf *****************
  1721 ;; Defined at:
  1722 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  sp              1    wreg     PTR unsigned char 
  1725 ;;		 -> buffer(20), 
  1726 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1727 ;;		 -> STR_8(3), STR_7(3), STR_5(3), STR_4(3), 
  1728 ;;		 -> STR_2(3), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1731 ;;		 -> buffer(20), 
  1732 ;;  tmpval          4    0        struct .
  1733 ;;  val             2   12[BANK0 ] unsigned int 
  1734 ;;  cp              2    0        PTR const unsigned char 
  1735 ;;  len             2    0        unsigned int 
  1736 ;;  c               1   16[BANK0 ] unsigned char 
  1737 ;;  prec            1   14[BANK0 ] char 
  1738 ;;  ap              1   11[BANK0 ] PTR void [1]
  1739 ;;		 -> ?_sprintf(2), 
  1740 ;;  flag            1   10[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    4[BANK0 ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       3       0       0       0
  1751 ;;      Locals:         0       7       0       0       0
  1752 ;;      Temps:          0       3       0       0       0
  1753 ;;      Totals:         0      13       0       0       0
  1754 ;;Total ram usage:       13 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		___lwdiv
  1759 ;;		___lwmod
  1760 ;; This function is called by:
  1761 ;;		_valorLCD
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765     016A                     _sprintf:	
  1766                           ;psect for function _sprintf
  1767                           
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771                           ;sprintf@sp stored from wreg
  1772     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1773     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1774     016C  00AF               	movwf	sprintf@sp
  1775     016D                     l1497:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1778     016D  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1779     016E  00AB               	movwf	sprintf@ap
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1782     016F  2A18               	goto	l1539
  1783     0170                     l1499:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1786     0170  3025               	movlw	37
  1787     0171  0630               	xorwf	sprintf@c,w
  1788     0172  1903               	btfsc	3,2
  1789     0173  2975               	goto	u1061
  1790     0174  2976               	goto	u1060
  1791     0175                     u1061:
  1792     0175  2980               	goto	l1505
  1793     0176                     u1060:
  1794     0176                     l1501:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1797     0176  082F               	movf	sprintf@sp,w
  1798     0177  0084               	movwf	4
  1799     0178  0830               	movf	sprintf@c,w
  1800     0179  1383               	bcf	3,7	;select IRP bank0
  1801     017A  0080               	movwf	0
  1802     017B                     l1503:
  1803     017B  3001               	movlw	1
  1804     017C  00A7               	movwf	??_sprintf
  1805     017D  0827               	movf	??_sprintf,w
  1806     017E  07AF               	addwf	sprintf@sp,f
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1809     017F  2A18               	goto	l1539
  1810     0180                     l1505:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1813     0180  01AA               	clrf	sprintf@flag
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1816     0181  2987               	goto	l1511
  1817     0182                     l1507:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1820     0182  30C0               	movlw	192
  1821     0183  00A7               	movwf	??_sprintf
  1822     0184  0827               	movf	??_sprintf,w
  1823     0185  04AA               	iorwf	sprintf@flag,f
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1826     0186  29A1               	goto	l1513
  1827     0187                     l1511:
  1828     0187  3001               	movlw	1
  1829     0188  07A4               	addwf	sprintf@f,f
  1830     0189  30FF               	movlw	-1
  1831     018A  0724               	addwf	sprintf@f,w
  1832     018B  0084               	movwf	4
  1833     018C  120A  118A  2724  120A  118A  	fcall	stringdir
  1834     0191  00B0               	movwf	sprintf@c
  1835     0192  00A7               	movwf	??_sprintf
  1836     0193  01A8               	clrf	??_sprintf+1
  1837                           
  1838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1839                           ; Switch size 1, requested type "simple"
  1840                           ; Number of cases is 1, Range of values is 0 to 0
  1841                           ; switch strategies available:
  1842                           ; Name         Instructions Cycles
  1843                           ; simple_byte            4     3 (average)
  1844                           ; direct_byte           11     8 (fixed)
  1845                           ; jumptable            260     6 (fixed)
  1846                           ;	Chosen strategy is simple_byte
  1847     0194  0828               	movf	??_sprintf+1,w
  1848     0195  3A00               	xorlw	0	; case 0
  1849     0196  1903               	skipnz
  1850     0197  2999               	goto	l1767
  1851     0198  2A18               	goto	l1539
  1852     0199                     l1767:
  1853                           
  1854                           ; Switch size 1, requested type "simple"
  1855                           ; Number of cases is 2, Range of values is 0 to 117
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte            7     4 (average)
  1859                           ; jumptable            260     6 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861     0199  0827               	movf	??_sprintf,w
  1862     019A  3A00               	xorlw	0	; case 0
  1863     019B  1903               	skipnz
  1864     019C  2A28               	goto	l1541
  1865     019D  3A75               	xorlw	117	; case 117
  1866     019E  1903               	skipnz
  1867     019F  2982               	goto	l1507
  1868     01A0  2A18               	goto	l1539
  1869     01A1                     l1513:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1872     01A1  082B               	movf	sprintf@ap,w
  1873     01A2  0084               	movwf	4
  1874     01A3  1383               	bcf	3,7	;select IRP bank0
  1875     01A4  0800               	movf	0,w
  1876     01A5  00AC               	movwf	sprintf@val
  1877     01A6  0A84               	incf	4,f
  1878     01A7  0800               	movf	0,w
  1879     01A8  00AD               	movwf	sprintf@val+1
  1880     01A9                     l1515:
  1881     01A9  3002               	movlw	2
  1882     01AA  00A7               	movwf	??_sprintf
  1883     01AB  0827               	movf	??_sprintf,w
  1884     01AC  07AB               	addwf	sprintf@ap,f
  1885     01AD                     l1517:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1888     01AD  01B0               	clrf	sprintf@c
  1889     01AE  0AB0               	incf	sprintf@c,f
  1890     01AF                     l1523:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1893     01AF  0830               	movf	sprintf@c,w
  1894     01B0  00A7               	movwf	??_sprintf
  1895     01B1  0727               	addwf	??_sprintf,w
  1896     01B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1897     01B3  0084               	movwf	4
  1898     01B4  120A  118A  2724  120A  118A  	fcall	stringdir
  1899     01B9  00A8               	movwf	??_sprintf+1
  1900     01BA  120A  118A  2724  120A  118A  	fcall	stringdir
  1901     01BF  00A9               	movwf	??_sprintf+2
  1902     01C0  0829               	movf	??_sprintf+2,w
  1903     01C1  022D               	subwf	sprintf@val+1,w
  1904     01C2  1D03               	skipz
  1905     01C3  29C6               	goto	u1075
  1906     01C4  0828               	movf	??_sprintf+1,w
  1907     01C5  022C               	subwf	sprintf@val,w
  1908     01C6                     u1075:
  1909     01C6  1803               	skipnc
  1910     01C7  29C9               	goto	u1071
  1911     01C8  29CA               	goto	u1070
  1912     01C9                     u1071:
  1913     01C9  29CB               	goto	l1527
  1914     01CA                     u1070:
  1915     01CA  29D5               	goto	l1529
  1916     01CB                     l1527:
  1917     01CB  3001               	movlw	1
  1918     01CC  00A7               	movwf	??_sprintf
  1919     01CD  0827               	movf	??_sprintf,w
  1920     01CE  07B0               	addwf	sprintf@c,f
  1921     01CF  3005               	movlw	5
  1922     01D0  0630               	xorwf	sprintf@c,w
  1923     01D1  1D03               	btfss	3,2
  1924     01D2  29D4               	goto	u1081
  1925     01D3  29D5               	goto	u1080
  1926     01D4                     u1081:
  1927     01D4  29AF               	goto	l1523
  1928     01D5                     u1080:
  1929     01D5                     l1529:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1932     01D5  0830               	movf	sprintf@c,w
  1933     01D6  00AE               	movwf	sprintf@prec
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1936     01D7  2A0F               	goto	l1537
  1937     01D8                     l1531:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1940     01D8  300A               	movlw	10
  1941     01D9  00A0               	movwf	___lwmod@divisor
  1942     01DA  3000               	movlw	0
  1943     01DB  00A1               	movwf	___lwmod@divisor+1
  1944     01DC  082E               	movf	sprintf@prec,w
  1945     01DD  00A7               	movwf	??_sprintf
  1946     01DE  0727               	addwf	??_sprintf,w
  1947     01DF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1948     01E0  0084               	movwf	4
  1949     01E1  120A  118A  2724  120A  118A  	fcall	stringdir
  1950     01E6  00F2               	movwf	___lwdiv@divisor
  1951     01E7  120A  118A  2724  120A  118A  	fcall	stringdir
  1952     01EC  00F3               	movwf	___lwdiv@divisor+1
  1953     01ED  082D               	movf	sprintf@val+1,w
  1954     01EE  00F5               	movwf	___lwdiv@dividend+1
  1955     01EF  082C               	movf	sprintf@val,w
  1956     01F0  00F4               	movwf	___lwdiv@dividend
  1957     01F1  120A  118A  2667  120A  118A  	fcall	___lwdiv
  1958     01F6  0873               	movf	?___lwdiv+1,w
  1959     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1960     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1961     01F9  00A3               	movwf	___lwmod@dividend+1
  1962     01FA  0872               	movf	?___lwdiv,w
  1963     01FB  00A2               	movwf	___lwmod@dividend
  1964     01FC  120A  118A  26AB  120A  118A  	fcall	___lwmod
  1965     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1966     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0203  0820               	movf	?___lwmod,w
  1968     0204  3E30               	addlw	48
  1969     0205  00B0               	movwf	sprintf@c
  1970     0206                     l1533:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1973     0206  082F               	movf	sprintf@sp,w
  1974     0207  0084               	movwf	4
  1975     0208  0830               	movf	sprintf@c,w
  1976     0209  1383               	bcf	3,7	;select IRP bank0
  1977     020A  0080               	movwf	0
  1978     020B                     l1535:
  1979     020B  3001               	movlw	1
  1980     020C  00A7               	movwf	??_sprintf
  1981     020D  0827               	movf	??_sprintf,w
  1982     020E  07AF               	addwf	sprintf@sp,f
  1983     020F                     l1537:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1986     020F  30FF               	movlw	255
  1987     0210  00A7               	movwf	??_sprintf
  1988     0211  0827               	movf	??_sprintf,w
  1989     0212  07AE               	addwf	sprintf@prec,f
  1990     0213  0A2E               	incf	sprintf@prec,w
  1991     0214  1D03               	btfss	3,2
  1992     0215  2A17               	goto	u1091
  1993     0216  2A18               	goto	u1090
  1994     0217                     u1091:
  1995     0217  29D8               	goto	l1531
  1996     0218                     u1090:
  1997     0218                     l1539:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2000     0218  3001               	movlw	1
  2001     0219  07A4               	addwf	sprintf@f,f
  2002     021A  30FF               	movlw	-1
  2003     021B  0724               	addwf	sprintf@f,w
  2004     021C  0084               	movwf	4
  2005     021D  120A  118A  2724  120A  118A  	fcall	stringdir
  2006     0222  00B0               	movwf	sprintf@c
  2007     0223  0830               	movf	sprintf@c,w
  2008     0224  1D03               	btfss	3,2
  2009     0225  2A27               	goto	u1101
  2010     0226  2A28               	goto	u1100
  2011     0227                     u1101:
  2012     0227  2970               	goto	l1499
  2013     0228                     u1100:
  2014     0228                     l1541:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2017     0228  082F               	movf	sprintf@sp,w
  2018     0229  0084               	movwf	4
  2019     022A  1383               	bcf	3,7	;select IRP bank0
  2020     022B  0180               	clrf	0
  2021     022C                     l361:
  2022     022C  0008               	return
  2023     022D                     __end_of_sprintf:
  2024                           
  2025                           	psect	text3
  2026     0621                     __ptext3:	
  2027 ;; *************** function _Lcd_Write_String *****************
  2028 ;; Defined at:
  2029 ;;		line 104 in file "lcd.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  a               2    7[COMMON] PTR const unsigned char 
  2032 ;;		 -> STR_6(2), STR_3(2), buffer(20), STR_1(17), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  i               2    0[BANK0 ] int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         2       0       0       0       0
  2045 ;;      Locals:         0       2       0       0       0
  2046 ;;      Temps:          3       0       0       0       0
  2047 ;;      Totals:         5       2       0       0       0
  2048 ;;Total ram usage:        7 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 3
  2051 ;; This function calls:
  2052 ;;		_Lcd_Write_Char
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;;		_valorLCD
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059     0621                     _Lcd_Write_String:	
  2060                           ;psect for function _Lcd_Write_String
  2061                           
  2062     0621                     l1479:	
  2063                           ;incstack = 0
  2064                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2065                           
  2066                           
  2067                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2068     0621  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0622  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0623  01A0               	clrf	Lcd_Write_String@i
  2071     0624  01A1               	clrf	Lcd_Write_String@i+1
  2072     0625  2E4A               	goto	l1485
  2073     0626                     l1481:
  2074                           
  2075                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2076     0626  0820               	movf	Lcd_Write_String@i,w
  2077     0627  0777               	addwf	Lcd_Write_String@a,w
  2078     0628  00FA               	movwf	??_Lcd_Write_String+1
  2079     0629  0878               	movf	Lcd_Write_String@a+1,w
  2080     062A  00F9               	movwf	??_Lcd_Write_String
  2081     062B  1803               	skipnc
  2082     062C  0AF9               	incf	??_Lcd_Write_String,f
  2083     062D  1FA0               	btfss	Lcd_Write_String@i,7
  2084     062E  2E30               	goto	u1020
  2085     062F  03F9               	decf	??_Lcd_Write_String,f
  2086     0630                     u1020:
  2087     0630  0879               	movf	??_Lcd_Write_String,w
  2088     0631  00FB               	movwf	??_Lcd_Write_String+2
  2089     0632  087B               	movf	??_Lcd_Write_String+2,w
  2090     0633  1283               	bcf	3,5	;RP0=0, select bank0
  2091     0634  1303               	bcf	3,6	;RP1=0, select bank0
  2092     0635  00FF               	movwf	btemp+1
  2093     0636  087A               	movf	??_Lcd_Write_String+1,w
  2094     0637  0084               	movwf	4
  2095     0638  120A  118A  271A  120A  118A  	fcall	stringtab
  2096     063D  120A  118A  26E7  120A  118A  	fcall	_Lcd_Write_Char
  2097     0642                     l1483:
  2098     0642  3001               	movlw	1
  2099     0643  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0644  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0645  07A0               	addwf	Lcd_Write_String@i,f
  2102     0646  1803               	skipnc
  2103     0647  0AA1               	incf	Lcd_Write_String@i+1,f
  2104     0648  3000               	movlw	0
  2105     0649  07A1               	addwf	Lcd_Write_String@i+1,f
  2106     064A                     l1485:
  2107     064A  0820               	movf	Lcd_Write_String@i,w
  2108     064B  0777               	addwf	Lcd_Write_String@a,w
  2109     064C  00FA               	movwf	??_Lcd_Write_String+1
  2110     064D  0878               	movf	Lcd_Write_String@a+1,w
  2111     064E  00F9               	movwf	??_Lcd_Write_String
  2112     064F  1803               	skipnc
  2113     0650  0AF9               	incf	??_Lcd_Write_String,f
  2114     0651  1FA0               	btfss	Lcd_Write_String@i,7
  2115     0652  2E54               	goto	u1030
  2116     0653  03F9               	decf	??_Lcd_Write_String,f
  2117     0654                     u1030:
  2118     0654  0879               	movf	??_Lcd_Write_String,w
  2119     0655  00FB               	movwf	??_Lcd_Write_String+2
  2120     0656  087B               	movf	??_Lcd_Write_String+2,w
  2121     0657  1283               	bcf	3,5	;RP0=0, select bank0
  2122     0658  1303               	bcf	3,6	;RP1=0, select bank0
  2123     0659  00FF               	movwf	btemp+1
  2124     065A  087A               	movf	??_Lcd_Write_String+1,w
  2125     065B  0084               	movwf	4
  2126     065C  120A  118A  271A  120A  118A  	fcall	stringtab
  2127     0661  3A00               	xorlw	0
  2128     0662  1D03               	skipz
  2129     0663  2E65               	goto	u1041
  2130     0664  2E66               	goto	u1040
  2131     0665                     u1041:
  2132     0665  2E26               	goto	l1481
  2133     0666                     u1040:
  2134     0666                     l209:
  2135     0666  0008               	return
  2136     0667                     __end_of_Lcd_Write_String:
  2137                           
  2138                           	psect	text4
  2139     06E7                     __ptext4:	
  2140 ;; *************** function _Lcd_Write_Char *****************
  2141 ;; Defined at:
  2142 ;;		line 88 in file "lcd.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  a               1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  a               1    6[COMMON] unsigned char 
  2147 ;;  y               1    5[COMMON] unsigned char 
  2148 ;;  temp            1    4[COMMON] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         3       0       0       0       0
  2160 ;;      Temps:          1       0       0       0       0
  2161 ;;      Totals:         4       0       0       0       0
  2162 ;;Total ram usage:        4 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 2
  2165 ;; This function calls:
  2166 ;;		_Lcd_Port
  2167 ;; This function is called by:
  2168 ;;		_Lcd_Write_String
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172     06E7                     _Lcd_Write_Char:	
  2173                           ;psect for function _Lcd_Write_Char
  2174                           
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2178                           ;Lcd_Write_Char@a stored from wreg
  2179     06E7  00F6               	movwf	Lcd_Write_Char@a
  2180     06E8                     l1369:
  2181                           
  2182                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  2183     06E8  0876               	movf	Lcd_Write_Char@a,w
  2184     06E9  390F               	andlw	15
  2185     06EA  00F4               	movwf	Lcd_Write_Char@temp
  2186                           
  2187                           ;lcd.c: 92:     y = a&0xF0;
  2188     06EB  0876               	movf	Lcd_Write_Char@a,w
  2189     06EC  39F0               	andlw	240
  2190     06ED  00F5               	movwf	Lcd_Write_Char@y
  2191     06EE                     l1371:
  2192                           
  2193                           ;lcd.c: 93:     PORTDbits.RD2 = 1;
  2194     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2195     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2196     06F0  1508               	bsf	8,2	;volatile
  2197     06F1                     l1373:
  2198                           
  2199                           ;lcd.c: 94:     Lcd_Port(y>>4);
  2200     06F1  0875               	movf	Lcd_Write_Char@y,w
  2201     06F2  00F3               	movwf	??_Lcd_Write_Char
  2202     06F3  3004               	movlw	4
  2203     06F4                     u805:
  2204     06F4  1003               	clrc
  2205     06F5  0CF3               	rrf	??_Lcd_Write_Char,f
  2206     06F6  3EFF               	addlw	-1
  2207     06F7  1D03               	skipz
  2208     06F8  2EF4               	goto	u805
  2209     06F9  0873               	movf	??_Lcd_Write_Char,w
  2210     06FA  120A  118A  2777  120A  118A  	fcall	_Lcd_Port
  2211     06FF                     l1375:
  2212                           
  2213                           ;lcd.c: 95:     PORTDbits.RD3 = 1;
  2214     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0700  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0701  1588               	bsf	8,3	;volatile
  2217     0702                     l1377:
  2218                           
  2219                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2220     0702  300D               	movlw	13
  2221     0703  00F3               	movwf	??_Lcd_Write_Char
  2222     0704                     u1497:
  2223     0704  0BF3               	decfsz	??_Lcd_Write_Char,f
  2224     0705  2F04               	goto	u1497
  2225     0706                     l1379:
  2226                           
  2227                           ;lcd.c: 97:     PORTDbits.RD3 = 0;
  2228     0706  1283               	bcf	3,5	;RP0=0, select bank0
  2229     0707  1303               	bcf	3,6	;RP1=0, select bank0
  2230     0708  1188               	bcf	8,3	;volatile
  2231     0709                     l1381:
  2232                           
  2233                           ;lcd.c: 98:     Lcd_Port(temp);
  2234     0709  0874               	movf	Lcd_Write_Char@temp,w
  2235     070A  120A  118A  2777  120A  118A  	fcall	_Lcd_Port
  2236     070F                     l1383:
  2237                           
  2238                           ;lcd.c: 99:     PORTDbits.RD3 = 1;
  2239     070F  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0710  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0711  1588               	bsf	8,3	;volatile
  2242     0712                     l1385:
  2243                           
  2244                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2245     0712  300D               	movlw	13
  2246     0713  00F3               	movwf	??_Lcd_Write_Char
  2247     0714                     u1507:
  2248     0714  0BF3               	decfsz	??_Lcd_Write_Char,f
  2249     0715  2F14               	goto	u1507
  2250     0716                     l1387:
  2251                           
  2252                           ;lcd.c: 101:     PORTDbits.RD3 = 0;
  2253     0716  1283               	bcf	3,5	;RP0=0, select bank0
  2254     0717  1303               	bcf	3,6	;RP1=0, select bank0
  2255     0718  1188               	bcf	8,3	;volatile
  2256     0719                     l203:
  2257     0719  0008               	return
  2258     071A                     __end_of_Lcd_Write_Char:
  2259                           
  2260                           	psect	text5
  2261     0430                     __ptext5:	
  2262 ;; *************** function _Lcd_Set_Cursor *****************
  2263 ;; Defined at:
  2264 ;;		line 26 in file "lcd.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  a               1    wreg     unsigned char 
  2267 ;;  b               1    6[COMMON] unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  a               1    8[COMMON] unsigned char 
  2270 ;;  temp            1   11[COMMON] unsigned char 
  2271 ;;  y               1   10[COMMON] unsigned char 
  2272 ;;  z               1    9[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         1       0       0       0       0
  2283 ;;      Locals:         4       0       0       0       0
  2284 ;;      Temps:          1       0       0       0       0
  2285 ;;      Totals:         6       0       0       0       0
  2286 ;;Total ram usage:        6 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 3
  2289 ;; This function calls:
  2290 ;;		_Lcd_Cmd
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;;		_valorLCD
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297     0430                     _Lcd_Set_Cursor:	
  2298                           ;psect for function _Lcd_Set_Cursor
  2299                           
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2303                           ;Lcd_Set_Cursor@a stored from wreg
  2304     0430  00F8               	movwf	Lcd_Set_Cursor@a
  2305     0431                     l1439:
  2306                           
  2307                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  2308     0431  0378               	decf	Lcd_Set_Cursor@a,w
  2309     0432  1D03               	btfss	3,2
  2310     0433  2C35               	goto	u941
  2311     0434  2C36               	goto	u940
  2312     0435                     u941:
  2313     0435  2C53               	goto	l1449
  2314     0436                     u940:
  2315     0436                     l1441:
  2316                           
  2317                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  2318     0436  0876               	movf	Lcd_Set_Cursor@b,w
  2319     0437  3E7F               	addlw	127
  2320     0438  00FB               	movwf	Lcd_Set_Cursor@temp
  2321                           
  2322                           ;lcd.c: 32:         z = temp>>4;
  2323     0439  087B               	movf	Lcd_Set_Cursor@temp,w
  2324     043A  00F7               	movwf	??_Lcd_Set_Cursor
  2325     043B  3004               	movlw	4
  2326     043C                     u955:
  2327     043C  1003               	clrc
  2328     043D  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2329     043E  3EFF               	addlw	-1
  2330     043F  1D03               	skipz
  2331     0440  2C3C               	goto	u955
  2332     0441  0877               	movf	??_Lcd_Set_Cursor,w
  2333     0442  00F9               	movwf	Lcd_Set_Cursor@z
  2334     0443                     l1443:
  2335                           
  2336                           ;lcd.c: 33:         y = temp & 0x0F;
  2337     0443  087B               	movf	Lcd_Set_Cursor@temp,w
  2338     0444  390F               	andlw	15
  2339     0445  00FA               	movwf	Lcd_Set_Cursor@y
  2340     0446                     l1445:
  2341                           
  2342                           ;lcd.c: 34:         Lcd_Cmd(z);
  2343     0446  0879               	movf	Lcd_Set_Cursor@z,w
  2344     0447  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2345     044C                     l1447:
  2346                           
  2347                           ;lcd.c: 35:         Lcd_Cmd(y);
  2348     044C  087A               	movf	Lcd_Set_Cursor@y,w
  2349     044D  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2350                           
  2351                           ;lcd.c: 36:     }
  2352     0452  2CBC               	goto	l197
  2353     0453                     l1449:
  2354     0453  3002               	movlw	2
  2355     0454  0678               	xorwf	Lcd_Set_Cursor@a,w
  2356     0455  1D03               	btfss	3,2
  2357     0456  2C58               	goto	u961
  2358     0457  2C59               	goto	u960
  2359     0458                     u961:
  2360     0458  2C76               	goto	l1459
  2361     0459                     u960:
  2362     0459                     l1451:
  2363                           
  2364                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  2365     0459  0876               	movf	Lcd_Set_Cursor@b,w
  2366     045A  3EBF               	addlw	191
  2367     045B  00FB               	movwf	Lcd_Set_Cursor@temp
  2368                           
  2369                           ;lcd.c: 40:         z = temp>>4;
  2370     045C  087B               	movf	Lcd_Set_Cursor@temp,w
  2371     045D  00F7               	movwf	??_Lcd_Set_Cursor
  2372     045E  3004               	movlw	4
  2373     045F                     u975:
  2374     045F  1003               	clrc
  2375     0460  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2376     0461  3EFF               	addlw	-1
  2377     0462  1D03               	skipz
  2378     0463  2C5F               	goto	u975
  2379     0464  0877               	movf	??_Lcd_Set_Cursor,w
  2380     0465  00F9               	movwf	Lcd_Set_Cursor@z
  2381     0466                     l1453:
  2382                           
  2383                           ;lcd.c: 41:         y = temp & 0x0F;
  2384     0466  087B               	movf	Lcd_Set_Cursor@temp,w
  2385     0467  390F               	andlw	15
  2386     0468  00FA               	movwf	Lcd_Set_Cursor@y
  2387     0469                     l1455:
  2388                           
  2389                           ;lcd.c: 42:         Lcd_Cmd(z);
  2390     0469  0879               	movf	Lcd_Set_Cursor@z,w
  2391     046A  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2392     046F                     l1457:
  2393                           
  2394                           ;lcd.c: 43:         Lcd_Cmd(y);
  2395     046F  087A               	movf	Lcd_Set_Cursor@y,w
  2396     0470  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2397                           
  2398                           ;lcd.c: 44:     }
  2399     0475  2CBC               	goto	l197
  2400     0476                     l1459:
  2401     0476  3003               	movlw	3
  2402     0477  0678               	xorwf	Lcd_Set_Cursor@a,w
  2403     0478  1D03               	btfss	3,2
  2404     0479  2C7B               	goto	u981
  2405     047A  2C7C               	goto	u980
  2406     047B                     u981:
  2407     047B  2C99               	goto	l1469
  2408     047C                     u980:
  2409     047C                     l1461:
  2410                           
  2411                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  2412     047C  0876               	movf	Lcd_Set_Cursor@b,w
  2413     047D  3E93               	addlw	147
  2414     047E  00FB               	movwf	Lcd_Set_Cursor@temp
  2415                           
  2416                           ;lcd.c: 48:         z = temp>>4;
  2417     047F  087B               	movf	Lcd_Set_Cursor@temp,w
  2418     0480  00F7               	movwf	??_Lcd_Set_Cursor
  2419     0481  3004               	movlw	4
  2420     0482                     u995:
  2421     0482  1003               	clrc
  2422     0483  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2423     0484  3EFF               	addlw	-1
  2424     0485  1D03               	skipz
  2425     0486  2C82               	goto	u995
  2426     0487  0877               	movf	??_Lcd_Set_Cursor,w
  2427     0488  00F9               	movwf	Lcd_Set_Cursor@z
  2428     0489                     l1463:
  2429                           
  2430                           ;lcd.c: 49:         y = temp & 0x0F;
  2431     0489  087B               	movf	Lcd_Set_Cursor@temp,w
  2432     048A  390F               	andlw	15
  2433     048B  00FA               	movwf	Lcd_Set_Cursor@y
  2434     048C                     l1465:
  2435                           
  2436                           ;lcd.c: 50:         Lcd_Cmd(z);
  2437     048C  0879               	movf	Lcd_Set_Cursor@z,w
  2438     048D  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2439     0492                     l1467:
  2440                           
  2441                           ;lcd.c: 51:         Lcd_Cmd(y);
  2442     0492  087A               	movf	Lcd_Set_Cursor@y,w
  2443     0493  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2444                           
  2445                           ;lcd.c: 52:     }
  2446     0498  2CBC               	goto	l197
  2447     0499                     l1469:
  2448     0499  3004               	movlw	4
  2449     049A  0678               	xorwf	Lcd_Set_Cursor@a,w
  2450     049B  1D03               	btfss	3,2
  2451     049C  2C9E               	goto	u1001
  2452     049D  2C9F               	goto	u1000
  2453     049E                     u1001:
  2454     049E  2CBC               	goto	l193
  2455     049F                     u1000:
  2456     049F                     l1471:
  2457                           
  2458                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  2459     049F  0876               	movf	Lcd_Set_Cursor@b,w
  2460     04A0  3ED3               	addlw	211
  2461     04A1  00FB               	movwf	Lcd_Set_Cursor@temp
  2462                           
  2463                           ;lcd.c: 56:         z = temp>>4;
  2464     04A2  087B               	movf	Lcd_Set_Cursor@temp,w
  2465     04A3  00F7               	movwf	??_Lcd_Set_Cursor
  2466     04A4  3004               	movlw	4
  2467     04A5                     u1015:
  2468     04A5  1003               	clrc
  2469     04A6  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2470     04A7  3EFF               	addlw	-1
  2471     04A8  1D03               	skipz
  2472     04A9  2CA5               	goto	u1015
  2473     04AA  0877               	movf	??_Lcd_Set_Cursor,w
  2474     04AB  00F9               	movwf	Lcd_Set_Cursor@z
  2475     04AC                     l1473:
  2476                           
  2477                           ;lcd.c: 57:         y = temp & 0x0F;
  2478     04AC  087B               	movf	Lcd_Set_Cursor@temp,w
  2479     04AD  390F               	andlw	15
  2480     04AE  00FA               	movwf	Lcd_Set_Cursor@y
  2481     04AF                     l1475:
  2482                           
  2483                           ;lcd.c: 58:         Lcd_Cmd(z);
  2484     04AF  0879               	movf	Lcd_Set_Cursor@z,w
  2485     04B0  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2486     04B5                     l1477:
  2487                           
  2488                           ;lcd.c: 59:         Lcd_Cmd(y);
  2489     04B5  087A               	movf	Lcd_Set_Cursor@y,w
  2490     04B6  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  2491     04BB  2CBC               	goto	l197
  2492     04BC                     l193:
  2493     04BC                     l197:
  2494     04BC  0008               	return
  2495     04BD                     __end_of_Lcd_Set_Cursor:
  2496                           
  2497                           	psect	text6
  2498     0527                     __ptext6:	
  2499 ;; *************** function _setupINTOSC *****************
  2500 ;; Defined at:
  2501 ;;		line 10 in file "oscilador.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  IRCF            1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  IRCF            1    2[COMMON] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         1       0       0       0       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529     0527                     _setupINTOSC:	
  2530                           ;psect for function _setupINTOSC
  2531                           
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2535                           ;setupINTOSC@IRCF stored from wreg
  2536     0527  00F2               	movwf	setupINTOSC@IRCF
  2537     0528                     l1603:
  2538                           
  2539                           ;oscilador.c: 11:     if (IRCF == 7){
  2540     0528  3007               	movlw	7
  2541     0529  0672               	xorwf	setupINTOSC@IRCF,w
  2542     052A  1D03               	btfss	3,2
  2543     052B  2D2D               	goto	u1261
  2544     052C  2D2E               	goto	u1260
  2545     052D                     u1261:
  2546     052D  2D32               	goto	l114
  2547     052E                     u1260:
  2548     052E                     l1605:
  2549                           
  2550                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  2551     052E  3070               	movlw	112
  2552     052F  1683               	bsf	3,5	;RP0=1, select bank1
  2553     0530  1303               	bcf	3,6	;RP1=0, select bank1
  2554     0531  048F               	iorwf	15,f	;volatile
  2555     0532                     l114:	
  2556                           ;oscilador.c: 13:     }
  2557                           
  2558                           
  2559                           ;oscilador.c: 14:     if (IRCF == 6){
  2560     0532  3006               	movlw	6
  2561     0533  0672               	xorwf	setupINTOSC@IRCF,w
  2562     0534  1D03               	btfss	3,2
  2563     0535  2D37               	goto	u1271
  2564     0536  2D38               	goto	u1270
  2565     0537                     u1271:
  2566     0537  2D3E               	goto	l115
  2567     0538                     u1270:
  2568     0538                     l1607:
  2569                           
  2570                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  2571     0538  1683               	bsf	3,5	;RP0=1, select bank1
  2572     0539  1303               	bcf	3,6	;RP1=0, select bank1
  2573     053A  080F               	movf	15,w	;volatile
  2574     053B  398F               	andlw	-113
  2575     053C  3860               	iorlw	96
  2576     053D  008F               	movwf	15	;volatile
  2577     053E                     l115:	
  2578                           ;oscilador.c: 16:     }
  2579                           
  2580                           
  2581                           ;oscilador.c: 17:     if (IRCF == 5){
  2582     053E  3005               	movlw	5
  2583     053F  0672               	xorwf	setupINTOSC@IRCF,w
  2584     0540  1D03               	btfss	3,2
  2585     0541  2D43               	goto	u1281
  2586     0542  2D44               	goto	u1280
  2587     0543                     u1281:
  2588     0543  2D4A               	goto	l116
  2589     0544                     u1280:
  2590     0544                     l1609:
  2591                           
  2592                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  2593     0544  1683               	bsf	3,5	;RP0=1, select bank1
  2594     0545  1303               	bcf	3,6	;RP1=0, select bank1
  2595     0546  080F               	movf	15,w	;volatile
  2596     0547  398F               	andlw	-113
  2597     0548  3850               	iorlw	80
  2598     0549  008F               	movwf	15	;volatile
  2599     054A                     l116:	
  2600                           ;oscilador.c: 19:     }
  2601                           
  2602                           
  2603                           ;oscilador.c: 20:     if (IRCF == 4){
  2604     054A  3004               	movlw	4
  2605     054B  0672               	xorwf	setupINTOSC@IRCF,w
  2606     054C  1D03               	btfss	3,2
  2607     054D  2D4F               	goto	u1291
  2608     054E  2D50               	goto	u1290
  2609     054F                     u1291:
  2610     054F  2D56               	goto	l117
  2611     0550                     u1290:
  2612     0550                     l1611:
  2613                           
  2614                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  2615     0550  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0551  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0552  080F               	movf	15,w	;volatile
  2618     0553  398F               	andlw	-113
  2619     0554  3840               	iorlw	64
  2620     0555  008F               	movwf	15	;volatile
  2621     0556                     l117:	
  2622                           ;oscilador.c: 22:     }
  2623                           
  2624                           
  2625                           ;oscilador.c: 23:     if (IRCF == 3){
  2626     0556  3003               	movlw	3
  2627     0557  0672               	xorwf	setupINTOSC@IRCF,w
  2628     0558  1D03               	btfss	3,2
  2629     0559  2D5B               	goto	u1301
  2630     055A  2D5C               	goto	u1300
  2631     055B                     u1301:
  2632     055B  2D62               	goto	l118
  2633     055C                     u1300:
  2634     055C                     l1613:
  2635                           
  2636                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  2637     055C  1683               	bsf	3,5	;RP0=1, select bank1
  2638     055D  1303               	bcf	3,6	;RP1=0, select bank1
  2639     055E  080F               	movf	15,w	;volatile
  2640     055F  398F               	andlw	-113
  2641     0560  3830               	iorlw	48
  2642     0561  008F               	movwf	15	;volatile
  2643     0562                     l118:	
  2644                           ;oscilador.c: 25:     }
  2645                           
  2646                           
  2647                           ;oscilador.c: 26:     if (IRCF == 2){
  2648     0562  3002               	movlw	2
  2649     0563  0672               	xorwf	setupINTOSC@IRCF,w
  2650     0564  1D03               	btfss	3,2
  2651     0565  2D67               	goto	u1311
  2652     0566  2D68               	goto	u1310
  2653     0567                     u1311:
  2654     0567  2D6E               	goto	l119
  2655     0568                     u1310:
  2656     0568                     l1615:
  2657                           
  2658                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  2659     0568  1683               	bsf	3,5	;RP0=1, select bank1
  2660     0569  1303               	bcf	3,6	;RP1=0, select bank1
  2661     056A  080F               	movf	15,w	;volatile
  2662     056B  398F               	andlw	-113
  2663     056C  3820               	iorlw	32
  2664     056D  008F               	movwf	15	;volatile
  2665     056E                     l119:	
  2666                           ;oscilador.c: 28:     }
  2667                           
  2668                           
  2669                           ;oscilador.c: 29:     if (IRCF == 1){
  2670     056E  0372               	decf	setupINTOSC@IRCF,w
  2671     056F  1D03               	btfss	3,2
  2672     0570  2D72               	goto	u1321
  2673     0571  2D73               	goto	u1320
  2674     0572                     u1321:
  2675     0572  2D79               	goto	l120
  2676     0573                     u1320:
  2677     0573                     l1617:
  2678                           
  2679                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  2680     0573  1683               	bsf	3,5	;RP0=1, select bank1
  2681     0574  1303               	bcf	3,6	;RP1=0, select bank1
  2682     0575  080F               	movf	15,w	;volatile
  2683     0576  398F               	andlw	-113
  2684     0577  3810               	iorlw	16
  2685     0578  008F               	movwf	15	;volatile
  2686     0579                     l120:	
  2687                           ;oscilador.c: 31:     }
  2688                           
  2689                           
  2690                           ;oscilador.c: 32:     if (IRCF == 0){
  2691     0579  0872               	movf	setupINTOSC@IRCF,w
  2692     057A  1D03               	btfss	3,2
  2693     057B  2D7D               	goto	u1331
  2694     057C  2D7E               	goto	u1330
  2695     057D                     u1331:
  2696     057D  2D82               	goto	l1621
  2697     057E                     u1330:
  2698     057E                     l1619:
  2699                           
  2700                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  2701     057E  308F               	movlw	-113
  2702     057F  1683               	bsf	3,5	;RP0=1, select bank1
  2703     0580  1303               	bcf	3,6	;RP1=0, select bank1
  2704     0581  058F               	andwf	15,f	;volatile
  2705     0582                     l1621:
  2706                           
  2707                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  2708     0582  1683               	bsf	3,5	;RP0=1, select bank1
  2709     0583  1303               	bcf	3,6	;RP1=0, select bank1
  2710     0584  140F               	bsf	15,0	;volatile
  2711     0585                     l122:
  2712     0585  0008               	return
  2713     0586                     __end_of_setupINTOSC:
  2714                           
  2715                           	psect	text7
  2716     074A                     __ptext7:	
  2717 ;; *************** function _setup *****************
  2718 ;; Defined at:
  2719 ;;		line 149 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0
  2736 ;;      Totals:         2       0       0       0       0
  2737 ;;Total ram usage:        2 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 2
  2740 ;; This function calls:
  2741 ;;		_spiInit
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     074A                     _setup:	
  2748                           ;psect for function _setup
  2749                           
  2750     074A                     l1623:	
  2751                           ;incstack = 0
  2752                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2753                           
  2754                           
  2755                           ;main.c: 151:     ANSELH = 0;
  2756     074A  1683               	bsf	3,5	;RP0=1, select bank3
  2757     074B  1703               	bsf	3,6	;RP1=1, select bank3
  2758     074C  0189               	clrf	9	;volatile
  2759                           
  2760                           ;main.c: 152:     TRISB = 0;
  2761     074D  1683               	bsf	3,5	;RP0=1, select bank1
  2762     074E  1303               	bcf	3,6	;RP1=0, select bank1
  2763     074F  0186               	clrf	6	;volatile
  2764                           
  2765                           ;main.c: 153:     TRISA = 0;
  2766     0750  0185               	clrf	5	;volatile
  2767     0751                     l1625:
  2768                           
  2769                           ;main.c: 154:     TRISCbits.TRISC1 = 0;
  2770     0751  1087               	bcf	7,1	;volatile
  2771     0752                     l1627:
  2772                           
  2773                           ;main.c: 155:     TRISCbits.TRISC2 = 0;
  2774     0752  1107               	bcf	7,2	;volatile
  2775                           
  2776                           ;main.c: 157:     TRISD = 0;
  2777     0753  0188               	clrf	8	;volatile
  2778                           
  2779                           ;main.c: 159:     PORTA = 0;
  2780     0754  1283               	bcf	3,5	;RP0=0, select bank0
  2781     0755  1303               	bcf	3,6	;RP1=0, select bank0
  2782     0756  0185               	clrf	5	;volatile
  2783                           
  2784                           ;main.c: 160:     PORTB = 0;
  2785     0757  0186               	clrf	6	;volatile
  2786                           
  2787                           ;main.c: 162:     PORTD = 0;
  2788     0758  0188               	clrf	8	;volatile
  2789                           
  2790                           ;main.c: 163:     PORTE = 0;
  2791     0759  0189               	clrf	9	;volatile
  2792     075A                     l1629:
  2793                           
  2794                           ;main.c: 166:     INTCONbits.GIE = 0;
  2795     075A  138B               	bcf	11,7	;volatile
  2796     075B                     l1631:
  2797                           
  2798                           ;main.c: 167:     INTCONbits.PEIE = 0;
  2799     075B  130B               	bcf	11,6	;volatile
  2800     075C                     l1633:
  2801                           
  2802                           ;main.c: 168:     PIE1bits.SSPIE = 0;
  2803     075C  1683               	bsf	3,5	;RP0=1, select bank1
  2804     075D  1303               	bcf	3,6	;RP1=0, select bank1
  2805     075E  118C               	bcf	12,3	;volatile
  2806     075F                     l1635:
  2807                           
  2808                           ;main.c: 169:     PIE1bits.ADIE = 0;
  2809     075F  130C               	bcf	12,6	;volatile
  2810     0760                     l1637:
  2811                           
  2812                           ;main.c: 171:     PORTCbits.RC1 = 0;
  2813     0760  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0761  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0762  1087               	bcf	7,1	;volatile
  2816     0763                     l1639:
  2817                           
  2818                           ;main.c: 172:     PORTCbits.RC2 = 0;
  2819     0763  1107               	bcf	7,2	;volatile
  2820     0764                     l1641:
  2821                           
  2822                           ;main.c: 173:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  2823     0764  01F2               	clrf	spiInit@sDataSample
  2824     0765  01F3               	clrf	spiInit@sClockIdle
  2825     0766  01F4               	clrf	spiInit@sTransmitEdge
  2826     0767  3020               	movlw	32
  2827     0768  120A  118A  27D0  120A  118A  	fcall	_spiInit
  2828     076D                     l1643:
  2829                           
  2830                           ;main.c: 174:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2831     076D  300D               	movlw	13
  2832     076E  00F7               	movwf	??_setup+1
  2833     076F  30FB               	movlw	251
  2834     0770  00F6               	movwf	??_setup
  2835     0771                     u1517:
  2836     0771  0BF6               	decfsz	??_setup,f
  2837     0772  2F71               	goto	u1517
  2838     0773  0BF7               	decfsz	??_setup+1,f
  2839     0774  2F71               	goto	u1517
  2840     0775  2F76               	nop2
  2841     0776                     l103:
  2842     0776  0008               	return
  2843     0777                     __end_of_setup:
  2844                           
  2845                           	psect	text8
  2846     07D0                     __ptext8:	
  2847 ;; *************** function _spiInit *****************
  2848 ;; Defined at:
  2849 ;;		line 12 in file "SPI.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  sType           1    wreg     enum E1292
  2852 ;;  sDataSample     1    2[COMMON] enum E1300
  2853 ;;  sClockIdle      1    3[COMMON] enum E1304
  2854 ;;  sTransmitEdg    1    4[COMMON] enum E1308
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  sType           1    5[COMMON] enum E1292
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         3       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0
  2869 ;;      Totals:         4       0       0       0       0
  2870 ;;Total ram usage:        4 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 1
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_setup
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880     07D0                     _spiInit:	
  2881                           ;psect for function _spiInit
  2882                           
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2886                           ;spiInit@sType stored from wreg
  2887     07D0  00F5               	movwf	spiInit@sType
  2888     07D1                     l1487:
  2889                           
  2890                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2891     07D1  1683               	bsf	3,5	;RP0=1, select bank1
  2892     07D2  1303               	bcf	3,6	;RP1=0, select bank1
  2893     07D3  1287               	bcf	7,5	;volatile
  2894                           
  2895                           ;SPI.c: 15:     if(sType & 0b00000100)
  2896     07D4  1D75               	btfss	spiInit@sType,2
  2897     07D5  2FD7               	goto	u1051
  2898     07D6  2FD8               	goto	u1050
  2899     07D7                     u1051:
  2900     07D7  2FDC               	goto	l1493
  2901     07D8                     u1050:
  2902     07D8                     l1489:
  2903                           
  2904                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2905     07D8  0874               	movf	spiInit@sTransmitEdge,w
  2906     07D9  0094               	movwf	20	;volatile
  2907     07DA                     l1491:
  2908                           
  2909                           ;SPI.c: 18:         TRISC3 = 1;
  2910     07DA  1587               	bsf	7,3	;volatile
  2911                           
  2912                           ;SPI.c: 19:     }
  2913     07DB  2FE0               	goto	l138
  2914     07DC                     l1493:
  2915                           
  2916                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2917     07DC  0872               	movf	spiInit@sDataSample,w
  2918     07DD  0474               	iorwf	spiInit@sTransmitEdge,w
  2919     07DE  0094               	movwf	20	;volatile
  2920     07DF                     l1495:
  2921                           
  2922                           ;SPI.c: 23:         TRISC3 = 0;
  2923     07DF  1187               	bcf	7,3	;volatile
  2924     07E0                     l138:	
  2925                           ;SPI.c: 24:     }
  2926                           
  2927                           
  2928                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2929     07E0  0875               	movf	spiInit@sType,w
  2930     07E1  0473               	iorwf	spiInit@sClockIdle,w
  2931     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2932     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2933     07E4  0094               	movwf	20	;volatile
  2934     07E5                     l139:
  2935     07E5  0008               	return
  2936     07E6                     __end_of_spiInit:
  2937                           
  2938                           	psect	text9
  2939     02EB                     __ptext9:	
  2940 ;; *************** function _map *****************
  2941 ;; Defined at:
  2942 ;;		line 10 in file "mapf.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  x               4   18[BANK0 ] long 
  2945 ;;  eMin            4   22[BANK0 ] long 
  2946 ;;  eMax            4   26[BANK0 ] long 
  2947 ;;  sMin            4   30[BANK0 ] long 
  2948 ;;  sMax            4   34[BANK0 ] long 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  4   18[BANK0 ] long 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0      20       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0      16       0       0       0
  2963 ;;      Totals:         0      36       0       0       0
  2964 ;;Total ram usage:       36 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 2
  2967 ;; This function calls:
  2968 ;;		___aldiv
  2969 ;;		___lmul
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975     02EB                     _map:	
  2976                           ;psect for function _map
  2977                           
  2978     02EB                     l1657:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2981                           
  2982                           
  2983                           ;mapf.c: 10: long map(long x, long eMin, long eMax, long sMin, long sMax);mapf.c: 11: {;
      +                          mapf.c: 12:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
  2984     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2985     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2986     02ED  083A               	movf	map@eMax,w
  2987     02EE  00C6               	movwf	??_map
  2988     02EF  083B               	movf	map@eMax+1,w
  2989     02F0  00C7               	movwf	??_map+1
  2990     02F1  083C               	movf	map@eMax+2,w
  2991     02F2  00C8               	movwf	??_map+2
  2992     02F3  083D               	movf	map@eMax+3,w
  2993     02F4  00C9               	movwf	??_map+3
  2994     02F5  0836               	movf	map@eMin,w
  2995     02F6  02C6               	subwf	??_map,f
  2996     02F7  0837               	movf	map@eMin+1,w
  2997     02F8  1C03               	skipc
  2998     02F9  0F37               	incfsz	map@eMin+1,w
  2999     02FA  2AFC               	goto	u1341
  3000     02FB  2AFD               	goto	u1342
  3001     02FC                     u1341:
  3002     02FC  02C7               	subwf	??_map+1,f
  3003     02FD                     u1342:
  3004     02FD  0838               	movf	map@eMin+2,w
  3005     02FE  1C03               	skipc
  3006     02FF  0F38               	incfsz	map@eMin+2,w
  3007     0300  2B02               	goto	u1343
  3008     0301  2B03               	goto	u1344
  3009     0302                     u1343:
  3010     0302  02C8               	subwf	??_map+2,f
  3011     0303                     u1344:
  3012     0303  0839               	movf	map@eMin+3,w
  3013     0304  1C03               	skipc
  3014     0305  0F39               	incfsz	map@eMin+3,w
  3015     0306  2B08               	goto	u1345
  3016     0307  2B09               	goto	u1346
  3017     0308                     u1345:
  3018     0308  02C9               	subwf	??_map+3,f
  3019     0309                     u1346:
  3020     0309  0849               	movf	??_map+3,w
  3021     030A  00A7               	movwf	___aldiv@divisor+3
  3022     030B  0848               	movf	??_map+2,w
  3023     030C  00A6               	movwf	___aldiv@divisor+2
  3024     030D  0847               	movf	??_map+1,w
  3025     030E  00A5               	movwf	___aldiv@divisor+1
  3026     030F  0846               	movf	??_map,w
  3027     0310  00A4               	movwf	___aldiv@divisor
  3028     0311  0832               	movf	map@x,w
  3029     0312  00CA               	movwf	??_map+4
  3030     0313  0833               	movf	map@x+1,w
  3031     0314  00CB               	movwf	??_map+5
  3032     0315  0834               	movf	map@x+2,w
  3033     0316  00CC               	movwf	??_map+6
  3034     0317  0835               	movf	map@x+3,w
  3035     0318  00CD               	movwf	??_map+7
  3036     0319  0836               	movf	map@eMin,w
  3037     031A  02CA               	subwf	??_map+4,f
  3038     031B  0837               	movf	map@eMin+1,w
  3039     031C  1C03               	skipc
  3040     031D  0F37               	incfsz	map@eMin+1,w
  3041     031E  2B20               	goto	u1351
  3042     031F  2B21               	goto	u1352
  3043     0320                     u1351:
  3044     0320  02CB               	subwf	??_map+5,f
  3045     0321                     u1352:
  3046     0321  0838               	movf	map@eMin+2,w
  3047     0322  1C03               	skipc
  3048     0323  0F38               	incfsz	map@eMin+2,w
  3049     0324  2B26               	goto	u1353
  3050     0325  2B27               	goto	u1354
  3051     0326                     u1353:
  3052     0326  02CC               	subwf	??_map+6,f
  3053     0327                     u1354:
  3054     0327  0839               	movf	map@eMin+3,w
  3055     0328  1C03               	skipc
  3056     0329  0F39               	incfsz	map@eMin+3,w
  3057     032A  2B2C               	goto	u1355
  3058     032B  2B2D               	goto	u1356
  3059     032C                     u1355:
  3060     032C  02CD               	subwf	??_map+7,f
  3061     032D                     u1356:
  3062     032D  084D               	movf	??_map+7,w
  3063     032E  00F5               	movwf	___lmul@multiplier+3
  3064     032F  084C               	movf	??_map+6,w
  3065     0330  00F4               	movwf	___lmul@multiplier+2
  3066     0331  084B               	movf	??_map+5,w
  3067     0332  00F3               	movwf	___lmul@multiplier+1
  3068     0333  084A               	movf	??_map+4,w
  3069     0334  00F2               	movwf	___lmul@multiplier
  3070     0335  0842               	movf	map@sMax,w
  3071     0336  00CE               	movwf	??_map+8
  3072     0337  0843               	movf	map@sMax+1,w
  3073     0338  00CF               	movwf	??_map+9
  3074     0339  0844               	movf	map@sMax+2,w
  3075     033A  00D0               	movwf	??_map+10
  3076     033B  0845               	movf	map@sMax+3,w
  3077     033C  00D1               	movwf	??_map+11
  3078     033D  083E               	movf	map@sMin,w
  3079     033E  02CE               	subwf	??_map+8,f
  3080     033F  083F               	movf	map@sMin+1,w
  3081     0340  1C03               	skipc
  3082     0341  0F3F               	incfsz	map@sMin+1,w
  3083     0342  2B44               	goto	u1361
  3084     0343  2B45               	goto	u1362
  3085     0344                     u1361:
  3086     0344  02CF               	subwf	??_map+9,f
  3087     0345                     u1362:
  3088     0345  0840               	movf	map@sMin+2,w
  3089     0346  1C03               	skipc
  3090     0347  0F40               	incfsz	map@sMin+2,w
  3091     0348  2B4A               	goto	u1363
  3092     0349  2B4B               	goto	u1364
  3093     034A                     u1363:
  3094     034A  02D0               	subwf	??_map+10,f
  3095     034B                     u1364:
  3096     034B  0841               	movf	map@sMin+3,w
  3097     034C  1C03               	skipc
  3098     034D  0F41               	incfsz	map@sMin+3,w
  3099     034E  2B50               	goto	u1365
  3100     034F  2B51               	goto	u1366
  3101     0350                     u1365:
  3102     0350  02D1               	subwf	??_map+11,f
  3103     0351                     u1366:
  3104     0351  0851               	movf	??_map+11,w
  3105     0352  00F9               	movwf	___lmul@multiplicand+3
  3106     0353  0850               	movf	??_map+10,w
  3107     0354  00F8               	movwf	___lmul@multiplicand+2
  3108     0355  084F               	movf	??_map+9,w
  3109     0356  00F7               	movwf	___lmul@multiplicand+1
  3110     0357  084E               	movf	??_map+8,w
  3111     0358  00F6               	movwf	___lmul@multiplicand
  3112     0359  120A  118A  25D5  120A  118A  	fcall	___lmul
  3113     035E  0875               	movf	?___lmul+3,w
  3114     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3115     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3116     0361  00AB               	movwf	___aldiv@dividend+3
  3117     0362  0874               	movf	?___lmul+2,w
  3118     0363  00AA               	movwf	___aldiv@dividend+2
  3119     0364  0873               	movf	?___lmul+1,w
  3120     0365  00A9               	movwf	___aldiv@dividend+1
  3121     0366  0872               	movf	?___lmul,w
  3122     0367  00A8               	movwf	___aldiv@dividend
  3123     0368  120A  118A  2393  120A  118A  	fcall	___aldiv
  3124     036D  1283               	bcf	3,5	;RP0=0, select bank0
  3125     036E  1303               	bcf	3,6	;RP1=0, select bank0
  3126     036F  0824               	movf	?___aldiv,w
  3127     0370  073E               	addwf	map@sMin,w
  3128     0371  00D2               	movwf	??_map+12
  3129     0372  3000               	movlw	0
  3130     0373  1803               	skipnc
  3131     0374  3001               	movlw	1
  3132     0375  0725               	addwf	?___aldiv+1,w
  3133     0376  01D4               	clrf	??_map+14
  3134     0377  1803               	skipnc
  3135     0378  0AD4               	incf	??_map+14,f
  3136     0379  073F               	addwf	map@sMin+1,w
  3137     037A  00D3               	movwf	??_map+13
  3138     037B  1803               	skipnc
  3139     037C  0AD4               	incf	??_map+14,f
  3140     037D  0826               	movf	?___aldiv+2,w
  3141     037E  0754               	addwf	??_map+14,w
  3142     037F  01D5               	clrf	??_map+15
  3143     0380  1803               	skipnc
  3144     0381  0AD5               	incf	??_map+15,f
  3145     0382  0740               	addwf	map@sMin+2,w
  3146     0383  00D4               	movwf	??_map+14
  3147     0384  1803               	skipnc
  3148     0385  0AD5               	incf	??_map+15,f
  3149     0386  0827               	movf	?___aldiv+3,w
  3150     0387  0755               	addwf	??_map+15,w
  3151     0388  0741               	addwf	map@sMin+3,w
  3152     0389  00D5               	movwf	??_map+15
  3153     038A  0855               	movf	??_map+15,w
  3154     038B  00B5               	movwf	?_map+3
  3155     038C  0854               	movf	??_map+14,w
  3156     038D  00B4               	movwf	?_map+2
  3157     038E  0853               	movf	??_map+13,w
  3158     038F  00B3               	movwf	?_map+1
  3159     0390  0852               	movf	??_map+12,w
  3160     0391  00B2               	movwf	?_map
  3161     0392                     l224:
  3162     0392  0008               	return
  3163     0393                     __end_of_map:
  3164                           
  3165                           	psect	text10
  3166     05D5                     __ptext10:	
  3167 ;; *************** function ___lmul *****************
  3168 ;; Defined at:
  3169 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  multiplier      4    2[COMMON] unsigned long 
  3172 ;;  multiplicand    4    6[COMMON] unsigned long 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  product         4    0[BANK0 ] unsigned long 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  4    2[COMMON] unsigned long 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         8       0       0       0       0
  3185 ;;      Locals:         0       4       0       0       0
  3186 ;;      Temps:          1       0       0       0       0
  3187 ;;      Totals:         9       4       0       0       0
  3188 ;;Total ram usage:       13 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_map
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198     05D5                     ___lmul:	
  3199                           ;psect for function ___lmul
  3200                           
  3201     05D5                     l1549:	
  3202                           ;incstack = 0
  3203                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3204                           
  3205     05D5  3000               	movlw	0
  3206     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3207     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3208     05D8  00A3               	movwf	___lmul@product+3
  3209     05D9  3000               	movlw	0
  3210     05DA  00A2               	movwf	___lmul@product+2
  3211     05DB  3000               	movlw	0
  3212     05DC  00A1               	movwf	___lmul@product+1
  3213     05DD  3000               	movlw	0
  3214     05DE  00A0               	movwf	___lmul@product
  3215     05DF                     l1551:
  3216     05DF  1C72               	btfss	___lmul@multiplier,0
  3217     05E0  2DE2               	goto	u1111
  3218     05E1  2DE3               	goto	u1110
  3219     05E2                     u1111:
  3220     05E2  2DFC               	goto	l1555
  3221     05E3                     u1110:
  3222     05E3                     l1553:
  3223     05E3  0876               	movf	___lmul@multiplicand,w
  3224     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3225     05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3226     05E6  07A0               	addwf	___lmul@product,f
  3227     05E7  0877               	movf	___lmul@multiplicand+1,w
  3228     05E8  1103               	clrz
  3229     05E9  1803               	skipnc
  3230     05EA  3E01               	addlw	1
  3231     05EB  1903               	skipnz
  3232     05EC  2DEE               	goto	u1121
  3233     05ED  07A1               	addwf	___lmul@product+1,f
  3234     05EE                     u1121:
  3235     05EE  0878               	movf	___lmul@multiplicand+2,w
  3236     05EF  1103               	clrz
  3237     05F0  1803               	skipnc
  3238     05F1  3E01               	addlw	1
  3239     05F2  1903               	skipnz
  3240     05F3  2DF5               	goto	u1122
  3241     05F4  07A2               	addwf	___lmul@product+2,f
  3242     05F5                     u1122:
  3243     05F5  0879               	movf	___lmul@multiplicand+3,w
  3244     05F6  1103               	clrz
  3245     05F7  1803               	skipnc
  3246     05F8  3E01               	addlw	1
  3247     05F9  1903               	skipnz
  3248     05FA  2DFC               	goto	u1123
  3249     05FB  07A3               	addwf	___lmul@product+3,f
  3250     05FC                     u1123:
  3251     05FC                     l1555:
  3252     05FC  3001               	movlw	1
  3253     05FD  00FA               	movwf	??___lmul
  3254     05FE                     u1135:
  3255     05FE  1003               	clrc
  3256     05FF  0DF6               	rlf	___lmul@multiplicand,f
  3257     0600  0DF7               	rlf	___lmul@multiplicand+1,f
  3258     0601  0DF8               	rlf	___lmul@multiplicand+2,f
  3259     0602  0DF9               	rlf	___lmul@multiplicand+3,f
  3260     0603  0BFA               	decfsz	??___lmul,f
  3261     0604  2DFE               	goto	u1135
  3262     0605                     l1557:
  3263     0605  3001               	movlw	1
  3264     0606                     u1145:
  3265     0606  1003               	clrc
  3266     0607  0CF5               	rrf	___lmul@multiplier+3,f
  3267     0608  0CF4               	rrf	___lmul@multiplier+2,f
  3268     0609  0CF3               	rrf	___lmul@multiplier+1,f
  3269     060A  0CF2               	rrf	___lmul@multiplier,f
  3270     060B  3EFF               	addlw	-1
  3271     060C  1D03               	skipz
  3272     060D  2E06               	goto	u1145
  3273     060E  0875               	movf	___lmul@multiplier+3,w
  3274     060F  0474               	iorwf	___lmul@multiplier+2,w
  3275     0610  0473               	iorwf	___lmul@multiplier+1,w
  3276     0611  0472               	iorwf	___lmul@multiplier,w
  3277     0612  1D03               	skipz
  3278     0613  2E15               	goto	u1151
  3279     0614  2E16               	goto	u1150
  3280     0615                     u1151:
  3281     0615  2DDF               	goto	l1551
  3282     0616                     u1150:
  3283     0616                     l1559:
  3284     0616  1283               	bcf	3,5	;RP0=0, select bank0
  3285     0617  1303               	bcf	3,6	;RP1=0, select bank0
  3286     0618  0823               	movf	___lmul@product+3,w
  3287     0619  00F5               	movwf	?___lmul+3
  3288     061A  0822               	movf	___lmul@product+2,w
  3289     061B  00F4               	movwf	?___lmul+2
  3290     061C  0821               	movf	___lmul@product+1,w
  3291     061D  00F3               	movwf	?___lmul+1
  3292     061E  0820               	movf	___lmul@product,w
  3293     061F  00F2               	movwf	?___lmul
  3294     0620                     l379:
  3295     0620  0008               	return
  3296     0621                     __end_of___lmul:
  3297                           
  3298                           	psect	text11
  3299     0393                     __ptext11:	
  3300 ;; *************** function ___aldiv *****************
  3301 ;; Defined at:
  3302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  divisor         4    4[BANK0 ] long 
  3305 ;;  dividend        4    8[BANK0 ] long 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  quotient        4   14[BANK0 ] long 
  3308 ;;  sign            1   13[BANK0 ] unsigned char 
  3309 ;;  counter         1   12[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  4    4[BANK0 ] long 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       8       0       0       0
  3320 ;;      Locals:         0       6       0       0       0
  3321 ;;      Temps:          1       0       0       0       0
  3322 ;;      Totals:         1      14       0       0       0
  3323 ;;Total ram usage:       15 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_map
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333     0393                     ___aldiv:	
  3334                           ;psect for function ___aldiv
  3335                           
  3336     0393                     l1563:	
  3337                           ;incstack = 0
  3338                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3339                           
  3340     0393  1283               	bcf	3,5	;RP0=0, select bank0
  3341     0394  1303               	bcf	3,6	;RP1=0, select bank0
  3342     0395  01AD               	clrf	___aldiv@sign
  3343     0396                     l1565:
  3344     0396  1FA7               	btfss	___aldiv@divisor+3,7
  3345     0397  2B99               	goto	u1161
  3346     0398  2B9A               	goto	u1160
  3347     0399                     u1161:
  3348     0399  2BA7               	goto	l430
  3349     039A                     u1160:
  3350     039A                     l1567:
  3351     039A  09A4               	comf	___aldiv@divisor,f
  3352     039B  09A5               	comf	___aldiv@divisor+1,f
  3353     039C  09A6               	comf	___aldiv@divisor+2,f
  3354     039D  09A7               	comf	___aldiv@divisor+3,f
  3355     039E  0AA4               	incf	___aldiv@divisor,f
  3356     039F  1903               	skipnz
  3357     03A0  0AA5               	incf	___aldiv@divisor+1,f
  3358     03A1  1903               	skipnz
  3359     03A2  0AA6               	incf	___aldiv@divisor+2,f
  3360     03A3  1903               	skipnz
  3361     03A4  0AA7               	incf	___aldiv@divisor+3,f
  3362     03A5  01AD               	clrf	___aldiv@sign
  3363     03A6  0AAD               	incf	___aldiv@sign,f
  3364     03A7                     l430:
  3365     03A7  1FAB               	btfss	___aldiv@dividend+3,7
  3366     03A8  2BAA               	goto	u1171
  3367     03A9  2BAB               	goto	u1170
  3368     03AA                     u1171:
  3369     03AA  2BBA               	goto	l1573
  3370     03AB                     u1170:
  3371     03AB                     l1569:
  3372     03AB  09A8               	comf	___aldiv@dividend,f
  3373     03AC  09A9               	comf	___aldiv@dividend+1,f
  3374     03AD  09AA               	comf	___aldiv@dividend+2,f
  3375     03AE  09AB               	comf	___aldiv@dividend+3,f
  3376     03AF  0AA8               	incf	___aldiv@dividend,f
  3377     03B0  1903               	skipnz
  3378     03B1  0AA9               	incf	___aldiv@dividend+1,f
  3379     03B2  1903               	skipnz
  3380     03B3  0AAA               	incf	___aldiv@dividend+2,f
  3381     03B4  1903               	skipnz
  3382     03B5  0AAB               	incf	___aldiv@dividend+3,f
  3383     03B6                     l1571:
  3384     03B6  3001               	movlw	1
  3385     03B7  00FB               	movwf	??___aldiv
  3386     03B8  087B               	movf	??___aldiv,w
  3387     03B9  06AD               	xorwf	___aldiv@sign,f
  3388     03BA                     l1573:
  3389     03BA  3000               	movlw	0
  3390     03BB  00B1               	movwf	___aldiv@quotient+3
  3391     03BC  3000               	movlw	0
  3392     03BD  00B0               	movwf	___aldiv@quotient+2
  3393     03BE  3000               	movlw	0
  3394     03BF  00AF               	movwf	___aldiv@quotient+1
  3395     03C0  3000               	movlw	0
  3396     03C1  00AE               	movwf	___aldiv@quotient
  3397     03C2                     l1575:
  3398     03C2  0827               	movf	___aldiv@divisor+3,w
  3399     03C3  0426               	iorwf	___aldiv@divisor+2,w
  3400     03C4  0425               	iorwf	___aldiv@divisor+1,w
  3401     03C5  0424               	iorwf	___aldiv@divisor,w
  3402     03C6  1903               	skipnz
  3403     03C7  2BC9               	goto	u1181
  3404     03C8  2BCA               	goto	u1180
  3405     03C9                     u1181:
  3406     03C9  2C17               	goto	l1595
  3407     03CA                     u1180:
  3408     03CA                     l1577:
  3409     03CA  01AC               	clrf	___aldiv@counter
  3410     03CB  0AAC               	incf	___aldiv@counter,f
  3411     03CC  2BDA               	goto	l1581
  3412     03CD                     l1579:
  3413     03CD  3001               	movlw	1
  3414     03CE  00FB               	movwf	??___aldiv
  3415     03CF                     u1195:
  3416     03CF  1003               	clrc
  3417     03D0  0DA4               	rlf	___aldiv@divisor,f
  3418     03D1  0DA5               	rlf	___aldiv@divisor+1,f
  3419     03D2  0DA6               	rlf	___aldiv@divisor+2,f
  3420     03D3  0DA7               	rlf	___aldiv@divisor+3,f
  3421     03D4  0BFB               	decfsz	??___aldiv,f
  3422     03D5  2BCF               	goto	u1195
  3423     03D6  3001               	movlw	1
  3424     03D7  00FB               	movwf	??___aldiv
  3425     03D8  087B               	movf	??___aldiv,w
  3426     03D9  07AC               	addwf	___aldiv@counter,f
  3427     03DA                     l1581:
  3428     03DA  1FA7               	btfss	___aldiv@divisor+3,7
  3429     03DB  2BDD               	goto	u1201
  3430     03DC  2BDE               	goto	u1200
  3431     03DD                     u1201:
  3432     03DD  2BCD               	goto	l1579
  3433     03DE                     u1200:
  3434     03DE                     l1583:
  3435     03DE  3001               	movlw	1
  3436     03DF  00FB               	movwf	??___aldiv
  3437     03E0                     u1215:
  3438     03E0  1003               	clrc
  3439     03E1  0DAE               	rlf	___aldiv@quotient,f
  3440     03E2  0DAF               	rlf	___aldiv@quotient+1,f
  3441     03E3  0DB0               	rlf	___aldiv@quotient+2,f
  3442     03E4  0DB1               	rlf	___aldiv@quotient+3,f
  3443     03E5  0BFB               	decfsz	??___aldiv,f
  3444     03E6  2BE0               	goto	u1215
  3445     03E7                     l1585:
  3446     03E7  0827               	movf	___aldiv@divisor+3,w
  3447     03E8  022B               	subwf	___aldiv@dividend+3,w
  3448     03E9  1D03               	skipz
  3449     03EA  2BF5               	goto	u1225
  3450     03EB  0826               	movf	___aldiv@divisor+2,w
  3451     03EC  022A               	subwf	___aldiv@dividend+2,w
  3452     03ED  1D03               	skipz
  3453     03EE  2BF5               	goto	u1225
  3454     03EF  0825               	movf	___aldiv@divisor+1,w
  3455     03F0  0229               	subwf	___aldiv@dividend+1,w
  3456     03F1  1D03               	skipz
  3457     03F2  2BF5               	goto	u1225
  3458     03F3  0824               	movf	___aldiv@divisor,w
  3459     03F4  0228               	subwf	___aldiv@dividend,w
  3460     03F5                     u1225:
  3461     03F5  1C03               	skipc
  3462     03F6  2BF8               	goto	u1221
  3463     03F7  2BF9               	goto	u1220
  3464     03F8                     u1221:
  3465     03F8  2C08               	goto	l1591
  3466     03F9                     u1220:
  3467     03F9                     l1587:
  3468     03F9  0824               	movf	___aldiv@divisor,w
  3469     03FA  02A8               	subwf	___aldiv@dividend,f
  3470     03FB  0825               	movf	___aldiv@divisor+1,w
  3471     03FC  1C03               	skipc
  3472     03FD  0F25               	incfsz	___aldiv@divisor+1,w
  3473     03FE  02A9               	subwf	___aldiv@dividend+1,f
  3474     03FF  0826               	movf	___aldiv@divisor+2,w
  3475     0400  1C03               	skipc
  3476     0401  0F26               	incfsz	___aldiv@divisor+2,w
  3477     0402  02AA               	subwf	___aldiv@dividend+2,f
  3478     0403  0827               	movf	___aldiv@divisor+3,w
  3479     0404  1C03               	skipc
  3480     0405  0F27               	incfsz	___aldiv@divisor+3,w
  3481     0406  02AB               	subwf	___aldiv@dividend+3,f
  3482     0407                     l1589:
  3483     0407  142E               	bsf	___aldiv@quotient,0
  3484     0408                     l1591:
  3485     0408  3001               	movlw	1
  3486     0409                     u1235:
  3487     0409  1003               	clrc
  3488     040A  0CA7               	rrf	___aldiv@divisor+3,f
  3489     040B  0CA6               	rrf	___aldiv@divisor+2,f
  3490     040C  0CA5               	rrf	___aldiv@divisor+1,f
  3491     040D  0CA4               	rrf	___aldiv@divisor,f
  3492     040E  3EFF               	addlw	-1
  3493     040F  1D03               	skipz
  3494     0410  2C09               	goto	u1235
  3495     0411                     l1593:
  3496     0411  3001               	movlw	1
  3497     0412  02AC               	subwf	___aldiv@counter,f
  3498     0413  1D03               	btfss	3,2
  3499     0414  2C16               	goto	u1241
  3500     0415  2C17               	goto	u1240
  3501     0416                     u1241:
  3502     0416  2BDE               	goto	l1583
  3503     0417                     u1240:
  3504     0417                     l1595:
  3505     0417  082D               	movf	___aldiv@sign,w
  3506     0418  1903               	btfsc	3,2
  3507     0419  2C1B               	goto	u1251
  3508     041A  2C1C               	goto	u1250
  3509     041B                     u1251:
  3510     041B  2C27               	goto	l1599
  3511     041C                     u1250:
  3512     041C                     l1597:
  3513     041C  09AE               	comf	___aldiv@quotient,f
  3514     041D  09AF               	comf	___aldiv@quotient+1,f
  3515     041E  09B0               	comf	___aldiv@quotient+2,f
  3516     041F  09B1               	comf	___aldiv@quotient+3,f
  3517     0420  0AAE               	incf	___aldiv@quotient,f
  3518     0421  1903               	skipnz
  3519     0422  0AAF               	incf	___aldiv@quotient+1,f
  3520     0423  1903               	skipnz
  3521     0424  0AB0               	incf	___aldiv@quotient+2,f
  3522     0425  1903               	skipnz
  3523     0426  0AB1               	incf	___aldiv@quotient+3,f
  3524     0427                     l1599:
  3525     0427  0831               	movf	___aldiv@quotient+3,w
  3526     0428  00A7               	movwf	?___aldiv+3
  3527     0429  0830               	movf	___aldiv@quotient+2,w
  3528     042A  00A6               	movwf	?___aldiv+2
  3529     042B  082F               	movf	___aldiv@quotient+1,w
  3530     042C  00A5               	movwf	?___aldiv+1
  3531     042D  082E               	movf	___aldiv@quotient,w
  3532     042E  00A4               	movwf	?___aldiv
  3533     042F                     l440:
  3534     042F  0008               	return
  3535     0430                     __end_of___aldiv:
  3536                           
  3537                           	psect	text12
  3538     0586                     __ptext12:	
  3539 ;; *************** function _calculovolt *****************
  3540 ;; Defined at:
  3541 ;;		line 208 in file "main.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 2
  3562 ;; This function calls:
  3563 ;;		___lwdiv
  3564 ;;		___lwmod
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     0586                     _calculovolt:	
  3571                           ;psect for function _calculovolt
  3572                           
  3573     0586                     l1661:	
  3574                           ;incstack = 0
  3575                           ; Regs used in _calculovolt: [wreg+status,2+status,0+pclath+cstack]
  3576                           
  3577                           
  3578                           ;main.c: 209:     u1 = VOLT1/40;
  3579     0586  3028               	movlw	40
  3580     0587  00F2               	movwf	___lwdiv@divisor
  3581     0588  3000               	movlw	0
  3582     0589  00F3               	movwf	___lwdiv@divisor+1
  3583     058A  1283               	bcf	3,5	;RP0=0, select bank0
  3584     058B  1303               	bcf	3,6	;RP1=0, select bank0
  3585     058C  0867               	movf	_VOLT1+1,w
  3586     058D  00F5               	movwf	___lwdiv@dividend+1
  3587     058E  0866               	movf	_VOLT1,w
  3588     058F  00F4               	movwf	___lwdiv@dividend
  3589     0590  120A  118A  2667  120A  118A  	fcall	___lwdiv
  3590     0595  0873               	movf	?___lwdiv+1,w
  3591     0596  1283               	bcf	3,5	;RP0=0, select bank0
  3592     0597  1303               	bcf	3,6	;RP1=0, select bank0
  3593     0598  00E3               	movwf	_u1+1
  3594     0599  0872               	movf	?___lwdiv,w
  3595     059A  00E2               	movwf	_u1
  3596                           
  3597                           ;main.c: 210:     d1 = VOLT1%40;
  3598     059B  3028               	movlw	40
  3599     059C  00A0               	movwf	___lwmod@divisor
  3600     059D  3000               	movlw	0
  3601     059E  00A1               	movwf	___lwmod@divisor+1
  3602     059F  0867               	movf	_VOLT1+1,w
  3603     05A0  00A3               	movwf	___lwmod@dividend+1
  3604     05A1  0866               	movf	_VOLT1,w
  3605     05A2  00A2               	movwf	___lwmod@dividend
  3606     05A3  120A  118A  26AB  120A  118A  	fcall	___lwmod
  3607     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3608     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3609     05AA  0821               	movf	?___lwmod+1,w
  3610     05AB  00E1               	movwf	_d1+1
  3611     05AC  0820               	movf	?___lwmod,w
  3612     05AD  00E0               	movwf	_d1
  3613                           
  3614                           ;main.c: 211:     u2 = VOLT2/40;
  3615     05AE  3028               	movlw	40
  3616     05AF  00F2               	movwf	___lwdiv@divisor
  3617     05B0  3000               	movlw	0
  3618     05B1  00F3               	movwf	___lwdiv@divisor+1
  3619     05B2  0865               	movf	_VOLT2+1,w
  3620     05B3  00F5               	movwf	___lwdiv@dividend+1
  3621     05B4  0864               	movf	_VOLT2,w
  3622     05B5  00F4               	movwf	___lwdiv@dividend
  3623     05B6  120A  118A  2667  120A  118A  	fcall	___lwdiv
  3624     05BB  0873               	movf	?___lwdiv+1,w
  3625     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3626     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3627     05BE  00DF               	movwf	_u2+1
  3628     05BF  0872               	movf	?___lwdiv,w
  3629     05C0  00DE               	movwf	_u2
  3630                           
  3631                           ;main.c: 212:     d2 = VOLT2%40;
  3632     05C1  3028               	movlw	40
  3633     05C2  00A0               	movwf	___lwmod@divisor
  3634     05C3  3000               	movlw	0
  3635     05C4  00A1               	movwf	___lwmod@divisor+1
  3636     05C5  0865               	movf	_VOLT2+1,w
  3637     05C6  00A3               	movwf	___lwmod@dividend+1
  3638     05C7  0864               	movf	_VOLT2,w
  3639     05C8  00A2               	movwf	___lwmod@dividend
  3640     05C9  120A  118A  26AB  120A  118A  	fcall	___lwmod
  3641     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3642     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3643     05D0  0821               	movf	?___lwmod+1,w
  3644     05D1  00DD               	movwf	_d2+1
  3645     05D2  0820               	movf	?___lwmod,w
  3646     05D3  00DC               	movwf	_d2
  3647     05D4                     l109:
  3648     05D4  0008               	return
  3649     05D5                     __end_of_calculovolt:
  3650                           
  3651                           	psect	text13
  3652     06AB                     __ptext13:	
  3653 ;; *************** function ___lwmod *****************
  3654 ;; Defined at:
  3655 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  divisor         2    0[BANK0 ] unsigned int 
  3658 ;;  dividend        2    2[BANK0 ] unsigned int 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  counter         1   11[COMMON] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2    0[BANK0 ] unsigned int 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       4       0       0       0
  3671 ;;      Locals:         1       0       0       0       0
  3672 ;;      Temps:          1       0       0       0       0
  3673 ;;      Totals:         2       4       0       0       0
  3674 ;;Total ram usage:        6 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_calculovolt
  3681 ;;		_sprintf
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685     06AB                     ___lwmod:	
  3686                           ;psect for function ___lwmod
  3687                           
  3688     06AB                     l1415:	
  3689                           ;incstack = 0
  3690                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3691                           
  3692     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3693     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3694     06AD  0820               	movf	___lwmod@divisor,w
  3695     06AE  0421               	iorwf	___lwmod@divisor+1,w
  3696     06AF  1903               	btfsc	3,2
  3697     06B0  2EB2               	goto	u881
  3698     06B1  2EB3               	goto	u880
  3699     06B2                     u881:
  3700     06B2  2EE2               	goto	l1433
  3701     06B3                     u880:
  3702     06B3                     l1417:
  3703     06B3  01FB               	clrf	___lwmod@counter
  3704     06B4  0AFB               	incf	___lwmod@counter,f
  3705     06B5  2EC1               	goto	l1423
  3706     06B6                     l1419:
  3707     06B6  3001               	movlw	1
  3708     06B7                     u895:
  3709     06B7  1003               	clrc
  3710     06B8  0DA0               	rlf	___lwmod@divisor,f
  3711     06B9  0DA1               	rlf	___lwmod@divisor+1,f
  3712     06BA  3EFF               	addlw	-1
  3713     06BB  1D03               	skipz
  3714     06BC  2EB7               	goto	u895
  3715     06BD                     l1421:
  3716     06BD  3001               	movlw	1
  3717     06BE  00FA               	movwf	??___lwmod
  3718     06BF  087A               	movf	??___lwmod,w
  3719     06C0  07FB               	addwf	___lwmod@counter,f
  3720     06C1                     l1423:
  3721     06C1  1FA1               	btfss	___lwmod@divisor+1,7
  3722     06C2  2EC4               	goto	u901
  3723     06C3  2EC5               	goto	u900
  3724     06C4                     u901:
  3725     06C4  2EB6               	goto	l1419
  3726     06C5                     u900:
  3727     06C5                     l1425:
  3728     06C5  0821               	movf	___lwmod@divisor+1,w
  3729     06C6  0223               	subwf	___lwmod@dividend+1,w
  3730     06C7  1D03               	skipz
  3731     06C8  2ECB               	goto	u915
  3732     06C9  0820               	movf	___lwmod@divisor,w
  3733     06CA  0222               	subwf	___lwmod@dividend,w
  3734     06CB                     u915:
  3735     06CB  1C03               	skipc
  3736     06CC  2ECE               	goto	u911
  3737     06CD  2ECF               	goto	u910
  3738     06CE                     u911:
  3739     06CE  2ED5               	goto	l1429
  3740     06CF                     u910:
  3741     06CF                     l1427:
  3742     06CF  0820               	movf	___lwmod@divisor,w
  3743     06D0  02A2               	subwf	___lwmod@dividend,f
  3744     06D1  0821               	movf	___lwmod@divisor+1,w
  3745     06D2  1C03               	skipc
  3746     06D3  03A3               	decf	___lwmod@dividend+1,f
  3747     06D4  02A3               	subwf	___lwmod@dividend+1,f
  3748     06D5                     l1429:
  3749     06D5  3001               	movlw	1
  3750     06D6                     u925:
  3751     06D6  1003               	clrc
  3752     06D7  0CA1               	rrf	___lwmod@divisor+1,f
  3753     06D8  0CA0               	rrf	___lwmod@divisor,f
  3754     06D9  3EFF               	addlw	-1
  3755     06DA  1D03               	skipz
  3756     06DB  2ED6               	goto	u925
  3757     06DC                     l1431:
  3758     06DC  3001               	movlw	1
  3759     06DD  02FB               	subwf	___lwmod@counter,f
  3760     06DE  1D03               	btfss	3,2
  3761     06DF  2EE1               	goto	u931
  3762     06E0  2EE2               	goto	u930
  3763     06E1                     u931:
  3764     06E1  2EC5               	goto	l1425
  3765     06E2                     u930:
  3766     06E2                     l1433:
  3767     06E2  0823               	movf	___lwmod@dividend+1,w
  3768     06E3  00A1               	movwf	?___lwmod+1
  3769     06E4  0822               	movf	___lwmod@dividend,w
  3770     06E5  00A0               	movwf	?___lwmod
  3771     06E6                     l647:
  3772     06E6  0008               	return
  3773     06E7                     __end_of___lwmod:
  3774                           
  3775                           	psect	text14
  3776     0667                     __ptext14:	
  3777 ;; *************** function ___lwdiv *****************
  3778 ;; Defined at:
  3779 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  divisor         2    2[COMMON] unsigned int 
  3782 ;;  dividend        2    4[COMMON] unsigned int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  quotient        2    7[COMMON] unsigned int 
  3785 ;;  counter         1    9[COMMON] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2    2[COMMON] unsigned int 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         4       0       0       0       0
  3796 ;;      Locals:         3       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0
  3798 ;;      Totals:         8       0       0       0       0
  3799 ;;Total ram usage:        8 bytes
  3800 ;; Hardware stack levels used: 1
  3801 ;; Hardware stack levels required when called: 1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_calculovolt
  3806 ;;		_sprintf
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810     0667                     ___lwdiv:	
  3811                           ;psect for function ___lwdiv
  3812                           
  3813     0667                     l1389:	
  3814                           ;incstack = 0
  3815                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3816                           
  3817     0667  01F7               	clrf	___lwdiv@quotient
  3818     0668  01F8               	clrf	___lwdiv@quotient+1
  3819     0669                     l1391:
  3820     0669  0872               	movf	___lwdiv@divisor,w
  3821     066A  0473               	iorwf	___lwdiv@divisor+1,w
  3822     066B  1903               	btfsc	3,2
  3823     066C  2E6E               	goto	u811
  3824     066D  2E6F               	goto	u810
  3825     066E                     u811:
  3826     066E  2EA6               	goto	l1411
  3827     066F                     u810:
  3828     066F                     l1393:
  3829     066F  01F9               	clrf	___lwdiv@counter
  3830     0670  0AF9               	incf	___lwdiv@counter,f
  3831     0671  2E7D               	goto	l1399
  3832     0672                     l1395:
  3833     0672  3001               	movlw	1
  3834     0673                     u825:
  3835     0673  1003               	clrc
  3836     0674  0DF2               	rlf	___lwdiv@divisor,f
  3837     0675  0DF3               	rlf	___lwdiv@divisor+1,f
  3838     0676  3EFF               	addlw	-1
  3839     0677  1D03               	skipz
  3840     0678  2E73               	goto	u825
  3841     0679                     l1397:
  3842     0679  3001               	movlw	1
  3843     067A  00F6               	movwf	??___lwdiv
  3844     067B  0876               	movf	??___lwdiv,w
  3845     067C  07F9               	addwf	___lwdiv@counter,f
  3846     067D                     l1399:
  3847     067D  1FF3               	btfss	___lwdiv@divisor+1,7
  3848     067E  2E80               	goto	u831
  3849     067F  2E81               	goto	u830
  3850     0680                     u831:
  3851     0680  2E72               	goto	l1395
  3852     0681                     u830:
  3853     0681                     l1401:
  3854     0681  3001               	movlw	1
  3855     0682                     u845:
  3856     0682  1003               	clrc
  3857     0683  0DF7               	rlf	___lwdiv@quotient,f
  3858     0684  0DF8               	rlf	___lwdiv@quotient+1,f
  3859     0685  3EFF               	addlw	-1
  3860     0686  1D03               	skipz
  3861     0687  2E82               	goto	u845
  3862     0688  0873               	movf	___lwdiv@divisor+1,w
  3863     0689  0275               	subwf	___lwdiv@dividend+1,w
  3864     068A  1D03               	skipz
  3865     068B  2E8E               	goto	u855
  3866     068C  0872               	movf	___lwdiv@divisor,w
  3867     068D  0274               	subwf	___lwdiv@dividend,w
  3868     068E                     u855:
  3869     068E  1C03               	skipc
  3870     068F  2E91               	goto	u851
  3871     0690  2E92               	goto	u850
  3872     0691                     u851:
  3873     0691  2E99               	goto	l1407
  3874     0692                     u850:
  3875     0692                     l1403:
  3876     0692  0872               	movf	___lwdiv@divisor,w
  3877     0693  02F4               	subwf	___lwdiv@dividend,f
  3878     0694  0873               	movf	___lwdiv@divisor+1,w
  3879     0695  1C03               	skipc
  3880     0696  03F5               	decf	___lwdiv@dividend+1,f
  3881     0697  02F5               	subwf	___lwdiv@dividend+1,f
  3882     0698                     l1405:
  3883     0698  1477               	bsf	___lwdiv@quotient,0
  3884     0699                     l1407:
  3885     0699  3001               	movlw	1
  3886     069A                     u865:
  3887     069A  1003               	clrc
  3888     069B  0CF3               	rrf	___lwdiv@divisor+1,f
  3889     069C  0CF2               	rrf	___lwdiv@divisor,f
  3890     069D  3EFF               	addlw	-1
  3891     069E  1D03               	skipz
  3892     069F  2E9A               	goto	u865
  3893     06A0                     l1409:
  3894     06A0  3001               	movlw	1
  3895     06A1  02F9               	subwf	___lwdiv@counter,f
  3896     06A2  1D03               	btfss	3,2
  3897     06A3  2EA5               	goto	u871
  3898     06A4  2EA6               	goto	u870
  3899     06A5                     u871:
  3900     06A5  2E81               	goto	l1401
  3901     06A6                     u870:
  3902     06A6                     l1411:
  3903     06A6  0878               	movf	___lwdiv@quotient+1,w
  3904     06A7  00F3               	movwf	?___lwdiv+1
  3905     06A8  0877               	movf	___lwdiv@quotient,w
  3906     06A9  00F2               	movwf	?___lwdiv
  3907     06AA                     l637:
  3908     06AA  0008               	return
  3909     06AB                     __end_of___lwdiv:
  3910                           
  3911                           	psect	text15
  3912     04BD                     __ptext15:	
  3913 ;; *************** function _Lcd_Init *****************
  3914 ;; Defined at:
  3915 ;;		line 63 in file "lcd.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0
  3931 ;;      Temps:          2       0       0       0       0
  3932 ;;      Totals:         2       0       0       0       0
  3933 ;;Total ram usage:        2 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 4
  3936 ;; This function calls:
  3937 ;;		_Lcd_Clear
  3938 ;;		_Lcd_Cmd
  3939 ;;		_Lcd_Port
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945     04BD                     _Lcd_Init:	
  3946                           ;psect for function _Lcd_Init
  3947                           
  3948     04BD                     l1645:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3951                           
  3952                           
  3953                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  3954     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  3955     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  3956     04BF  1108               	bcf	8,2	;volatile
  3957                           
  3958                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  3959     04C0  1188               	bcf	8,3	;volatile
  3960                           
  3961                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  3962     04C1  1208               	bcf	8,4	;volatile
  3963                           
  3964                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  3965     04C2  1288               	bcf	8,5	;volatile
  3966                           
  3967                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  3968     04C3  1308               	bcf	8,6	;volatile
  3969                           
  3970                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  3971     04C4  1388               	bcf	8,7	;volatile
  3972     04C5                     l1647:
  3973                           
  3974                           ;lcd.c: 71:     Lcd_Port(0x00);
  3975     04C5  3000               	movlw	0
  3976     04C6  120A  118A  2777  120A  118A  	fcall	_Lcd_Port
  3977     04CB                     l1649:
  3978                           
  3979                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3980     04CB  301A               	movlw	26
  3981     04CC  00F7               	movwf	??_Lcd_Init+1
  3982     04CD  30F8               	movlw	248
  3983     04CE  00F6               	movwf	??_Lcd_Init
  3984     04CF                     u1527:
  3985     04CF  0BF6               	decfsz	??_Lcd_Init,f
  3986     04D0  2CCF               	goto	u1527
  3987     04D1  0BF7               	decfsz	??_Lcd_Init+1,f
  3988     04D2  2CCF               	goto	u1527
  3989     04D3  0000               	nop
  3990     04D4                     l1651:
  3991                           
  3992                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3993     04D4  3003               	movlw	3
  3994     04D5  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  3995                           
  3996                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3997     04DA  3007               	movlw	7
  3998     04DB  00F7               	movwf	??_Lcd_Init+1
  3999     04DC  307D               	movlw	125
  4000     04DD  00F6               	movwf	??_Lcd_Init
  4001     04DE                     u1537:
  4002     04DE  0BF6               	decfsz	??_Lcd_Init,f
  4003     04DF  2CDE               	goto	u1537
  4004     04E0  0BF7               	decfsz	??_Lcd_Init+1,f
  4005     04E1  2CDE               	goto	u1537
  4006     04E2                     l1653:
  4007                           
  4008                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  4009     04E2  3003               	movlw	3
  4010     04E3  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4011     04E8                     l1655:
  4012                           
  4013                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4014     04E8  300F               	movlw	15
  4015     04E9  00F7               	movwf	??_Lcd_Init+1
  4016     04EA  3047               	movlw	71
  4017     04EB  00F6               	movwf	??_Lcd_Init
  4018     04EC                     u1547:
  4019     04EC  0BF6               	decfsz	??_Lcd_Init,f
  4020     04ED  2CEC               	goto	u1547
  4021     04EE  0BF7               	decfsz	??_Lcd_Init+1,f
  4022     04EF  2CEC               	goto	u1547
  4023     04F0  2CF1               	nop2
  4024                           
  4025                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  4026     04F1  3003               	movlw	3
  4027     04F2  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4028                           
  4029                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  4030     04F7  3002               	movlw	2
  4031     04F8  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4032                           
  4033                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  4034     04FD  3002               	movlw	2
  4035     04FE  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4036                           
  4037                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  4038     0503  3008               	movlw	8
  4039     0504  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4040                           
  4041                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  4042     0509  3000               	movlw	0
  4043     050A  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4044                           
  4045                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  4046     050F  300C               	movlw	12
  4047     0510  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4048                           
  4049                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  4050     0515  3000               	movlw	0
  4051     0516  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4052                           
  4053                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  4054     051B  3006               	movlw	6
  4055     051C  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4056                           
  4057                           ;lcd.c: 85:     Lcd_Clear();
  4058     0521  120A  118A  27E6  120A  118A  	fcall	_Lcd_Clear
  4059     0526                     l200:
  4060     0526  0008               	return
  4061     0527                     __end_of_Lcd_Init:
  4062                           
  4063                           	psect	text16
  4064     07E6                     __ptext16:	
  4065 ;; *************** function _Lcd_Clear *****************
  4066 ;; Defined at:
  4067 ;;		line 20 in file "lcd.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4081 ;;      Params:         0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 3
  4088 ;; This function calls:
  4089 ;;		_Lcd_Cmd
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;;		_Lcd_Init
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     07E6                     _Lcd_Clear:	
  4097                           ;psect for function _Lcd_Clear
  4098                           
  4099     07E6                     l1437:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4102                           
  4103                           
  4104                           ;lcd.c: 22:     Lcd_Cmd(0);
  4105     07E6  3000               	movlw	0
  4106     07E7  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4107                           
  4108                           ;lcd.c: 23:     Lcd_Cmd(1);
  4109     07EC  3001               	movlw	1
  4110     07ED  120A  118A  27B6  120A  118A  	fcall	_Lcd_Cmd
  4111     07F2                     l187:
  4112     07F2  0008               	return
  4113     07F3                     __end_of_Lcd_Clear:
  4114                           
  4115                           	psect	text17
  4116     07B6                     __ptext17:	
  4117 ;; *************** function _Lcd_Cmd *****************
  4118 ;; Defined at:
  4119 ;;		line 11 in file "lcd.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  a               1    wreg     unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  a               1    5[COMMON] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4133 ;;      Params:         0       0       0       0       0
  4134 ;;      Locals:         1       0       0       0       0
  4135 ;;      Temps:          2       0       0       0       0
  4136 ;;      Totals:         3       0       0       0       0
  4137 ;;Total ram usage:        3 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 2
  4140 ;; This function calls:
  4141 ;;		_Lcd_Port
  4142 ;; This function is called by:
  4143 ;;		_Lcd_Clear
  4144 ;;		_Lcd_Set_Cursor
  4145 ;;		_Lcd_Init
  4146 ;;		_Lcd_Shift_Right
  4147 ;;		_Lcd_Shift_Left
  4148 ;;		_Lcd_Blink
  4149 ;;		_Lcd_NoBlink
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153     07B6                     _Lcd_Cmd:	
  4154                           ;psect for function _Lcd_Cmd
  4155                           
  4156                           
  4157                           ;incstack = 0
  4158                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4159                           ;Lcd_Cmd@a stored from wreg
  4160     07B6  00F5               	movwf	Lcd_Cmd@a
  4161     07B7                     l1359:
  4162                           
  4163                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTDbits.RD2 = 0;
  4164     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4165     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4166     07B9  1108               	bcf	8,2	;volatile
  4167     07BA                     l1361:
  4168                           
  4169                           ;lcd.c: 14:     Lcd_Port(a);
  4170     07BA  0875               	movf	Lcd_Cmd@a,w
  4171     07BB  120A  118A  2777  120A  118A  	fcall	_Lcd_Port
  4172     07C0                     l1363:
  4173                           
  4174                           ;lcd.c: 15:     PORTDbits.RD3 = 1;
  4175     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  4176     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  4177     07C2  1588               	bsf	8,3	;volatile
  4178     07C3                     l1365:
  4179                           
  4180                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4181     07C3  3006               	movlw	6
  4182     07C4  00F4               	movwf	??_Lcd_Cmd+1
  4183     07C5  3030               	movlw	48
  4184     07C6  00F3               	movwf	??_Lcd_Cmd
  4185     07C7                     u1557:
  4186     07C7  0BF3               	decfsz	??_Lcd_Cmd,f
  4187     07C8  2FC7               	goto	u1557
  4188     07C9  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4189     07CA  2FC7               	goto	u1557
  4190     07CB  0000               	nop
  4191     07CC                     l1367:
  4192                           
  4193                           ;lcd.c: 17:     PORTDbits.RD3 = 0;
  4194     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  4195     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  4196     07CE  1188               	bcf	8,3	;volatile
  4197     07CF                     l184:
  4198     07CF  0008               	return
  4199     07D0                     __end_of_Lcd_Cmd:
  4200                           
  4201                           	psect	text18
  4202     0777                     __ptext18:	
  4203 ;; *************** function _Lcd_Port *****************
  4204 ;; Defined at:
  4205 ;;		line 3 in file "lcd.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  a               1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  a               1    2[COMMON] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4219 ;;      Params:         0       0       0       0       0
  4220 ;;      Locals:         1       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0
  4222 ;;      Totals:         1       0       0       0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 1
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_Lcd_Cmd
  4230 ;;		_Lcd_Init
  4231 ;;		_Lcd_Write_Char
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235     0777                     _Lcd_Port:	
  4236                           ;psect for function _Lcd_Port
  4237                           
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _Lcd_Port: [wreg]
  4241                           ;Lcd_Port@a stored from wreg
  4242     0777  00F2               	movwf	Lcd_Port@a
  4243     0778                     l1349:
  4244                           
  4245                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTDbits.RD4 = 1)
      +                           : (PORTDbits.RD4 = 0);
  4246     0778  1C72               	btfss	Lcd_Port@a,0
  4247     0779  2F7B               	goto	u761
  4248     077A  2F7C               	goto	u760
  4249     077B                     u761:
  4250     077B  2F80               	goto	l166
  4251     077C                     u760:
  4252     077C                     l1351:
  4253     077C  1283               	bcf	3,5	;RP0=0, select bank0
  4254     077D  1303               	bcf	3,6	;RP1=0, select bank0
  4255     077E  1608               	bsf	8,4	;volatile
  4256     077F  2F83               	goto	l168
  4257     0780                     l166:
  4258     0780  1283               	bcf	3,5	;RP0=0, select bank0
  4259     0781  1303               	bcf	3,6	;RP1=0, select bank0
  4260     0782  1208               	bcf	8,4	;volatile
  4261     0783                     l168:
  4262                           
  4263                           ;lcd.c: 6:     (a & 2) ? (PORTDbits.RD5 = 1) : (PORTDbits.RD5 = 0);
  4264     0783  1CF2               	btfss	Lcd_Port@a,1
  4265     0784  2F86               	goto	u771
  4266     0785  2F87               	goto	u770
  4267     0786                     u771:
  4268     0786  2F89               	goto	l170
  4269     0787                     u770:
  4270     0787                     l1353:
  4271     0787  1688               	bsf	8,5	;volatile
  4272     0788  2F8A               	goto	l172
  4273     0789                     l170:
  4274     0789  1288               	bcf	8,5	;volatile
  4275     078A                     l172:
  4276                           
  4277                           ;lcd.c: 7:     (a & 4) ? (PORTDbits.RD6 = 1) : (PORTDbits.RD6 = 0);
  4278     078A  1D72               	btfss	Lcd_Port@a,2
  4279     078B  2F8D               	goto	u781
  4280     078C  2F8E               	goto	u780
  4281     078D                     u781:
  4282     078D  2F90               	goto	l174
  4283     078E                     u780:
  4284     078E                     l1355:
  4285     078E  1708               	bsf	8,6	;volatile
  4286     078F  2F91               	goto	l176
  4287     0790                     l174:
  4288     0790  1308               	bcf	8,6	;volatile
  4289     0791                     l176:
  4290                           
  4291                           ;lcd.c: 8:     (a & 8) ? (PORTDbits.RD7 = 1) : (PORTDbits.RD7 = 0);
  4292     0791  1DF2               	btfss	Lcd_Port@a,3
  4293     0792  2F94               	goto	u791
  4294     0793  2F95               	goto	u790
  4295     0794                     u791:
  4296     0794  2F97               	goto	l178
  4297     0795                     u790:
  4298     0795                     l1357:
  4299     0795  1788               	bsf	8,7	;volatile
  4300     0796  2F98               	goto	l181
  4301     0797                     l178:
  4302     0797  1388               	bcf	8,7	;volatile
  4303     0798                     l181:
  4304     0798  0008               	return
  4305     0799                     __end_of_Lcd_Port:
  4306                           
  4307                           	psect	text19
  4308     0799                     __ptext19:	
  4309 ;; *************** function _isr *****************
  4310 ;; Defined at:
  4311 ;;		line 61 in file "main.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		None
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0
  4328 ;;      Totals:         2       0       0       0       0
  4329 ;;Total ram usage:        2 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		Interrupt level 1
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     0799                     _isr:	
  4339                           ;psect for function _isr
  4340                           
  4341     0799                     i1l1213:
  4342                           
  4343                           ;main.c: 63:     if (PIR1bits.SSPIF){
  4344     0799  1283               	bcf	3,5	;RP0=0, select bank0
  4345     079A  1303               	bcf	3,6	;RP1=0, select bank0
  4346     079B  1D8C               	btfss	12,3	;volatile
  4347     079C  2F9E               	goto	u63_21
  4348     079D  2F9F               	goto	u63_20
  4349     079E                     u63_21:
  4350     079E  2FA0               	goto	i1l79
  4351     079F                     u63_20:
  4352     079F                     i1l1215:
  4353                           
  4354                           ;main.c: 64:         PIR1bits.SSPIF = 0;
  4355     079F  118C               	bcf	12,3	;volatile
  4356     07A0                     i1l79:	
  4357                           ;main.c: 65:     }
  4358                           
  4359                           
  4360                           ;main.c: 68:     if (PIR1bits.TXIF){
  4361     07A0  1E0C               	btfss	12,4	;volatile
  4362     07A1  2FA3               	goto	u64_21
  4363     07A2  2FA4               	goto	u64_20
  4364     07A3                     u64_21:
  4365     07A3  2FA5               	goto	i1l80
  4366     07A4                     u64_20:
  4367     07A4                     i1l1217:
  4368                           
  4369                           ;main.c: 69:         PIR1bits.TXIF = 0;
  4370     07A4  120C               	bcf	12,4	;volatile
  4371     07A5                     i1l80:	
  4372                           ;main.c: 70:     }
  4373                           
  4374                           
  4375                           ;main.c: 73:     if (PIR1bits.RCIF){
  4376     07A5  1E8C               	btfss	12,5	;volatile
  4377     07A6  2FA8               	goto	u65_21
  4378     07A7  2FA9               	goto	u65_20
  4379     07A8                     u65_21:
  4380     07A8  2FAA               	goto	i1l81
  4381     07A9                     u65_20:
  4382     07A9                     i1l1219:
  4383                           
  4384                           ;main.c: 74:         PIR1bits.RCIF = 0;
  4385     07A9  128C               	bcf	12,5	;volatile
  4386     07AA                     i1l81:	
  4387                           ;main.c: 75:     }
  4388                           
  4389                           
  4390                           ;main.c: 78:     if (INTCONbits.RBIF){
  4391     07AA  1C0B               	btfss	11,0	;volatile
  4392     07AB  2FAD               	goto	u66_21
  4393     07AC  2FAE               	goto	u66_20
  4394     07AD                     u66_21:
  4395     07AD  2FAF               	goto	i1l83
  4396     07AE                     u66_20:
  4397     07AE                     i1l1221:
  4398                           
  4399                           ;main.c: 79:         INTCONbits.RBIF = 0;
  4400     07AE  100B               	bcf	11,0	;volatile
  4401     07AF                     i1l83:
  4402     07AF  0871               	movf	??_isr+1,w
  4403     07B0  008A               	movwf	10
  4404     07B1  0E70               	swapf	??_isr,w
  4405     07B2  0083               	movwf	3
  4406     07B3  0EFE               	swapf	btemp,f
  4407     07B4  0E7E               	swapf	btemp,w
  4408     07B5  0009               	retfie
  4409     07B6                     __end_of_isr:
  4410     007E                     btemp	set	126	;btemp
  4411     007E                     wtemp0	set	126
  4412                           
  4413                           	psect	intentry
  4414     0004                     __pintentry:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _isr: []
  4417                           
  4418     0004                     interrupt_function:
  4419     007E                     saved_w	set	btemp
  4420     0004  00FE               	movwf	btemp
  4421     0005  0E03               	swapf	3,w
  4422     0006  00F0               	movwf	??_isr
  4423     0007  080A               	movf	10,w
  4424     0008  00F1               	movwf	??_isr+1
  4425     0009  120A  118A  2F99   	ljmp	_isr
  4426                           
  4427                           	psect	idloc
  4428                           
  4429                           ;Config register IDLOC0 @ 0x2000
  4430                           ;	unspecified, using default values
  4431     2000                     	org	8192
  4432     2000  3FFF               	dw	16383
  4433                           
  4434                           ;Config register IDLOC1 @ 0x2001
  4435                           ;	unspecified, using default values
  4436     2001                     	org	8193
  4437     2001  3FFF               	dw	16383
  4438                           
  4439                           ;Config register IDLOC2 @ 0x2002
  4440                           ;	unspecified, using default values
  4441     2002                     	org	8194
  4442     2002  3FFF               	dw	16383
  4443                           
  4444                           ;Config register IDLOC3 @ 0x2003
  4445                           ;	unspecified, using default values
  4446     2003                     	org	8195
  4447     2003  3FFF               	dw	16383
  4448                           
  4449                           	psect	config
  4450                           
  4451                           ;Config register CONFIG1 @ 0x2007
  4452                           ;	Oscillator Selection bits
  4453                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4454                           ;	Watchdog Timer Enable bit
  4455                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4456                           ;	Power-up Timer Enable bit
  4457                           ;	PWRTE = OFF, PWRT disabled
  4458                           ;	RE3/MCLR pin function select bit
  4459                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4460                           ;	Code Protection bit
  4461                           ;	CP = OFF, Program memory code protection is disabled
  4462                           ;	Data Code Protection bit
  4463                           ;	CPD = OFF, Data memory code protection is disabled
  4464                           ;	Brown Out Reset Selection bits
  4465                           ;	BOREN = OFF, BOR disabled
  4466                           ;	Internal External Switchover bit
  4467                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4468                           ;	Fail-Safe Clock Monitor Enabled bit
  4469                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4470                           ;	Low Voltage Programming Enable bit
  4471                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4472                           ;	In-Circuit Debugger Mode bit
  4473                           ;	DEBUG = 0x1, unprogramme  4474     2007                     	org	8199
  4475     2007  20D4               	dw	8404
  4476                           
  4477                           ;Config register CONFIG2 @ 0x2008
  4478                           ;	Brown-out Reset Selection bit
  4479                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4480                           ;	Flash Program Memory Self Write Enable bits
  4481                           ;	WRT = OFF, Write protection off
  4482     2008                     	org	8200
  4483     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    10
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     58      74
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[2]), STR_3(CODE[2]), buffer(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _valorLCD->_Lcd_Set_Cursor
    _valorLCD->_Lcd_Write_String
    _sprintf->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_spiInit
    _map->___aldiv
    ___aldiv->___lmul
    _calculovolt->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _valorLCD->_sprintf
    _sprintf->___lwmod
    _map->___aldiv
    ___aldiv->___lmul
    _calculovolt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10230
                                             54 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _calculovolt
                                _map
                              _setup
                        _setupINTOSC
                           _valorLCD
 ---------------------------------------------------------------------------------
 (1) _valorLCD                                             0     0      0    4299
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2165
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     876
                                              7 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1258
                                              6 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     360
                                              6 COMMON     2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    1610
                                             18 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             11 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calculovolt                                          0     0      0    1233
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              6 COMMON     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _calculovolt
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _setup
     _spiInit
   _setupINTOSC
   _valorLCD
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       ___lwdiv
       ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 15:41:18 2023

                       pc 0002               _SSPSTATbits 0094                        l92 008D  
                      l95 00BF                        l89 0062                        _V1 0069  
                      _V2 0068                        _d1 0060                        _d2 005C  
                      _u1 0062                        _u2 005E                        fsr 0004  
                     l103 0776                       l200 0526                       l120 0579  
                     l122 0585                       l114 0532                       l106 02EA  
                     l115 053E                       l203 0719                       l116 054A  
                     l109 05D4                       l117 0556                       l118 0562  
                     l119 056E                       l224 0392                       l209 0666  
                     l170 0789                       l138 07E0                       l139 07E5  
                     l172 078A                       l181 0798                       l174 0790  
                     l166 0780                       l430 03A7                       l176 0791  
                     l168 0783                       l184 07CF                       l440 042F  
                     l193 04BC                       l361 022C                       l178 0797  
                     l187 07F2                       l197 04BC                       l379 0620  
                     l637 06AA                       l647 06E6                       u810 066F  
                     u811 066E                       u900 06C5                       u901 06C4  
                     u805 06F4                       u830 0681                       u910 06CF  
                     u831 0680                       u911 06CE                       u760 077C  
                     u761 077B                       u825 0673                       u770 0787  
                     u850 0692                       u930 06E2                       u771 0786  
                     u851 0691                       u931 06E1                       u915 06CB  
                     u780 078E                       u940 0436                       u781 078D  
                     u845 0682                       u925 06D6                       u941 0435  
                     u790 0795                       u870 06A6                       u791 0794  
                     u871 06A5                       u855 068E                       u880 06B3  
                     u960 0459                       u865 069A                       u881 06B2  
                     u961 0458                       u955 043C                       u980 047C  
                     u981 047B                       u895 06B7                       u975 045F  
                     u995 0482                       _map 02EB                       _isr 0799  
                     fsr0 0004                       indf 0000                      l1401 0681  
                    l1403 0692                      l1411 06A6                      l1405 0698  
                    l1421 06BD                      l1501 0176                      l1351 077C  
                    l1407 0699                      l1431 06DC                      l1423 06C1  
                    l1415 06AB                      l1511 0187                      l1503 017B  
                    l1353 0787                      l1361 07BA                      l1409 06A0  
                    l1425 06C5                      l1417 06B3                      l1433 06E2  
                    l1441 0436                      l1513 01A1                      l1505 0180  
                    l1355 078E                      l1363 07C0                      l1427 06CF  
                    l1419 06B6                      l1611 0550                      l1603 0528  
                    l1451 0459                      l1443 0443                      l1371 06EE  
                    l1531 01D8                      l1523 01AF                      l1515 01A9  
                    l1507 0182                      l1357 0795                      l1349 0778  
                    l1365 07C3                      l1437 07E6                      l1429 06D5  
                    l1621 0582                      l1613 055C                      l1605 052E  
                    l1461 047C                      l1453 0466                      l1445 0446  
                    l1381 0709                      l1373 06F1                      l1533 0206  
                    l1517 01AD                      l1541 0228                      l1701 0054  
                    l1367 07CC                      l1359 07B7                      l1391 0669  
                    l1551 05DF                      l1631 075B                      l1623 074A  
                    l1615 0568                      l1607 0538                      l1471 049F  
                    l1463 0489                      l1455 0469                      l1447 044C  
                    l1439 0431                      l1383 070F                      l1375 06FF  
                    l1535 020B                      l1527 01CB                      l1711 0088  
                    l1703 005E                      l1393 066F                      l1553 05E3  
                    l1641 0764                      l1633 075C                      l1625 0751  
                    l1617 0573                      l1609 0544                      l1473 04AC  
                    l1465 048C                      l1457 046F                      l1449 0453  
                    l1385 0712                      l1377 0702                      l1369 06E8  
                    l1481 0626                      l1537 020F                      l1529 01D5  
                    l1721 00BE                      l1713 0093                      l1705 0061  
                    l1651 04D4                      l1395 0672                      l1571 03B6  
                    l1563 0393                      l1555 05FC                      l1491 07DA  
                    l1643 076D                      l1635 075F                      l1627 0752  
                    l1619 057E                      l1475 04AF                      l1467 0492  
                    l1459 0476                      l1387 0716                      l1379 0706  
                    l1483 0642                      l1539 0218                      l1731 0113  
                    l1723 00C5                      l1715 00A1                      l1707 0068  
                    l1653 04E2                      l1645 04BD                      l1397 0679  
                    l1389 0667                      l1661 0586                      l1581 03DA  
                    l1573 03BA                      l1565 0396                      l1557 0605  
                    l1549 05D5                      l1493 07DC                      l1637 0760  
                    l1629 075A                      l1477 04B5                      l1469 0499  
                    l1485 064A                      l1733 0118                      l1725 00C9  
                    l1717 00AE                      l1709 007B                      l1655 04E8  
                    l1647 04C5                      l1399 067D                      l1591 0408  
                    l1583 03DE                      l1575 03C2                      l1567 039A  
                    l1559 0616                      l1495 07DF                      l1487 07D1  
                    l1639 0763                      l1479 0621                      l1671 025D  
                    l1663 022D                      l1735 0152                      l1727 00D4  
                    l1719 00BB                      l1649 04CB                      l1593 0411  
                    l1585 03E7                      l1577 03CA                      l1569 03AB  
                    l1657 02EB                      l1489 07D8                      l1497 016D  
                    l1681 02AC                      l1673 027C                      l1665 0235  
                    l1737 0157                      l1729 010E                      l1587 03F9  
                    l1579 03CD                      l1595 0417                      l1499 0170  
                    l1683 02B4                      l1675 0284                      l1667 0243  
                    l1691 0034                      l1597 041C                      l1589 0407  
                    l1685 02C2                      l1677 0292                      l1669 0254  
                    l1693 003B                      l1599 0427                      l1767 0199  
                    l1687 02CB                      l1679 029B                      l1695 0040  
                    l1697 0048                      l1689 0024                      l1699 0051  
                    ?_map 0032                      ?_isr 0070                      STR_1 0734  
                    STR_2 0745                      STR_3 0748                      STR_4 0745  
                    STR_5 0745                      STR_6 0748                      STR_7 0745  
                    STR_8 0745                      u1000 049F                      u1001 049E  
                    u1020 0630                      u1100 0228                      u1101 0227  
                    u1110 05E3                      u1030 0654                      u1111 05E2  
                    u1015 04A5                      u1200 03DE                      u1040 0666  
                    u1201 03DD                      u1121 05EE                      u1041 0665  
                    u1122 05F5                      u1050 07D8                      u1123 05FC  
                    u1051 07D7                      u1220 03F9                      u1300 055C  
                    u1060 0176                      u1221 03F8                      u1301 055B  
                    u1061 0175                      u1150 0616                      u1310 0568  
                    u1070 01CA                      u1215 03E0                      u1151 0615  
                    u1135 05FE                      u1311 0567                      u1071 01C9  
                    u1240 0417                      u1160 039A                      u1320 0573  
                    u1080 01D5                      u1241 0416                      u1225 03F5  
                    u1161 0399                      u1145 0606                      u1321 0572  
                    u1081 01D4                      u1250 041C                      u1170 03AB  
                    u1330 057E                      u1090 0218                      u1251 041B  
                    u1235 0409                      u1171 03AA                      u1331 057D  
                    u1091 0217                      u1075 01C6                      u1180 03CA  
                    u1260 052E                      u1181 03C9                      u1341 02FC  
                    u1261 052D                      u1342 02FD                      u1270 0538  
                    u1351 0320                      u1343 0302                      u1271 0537  
                    u1407 0038                      u1352 0321                      u1344 0303  
                    u1280 0544                      u1361 0344                      u1353 0326  
                    u1345 0308                      u1281 0543                      u1417 005A  
                    u1362 0345                      u1354 0327                      u1346 0309  
                    u1290 0550                      u1370 0068                      u1195 03CF  
                    u1363 034A                      u1355 032C                      u1291 054F  
                    u1507 0714                      u1427 0077                      u1371 0067  
                    u1364 034B                      u1356 032D                      u1380 0093  
                    u1365 0350                      u1517 0771                      u1381 0092  
                    u1437 0084                      u1366 0351                      u1390 00C5  
                    u1527 04CF                      u1391 00C4                      u1447 009D  
                    u1537 04DE                      u1457 00AA                      u1547 04EC  
                    u1467 00B7                      u1557 07C7                      u1477 00D0  
                    u1487 0162                      u1497 0704                      i1l80 07A5  
                    i1l81 07AA                      i1l83 07AF                      i1l79 07A0  
       ?_Lcd_Write_String 0077                      _cont 005A                      _main 0024  
                    map@x 0032                      btemp 007E                      start 000C  
      ??_Lcd_Write_String 0079           __end_of_Lcd_Cmd 07D0                     ??_map 0046  
                   ??_isr 0070           __end_of___aldiv 0430                     ?_main 0070  
         __end_of___lwdiv 06AB           __end_of___lwmod 06E7                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   u63_20 079F                     u63_21 079E                     u64_20 07A4  
                   u64_21 07A3                     u65_20 07A9                     u65_21 07A8  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   u66_20 07AE                     u66_21 07AD                     _VOLT1 0066  
                   _VOLT2 0064       ___lmul@multiplicand 0076           __end_of_dpowers 0734  
                   _setup 074A                     pclath 000A           __end_of_spiInit 07E6  
                   status 0003                     wtemp0 007E           __end_of_sprintf 022D  
        __end_of_Lcd_Init 0527          __end_of_Lcd_Port 0799           __initialization 000F  
            __end_of_main 016A                    ??_main 0056                    ?_setup 0070  
                  _ANSELH 0189                    i1l1221 07AE                    i1l1213 0799  
                  i1l1215 079F                    i1l1217 07A4                    i1l1219 07A9  
               ??_Lcd_Cmd 0073                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPBUF 0013                    _SSPCON 0014                    ___lmul 05D5  
               ??___aldiv 007B                 ??___lwdiv 0076                 ??___lwmod 007A  
                  _buffer 00A0              ?_setupINTOSC 0070          __end_of_valorLCD 02EB  
                  saved_w 007E                 ??_spiInit 0075                 ??_sprintf 0027  
         Lcd_Set_Cursor@a 0078           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 007A  
         Lcd_Set_Cursor@z 0079   __end_of__initialization 0020         __end_of_Lcd_Clear 07F3  
          __pcstackCOMMON 0070             __end_of_setup 0777            _Lcd_Set_Cursor 0430  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0076  
              __pbssBANK0 005A                __pbssBANK1 00A0                __pmaintext 0024  
                 ?___lmul 0072                __pintentry 0004            ___lmul@product 0020  
  __end_of_Lcd_Set_Cursor 04BD                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
                 _SSPSTAT 0094                __stringtab 071A            _Lcd_Write_Char 06E7  
                 _Lcd_Cmd 07B6                 ?_valorLCD 0070                   ___aldiv 0393  
                 ___lwdiv 0667                   ___lwmod 06AB                 _ANSELbits 0188  
         ?_Lcd_Set_Cursor 0076             ??_calculovolt 007C                   __ptext1 022D  
                 __ptext2 016A                   __ptext3 0621                   __ptext4 06E7  
                 __ptext5 0430                   __ptext6 0527                   __ptext7 074A  
                 __ptext8 07D0                   __ptext9 02EB                   _dpowers 072A  
        ___aldiv@dividend 0028                   _spiInit 07D0                   map@eMax 003A  
                 map@eMin 0036                   map@sMax 0042                   map@sMin 003E  
                 _sprintf 016A                   clrloop0 07F4    __end_of_Lcd_Write_Char 071A  
    end_of_initialization 0020                ??_valorLCD 007C          ___aldiv@quotient 002E  
               Lcd_Port@a 0072                 _PORTAbits 0005                 _PORTCbits 0007  
               _PORTDbits 0008                 _TRISAbits 0085                 _TRISCbits 0087  
               _TRISDbits 0088       __end_of_calculovolt 05D5           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0077         Lcd_Write_String@i 0020                 _Lcd_Clear 07E6  
          __end_of___lmul 0621          _Lcd_Write_String 0621       start_initialization 000F  
             __end_of_map 0393               __end_of_isr 07B6                ?_Lcd_Clear 0070  
                ??___lmul 007A           Lcd_Write_Char@a 0076           Lcd_Write_Char@y 0075  
             _calculovolt 0586                 ___latbits 0002             __pcstackBANK0 0020  
         setupINTOSC@IRCF 0072                  ?_Lcd_Cmd 0070               sprintf@flag 002A  
             sprintf@prec 002E          ___lwdiv@dividend 0074          ??_Lcd_Set_Cursor 0077  
                ?___aldiv 0024                  ?___lwdiv 0072                  ?___lwmod 0020  
               __pstrings 071A                  ?_spiInit 0072          ___lwdiv@quotient 0077  
                ?_sprintf 0024           ___aldiv@divisor 0024      spiInit@sTransmitEdge 0074  
       interrupt_function 0004           ___aldiv@counter 002C                 clear_ram0 07F3  
                _PIE1bits 008C        spiInit@sDataSample 0072                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076                _ADCON0bits 001F  
             __stringbase 0729                _ADCON1bits 009F             ??_setupINTOSC 0072  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 04BD                  _Lcd_Port 0777  
       ___lmul@multiplier 0072  __end_of_Lcd_Write_String 0667        __end_of__stringtab 072A  
              sprintf@val 002C           ___lwdiv@divisor 0072           ___lwdiv@counter 0079  
                __ptext10 05D5                  __ptext11 0393                  __ptext12 0586  
                __ptext13 06AB                  __ptext14 0667                  __ptext15 04BD  
                __ptext16 07E6                  __ptext17 07B6                  __ptext18 0777  
                __ptext19 0799       __end_of_setupINTOSC 0586                  _valorLCD 022D  
            spiInit@sType 0075         spiInit@sClockIdle 0073              ?_calculovolt 0070  
              _INTCONbits 000B        Lcd_Write_Char@temp 0074                  intlevel1 0000  
               sprintf@ap 002B                 sprintf@sp 002F          ___lwmod@dividend 0022  
               stringcode 0724                _OSCCONbits 008F        Lcd_Set_Cursor@temp 007B  
             _setupINTOSC 0527                  sprintf@c 0030                  sprintf@f 0024  
         ___lwmod@divisor 0020           ___lwmod@counter 007B                  stringdir 0724  
                stringtab 071A              ___aldiv@sign 002D  
