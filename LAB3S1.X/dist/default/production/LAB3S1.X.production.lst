

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 15:41:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0000                     	;# 
   446     0001                     	;# 
   447     0002                     	;# 
   448     0003                     	;# 
   449     0004                     	;# 
   450     0005                     	;# 
   451     0006                     	;# 
   452     0007                     	;# 
   453     0008                     	;# 
   454     0009                     	;# 
   455     000A                     	;# 
   456     000B                     	;# 
   457     000C                     	;# 
   458     000D                     	;# 
   459     000E                     	;# 
   460     000E                     	;# 
   461     000F                     	;# 
   462     0010                     	;# 
   463     0011                     	;# 
   464     0012                     	;# 
   465     0013                     	;# 
   466     0014                     	;# 
   467     0015                     	;# 
   468     0015                     	;# 
   469     0016                     	;# 
   470     0017                     	;# 
   471     0018                     	;# 
   472     0019                     	;# 
   473     001A                     	;# 
   474     001B                     	;# 
   475     001B                     	;# 
   476     001C                     	;# 
   477     001D                     	;# 
   478     001E                     	;# 
   479     001F                     	;# 
   480     0081                     	;# 
   481     0085                     	;# 
   482     0086                     	;# 
   483     0087                     	;# 
   484     0088                     	;# 
   485     0089                     	;# 
   486     008C                     	;# 
   487     008D                     	;# 
   488     008E                     	;# 
   489     008F                     	;# 
   490     0090                     	;# 
   491     0091                     	;# 
   492     0092                     	;# 
   493     0093                     	;# 
   494     0093                     	;# 
   495     0093                     	;# 
   496     0094                     	;# 
   497     0095                     	;# 
   498     0096                     	;# 
   499     0097                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009A                     	;# 
   503     009B                     	;# 
   504     009C                     	;# 
   505     009D                     	;# 
   506     009E                     	;# 
   507     009F                     	;# 
   508     0105                     	;# 
   509     0107                     	;# 
   510     0108                     	;# 
   511     0109                     	;# 
   512     010C                     	;# 
   513     010C                     	;# 
   514     010D                     	;# 
   515     010E                     	;# 
   516     010F                     	;# 
   517     0185                     	;# 
   518     0187                     	;# 
   519     0188                     	;# 
   520     0189                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     0000                     	;# 
   524     0001                     	;# 
   525     0002                     	;# 
   526     0003                     	;# 
   527     0004                     	;# 
   528     0005                     	;# 
   529     0006                     	;# 
   530     0007                     	;# 
   531     0008                     	;# 
   532     0009                     	;# 
   533     000A                     	;# 
   534     000B                     	;# 
   535     000C                     	;# 
   536     000D                     	;# 
   537     000E                     	;# 
   538     000E                     	;# 
   539     000F                     	;# 
   540     0010                     	;# 
   541     0011                     	;# 
   542     0012                     	;# 
   543     0013                     	;# 
   544     0014                     	;# 
   545     0015                     	;# 
   546     0015                     	;# 
   547     0016                     	;# 
   548     0017                     	;# 
   549     0018                     	;# 
   550     0019                     	;# 
   551     001A                     	;# 
   552     001B                     	;# 
   553     001B                     	;# 
   554     001C                     	;# 
   555     001D                     	;# 
   556     001E                     	;# 
   557     001F                     	;# 
   558     0081                     	;# 
   559     0085                     	;# 
   560     0086                     	;# 
   561     0087                     	;# 
   562     0088                     	;# 
   563     0089                     	;# 
   564     008C                     	;# 
   565     008D                     	;# 
   566     008E                     	;# 
   567     008F                     	;# 
   568     0090                     	;# 
   569     0091                     	;# 
   570     0092                     	;# 
   571     0093                     	;# 
   572     0093                     	;# 
   573     0093                     	;# 
   574     0094                     	;# 
   575     0095                     	;# 
   576     0096                     	;# 
   577     0097                     	;# 
   578     0098                     	;# 
   579     0099                     	;# 
   580     009A                     	;# 
   581     009B                     	;# 
   582     009C                     	;# 
   583     009D                     	;# 
   584     009E                     	;# 
   585     009F                     	;# 
   586     0105                     	;# 
   587     0107                     	;# 
   588     0108                     	;# 
   589     0109                     	;# 
   590     010C                     	;# 
   591     010C                     	;# 
   592     010D                     	;# 
   593     010E                     	;# 
   594     010F                     	;# 
   595     0185                     	;# 
   596     0187                     	;# 
   597     0188                     	;# 
   598     0189                     	;# 
   599     018C                     	;# 
   600     018D                     	;# 
   601     001E                     _ADRESH	set	30
   602     001F                     _ADCON0bits	set	31
   603     0005                     _PORTAbits	set	5
   604     0008                     _PORTDbits	set	8
   605     0014                     _SSPCON	set	20
   606     0006                     _PORTB	set	6
   607     0008                     _PORTD	set	8
   608     0006                     _PORTBbits	set	6
   609     000B                     _INTCONbits	set	11
   610     0013                     _SSPBUF	set	19
   611     000C                     _PIR1bits	set	12
   612     0066                     _ADIF	set	102
   613     009F                     _ADCON1bits	set	159
   614     008F                     _OSCCONbits	set	143
   615     0088                     _TRISDbits	set	136
   616     0094                     _SSPSTATbits	set	148
   617     0094                     _SSPSTAT	set	148
   618     0085                     _TRISAbits	set	133
   619     008C                     _PIE1bits	set	140
   620     0081                     _OPTION_REGbits	set	129
   621     0096                     _IOCBbits	set	150
   622     0095                     _WPUBbits	set	149
   623     0088                     _TRISD	set	136
   624     0086                     _TRISB	set	134
   625     043B                     _TRISC3	set	1083
   626     043D                     _TRISC5	set	1085
   627     0188                     _ANSELbits	set	392
   628     0189                     _ANSELH	set	393
   629     0188                     _ANSEL	set	392
   630                           
   631                           	psect	cinit
   632     000F                     start_initialization:	
   633                           ; #config settings
   634                           
   635     000F                     __initialization:
   636                           
   637                           ; Clear objects allocated to COMMON
   638     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   639     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   640     0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   641     0012                     end_of_initialization:	
   642                           ;End of C runtime variable initialization code
   643                           
   644     0012                     __end_of__initialization:
   645     0012  0183               	clrf	3
   646     0013  120A  118A  29B7   	ljmp	_main	;jump to C main() function
   647                           
   648                           	psect	bssCOMMON
   649     0079                     __pbssCOMMON:
   650     0079                     _contador:
   651     0079                     	ds	1
   652     007A                     _lecADC:
   653     007A                     	ds	1
   654     007B                     _check:
   655     007B                     	ds	1
   656                           
   657                           	psect	cstackCOMMON
   658     0070                     __pcstackCOMMON:
   659     0070                     ?_setup:
   660     0070                     ?_setupINTOSC:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_isr:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_main:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_ADC_read:	
   670                           ; 1 bytes @ 0x0
   671                           
   672                           
   673                           ; 2 bytes @ 0x0
   674     0070                     	ds	2
   675     0072                     ??_ADC_read:
   676                           
   677                           ; 1 bytes @ 0x2
   678     0072                     	ds	2
   679     0074                     ADC_read@channel:
   680                           
   681                           ; 1 bytes @ 0x4
   682     0074                     	ds	1
   683     0075                     ??_isr:
   684                           
   685                           ; 1 bytes @ 0x5
   686     0075                     	ds	4
   687                           
   688                           	psect	cstackBANK0
   689     0020                     __pcstackBANK0:
   690     0020                     ?_ADC_config:
   691     0020                     ??_setupINTOSC:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0020                     ?_spiInit:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0020                     spiInit@sDataSample:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0020                     setupINTOSC@IRCF:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0020                     ADC_config@channel:	
   704                           ; 1 bytes @ 0x0
   705                           
   706                           
   707                           ; 2 bytes @ 0x0
   708     0020                     	ds	1
   709     0021                     spiInit@sClockIdle:
   710                           
   711                           ; 1 bytes @ 0x1
   712     0021                     	ds	1
   713     0022                     ??_ADC_config:
   714     0022                     spiInit@sTransmitEdge:	
   715                           ; 1 bytes @ 0x2
   716                           
   717                           
   718                           ; 1 bytes @ 0x2
   719     0022                     	ds	1
   720     0023                     ??_spiInit:
   721     0023                     spiInit@sType:	
   722                           ; 1 bytes @ 0x3
   723                           
   724                           
   725                           ; 1 bytes @ 0x3
   726     0023                     	ds	1
   727     0024                     ??_setup:
   728     0024                     ??_main:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           	psect	maintext
   733     01B7                     __pmaintext:	
   734                           ; 1 bytes @ 0x4
   735 ;;
   736 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   737 ;;
   738 ;; *************** function _main *****************
   739 ;; Defined at:
   740 ;;		line 98 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : B00/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels required when called: 4
   760 ;; This function calls:
   761 ;;		_ADC_config
   762 ;;		_setup
   763 ;;		_setupINTOSC
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769     01B7                     _main:	
   770                           ;psect for function _main
   771                           
   772     01B7                     l1248:	
   773                           ;incstack = 0
   774                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   775                           
   776                           
   777                           ;main.c: 99:     setup();
   778     01B7  120A  118A  216E  120A  118A  	fcall	_setup
   779                           
   780                           ;main.c: 100:     ADC_config(0x01);
   781     01BC  3001               	movlw	1
   782     01BD  1283               	bcf	3,5	;RP0=0, select bank0
   783     01BE  1303               	bcf	3,6	;RP1=0, select bank0
   784     01BF  00A0               	movwf	ADC_config@channel
   785     01C0  3000               	movlw	0
   786     01C1  00A1               	movwf	ADC_config@channel+1
   787     01C2  120A  118A  212E  120A  118A  	fcall	_ADC_config
   788                           
   789                           ;main.c: 101:     setupINTOSC(6);
   790     01C7  3006               	movlw	6
   791     01C8  120A  118A  2083  120A  118A  	fcall	_setupINTOSC
   792     01CD                     l1250:
   793                           
   794                           ;main.c: 102:     lecADC = 0;
   795     01CD  01FA               	clrf	_lecADC
   796     01CE                     l1252:
   797                           
   798                           ;main.c: 103:     check = 0;
   799     01CE  01FB               	clrf	_check
   800     01CF                     l70:	
   801                           ;main.c: 107:     while(1){
   802                           
   803     01CF                     l71:	
   804                           ;main.c: 109:     }
   805                           
   806     01CF  29CF               	goto	l70
   807     01D0  120A  118A  280C   	ljmp	start
   808     01D3                     __end_of_main:
   809                           
   810                           	psect	text1
   811     0083                     __ptext1:	
   812 ;; *************** function _setupINTOSC *****************
   813 ;; Defined at:
   814 ;;		line 10 in file "oscilador.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  IRCF            1    wreg     unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  IRCF            1    0[BANK0 ] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       1       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       1       0       0       0
   832 ;;Total ram usage:        1 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842     0083                     _setupINTOSC:	
   843                           ;psect for function _setupINTOSC
   844                           
   845                           
   846                           ;incstack = 0
   847                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   848                           ;setupINTOSC@IRCF stored from wreg
   849     0083  1283               	bcf	3,5	;RP0=0, select bank0
   850     0084  1303               	bcf	3,6	;RP1=0, select bank0
   851     0085  00A0               	movwf	setupINTOSC@IRCF
   852     0086                     l1186:
   853                           
   854                           ;oscilador.c: 11:     if (IRCF == 7){
   855     0086  3007               	movlw	7
   856     0087  0620               	xorwf	setupINTOSC@IRCF,w
   857     0088  1D03               	btfss	3,2
   858     0089  288B               	goto	u511
   859     008A  288C               	goto	u510
   860     008B                     u511:
   861     008B  2890               	goto	l183
   862     008C                     u510:
   863     008C                     l1188:
   864                           
   865                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   866     008C  3070               	movlw	112
   867     008D  1683               	bsf	3,5	;RP0=1, select bank1
   868     008E  1303               	bcf	3,6	;RP1=0, select bank1
   869     008F  048F               	iorwf	15,f	;volatile
   870     0090                     l183:	
   871                           ;oscilador.c: 13:     }
   872                           
   873                           
   874                           ;oscilador.c: 14:     if (IRCF == 6){
   875     0090  3006               	movlw	6
   876     0091  1283               	bcf	3,5	;RP0=0, select bank0
   877     0092  0620               	xorwf	setupINTOSC@IRCF,w
   878     0093  1D03               	btfss	3,2
   879     0094  2896               	goto	u521
   880     0095  2897               	goto	u520
   881     0096                     u521:
   882     0096  289D               	goto	l184
   883     0097                     u520:
   884     0097                     l1190:
   885                           
   886                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   887     0097  1683               	bsf	3,5	;RP0=1, select bank1
   888     0098  1303               	bcf	3,6	;RP1=0, select bank1
   889     0099  080F               	movf	15,w	;volatile
   890     009A  398F               	andlw	-113
   891     009B  3860               	iorlw	96
   892     009C  008F               	movwf	15	;volatile
   893     009D                     l184:	
   894                           ;oscilador.c: 16:     }
   895                           
   896                           
   897                           ;oscilador.c: 17:     if (IRCF == 5){
   898     009D  3005               	movlw	5
   899     009E  1283               	bcf	3,5	;RP0=0, select bank0
   900     009F  0620               	xorwf	setupINTOSC@IRCF,w
   901     00A0  1D03               	btfss	3,2
   902     00A1  28A3               	goto	u531
   903     00A2  28A4               	goto	u530
   904     00A3                     u531:
   905     00A3  28AA               	goto	l185
   906     00A4                     u530:
   907     00A4                     l1192:
   908                           
   909                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   910     00A4  1683               	bsf	3,5	;RP0=1, select bank1
   911     00A5  1303               	bcf	3,6	;RP1=0, select bank1
   912     00A6  080F               	movf	15,w	;volatile
   913     00A7  398F               	andlw	-113
   914     00A8  3850               	iorlw	80
   915     00A9  008F               	movwf	15	;volatile
   916     00AA                     l185:	
   917                           ;oscilador.c: 19:     }
   918                           
   919                           
   920                           ;oscilador.c: 20:     if (IRCF == 4){
   921     00AA  3004               	movlw	4
   922     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   923     00AC  0620               	xorwf	setupINTOSC@IRCF,w
   924     00AD  1D03               	btfss	3,2
   925     00AE  28B0               	goto	u541
   926     00AF  28B1               	goto	u540
   927     00B0                     u541:
   928     00B0  28B7               	goto	l186
   929     00B1                     u540:
   930     00B1                     l1194:
   931                           
   932                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   933     00B1  1683               	bsf	3,5	;RP0=1, select bank1
   934     00B2  1303               	bcf	3,6	;RP1=0, select bank1
   935     00B3  080F               	movf	15,w	;volatile
   936     00B4  398F               	andlw	-113
   937     00B5  3840               	iorlw	64
   938     00B6  008F               	movwf	15	;volatile
   939     00B7                     l186:	
   940                           ;oscilador.c: 22:     }
   941                           
   942                           
   943                           ;oscilador.c: 23:     if (IRCF == 3){
   944     00B7  3003               	movlw	3
   945     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   946     00B9  0620               	xorwf	setupINTOSC@IRCF,w
   947     00BA  1D03               	btfss	3,2
   948     00BB  28BD               	goto	u551
   949     00BC  28BE               	goto	u550
   950     00BD                     u551:
   951     00BD  28C4               	goto	l187
   952     00BE                     u550:
   953     00BE                     l1196:
   954                           
   955                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   956     00BE  1683               	bsf	3,5	;RP0=1, select bank1
   957     00BF  1303               	bcf	3,6	;RP1=0, select bank1
   958     00C0  080F               	movf	15,w	;volatile
   959     00C1  398F               	andlw	-113
   960     00C2  3830               	iorlw	48
   961     00C3  008F               	movwf	15	;volatile
   962     00C4                     l187:	
   963                           ;oscilador.c: 25:     }
   964                           
   965                           
   966                           ;oscilador.c: 26:     if (IRCF == 2){
   967     00C4  3002               	movlw	2
   968     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   969     00C6  0620               	xorwf	setupINTOSC@IRCF,w
   970     00C7  1D03               	btfss	3,2
   971     00C8  28CA               	goto	u561
   972     00C9  28CB               	goto	u560
   973     00CA                     u561:
   974     00CA  28D1               	goto	l188
   975     00CB                     u560:
   976     00CB                     l1198:
   977                           
   978                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   979     00CB  1683               	bsf	3,5	;RP0=1, select bank1
   980     00CC  1303               	bcf	3,6	;RP1=0, select bank1
   981     00CD  080F               	movf	15,w	;volatile
   982     00CE  398F               	andlw	-113
   983     00CF  3820               	iorlw	32
   984     00D0  008F               	movwf	15	;volatile
   985     00D1                     l188:	
   986                           ;oscilador.c: 28:     }
   987                           
   988                           
   989                           ;oscilador.c: 29:     if (IRCF == 1){
   990     00D1  1283               	bcf	3,5	;RP0=0, select bank0
   991     00D2  0320               	decf	setupINTOSC@IRCF,w
   992     00D3  1D03               	btfss	3,2
   993     00D4  28D6               	goto	u571
   994     00D5  28D7               	goto	u570
   995     00D6                     u571:
   996     00D6  28DD               	goto	l189
   997     00D7                     u570:
   998     00D7                     l1200:
   999                           
  1000                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1001     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1002     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1003     00D9  080F               	movf	15,w	;volatile
  1004     00DA  398F               	andlw	-113
  1005     00DB  3810               	iorlw	16
  1006     00DC  008F               	movwf	15	;volatile
  1007     00DD                     l189:	
  1008                           ;oscilador.c: 31:     }
  1009                           
  1010                           
  1011                           ;oscilador.c: 32:     if (IRCF == 0){
  1012     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1013     00DE  0820               	movf	setupINTOSC@IRCF,w
  1014     00DF  1D03               	btfss	3,2
  1015     00E0  28E2               	goto	u581
  1016     00E1  28E3               	goto	u580
  1017     00E2                     u581:
  1018     00E2  28E7               	goto	l1204
  1019     00E3                     u580:
  1020     00E3                     l1202:
  1021                           
  1022                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1023     00E3  308F               	movlw	-113
  1024     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1025     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1026     00E6  058F               	andwf	15,f	;volatile
  1027     00E7                     l1204:
  1028                           
  1029                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1030     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1031     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1032     00E9  140F               	bsf	15,0	;volatile
  1033     00EA                     l191:
  1034     00EA  0008               	return
  1035     00EB                     __end_of_setupINTOSC:
  1036                           
  1037                           	psect	text2
  1038     016E                     __ptext2:	
  1039 ;; *************** function _setup *****************
  1040 ;; Defined at:
  1041 ;;		line 115 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 3
  1062 ;; This function calls:
  1063 ;;		_spiInit
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     016E                     _setup:	
  1070                           ;psect for function _setup
  1071                           
  1072     016E                     l1140:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1075                           
  1076                           
  1077                           ;main.c: 116:     ANSEL = 0;
  1078     016E  1683               	bsf	3,5	;RP0=1, select bank3
  1079     016F  1703               	bsf	3,6	;RP1=1, select bank3
  1080     0170  0188               	clrf	8	;volatile
  1081                           
  1082                           ;main.c: 117:     ANSELH = 0;
  1083     0171  0189               	clrf	9	;volatile
  1084     0172                     l1142:
  1085                           
  1086                           ;main.c: 120:     TRISB = 0b00000011;
  1087     0172  3003               	movlw	3
  1088     0173  1683               	bsf	3,5	;RP0=1, select bank1
  1089     0174  1303               	bcf	3,6	;RP1=0, select bank1
  1090     0175  0086               	movwf	6	;volatile
  1091     0176                     l1144:
  1092                           
  1093                           ;main.c: 121:     TRISD = 0;
  1094     0176  0188               	clrf	8	;volatile
  1095     0177                     l1146:
  1096                           
  1097                           ;main.c: 123:     PORTB = 0;
  1098     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0179  0186               	clrf	6	;volatile
  1101     017A                     l1148:
  1102                           
  1103                           ;main.c: 124:     PORTD = 0;
  1104     017A  0188               	clrf	8	;volatile
  1105     017B                     l1150:
  1106                           
  1107                           ;main.c: 127:     INTCONbits.RBIE = 1;
  1108     017B  158B               	bsf	11,3	;volatile
  1109     017C                     l1152:
  1110                           
  1111                           ;main.c: 128:     INTCONbits.RBIF = 0;
  1112     017C  100B               	bcf	11,0	;volatile
  1113     017D                     l1154:
  1114                           
  1115                           ;main.c: 129:     INTCONbits.GIE = 1;
  1116     017D  178B               	bsf	11,7	;volatile
  1117     017E                     l1156:
  1118                           
  1119                           ;main.c: 131:     WPUBbits.WPUB0 = 1;
  1120     017E  1683               	bsf	3,5	;RP0=1, select bank1
  1121     017F  1303               	bcf	3,6	;RP1=0, select bank1
  1122     0180  1415               	bsf	21,0	;volatile
  1123     0181                     l1158:
  1124                           
  1125                           ;main.c: 132:     WPUBbits.WPUB1 = 1;
  1126     0181  1495               	bsf	21,1	;volatile
  1127     0182                     l1160:
  1128                           
  1129                           ;main.c: 133:     IOCBbits.IOCB0 = 1;
  1130     0182  1416               	bsf	22,0	;volatile
  1131     0183                     l1162:
  1132                           
  1133                           ;main.c: 134:     IOCBbits.IOCB1 = 1;
  1134     0183  1496               	bsf	22,1	;volatile
  1135     0184                     l1164:
  1136                           
  1137                           ;main.c: 136:     OPTION_REGbits.nRBPU = 0;
  1138     0184  1381               	bcf	1,7	;volatile
  1139     0185                     l1166:
  1140                           
  1141                           ;main.c: 138:     INTCONbits.PEIE = 1;
  1142     0185  170B               	bsf	11,6	;volatile
  1143     0186                     l1168:
  1144                           
  1145                           ;main.c: 139:     PIR1bits.SSPIF = 0;
  1146     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1147     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1148     0188  118C               	bcf	12,3	;volatile
  1149     0189                     l1170:
  1150                           
  1151                           ;main.c: 140:     PIE1bits.SSPIE = 1;
  1152     0189  1683               	bsf	3,5	;RP0=1, select bank1
  1153     018A  1303               	bcf	3,6	;RP1=0, select bank1
  1154     018B  158C               	bsf	12,3	;volatile
  1155     018C                     l1172:
  1156                           
  1157                           ;main.c: 141:     TRISAbits.TRISA5 = 1;
  1158     018C  1685               	bsf	5,5	;volatile
  1159     018D                     l1174:
  1160                           
  1161                           ;main.c: 142:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1162     018D  1283               	bcf	3,5	;RP0=0, select bank0
  1163     018E  1303               	bcf	3,6	;RP1=0, select bank0
  1164     018F  01A0               	clrf	spiInit@sDataSample
  1165     0190  01A1               	clrf	spiInit@sClockIdle
  1166     0191  01A2               	clrf	spiInit@sTransmitEdge
  1167     0192  3024               	movlw	36
  1168     0193  120A  118A  2199  120A  118A  	fcall	_spiInit
  1169     0198                     l76:
  1170     0198  0008               	return
  1171     0199                     __end_of_setup:
  1172                           
  1173                           	psect	text3
  1174     0199                     __ptext3:	
  1175 ;; *************** function _spiInit *****************
  1176 ;; Defined at:
  1177 ;;		line 12 in file "SPI.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  sType           1    wreg     enum E1292
  1180 ;;  sDataSample     1    0[BANK0 ] enum E1300
  1181 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  1182 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  sType           1    3[BANK0 ] enum E1292
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       3       0       0       0
  1195 ;;      Locals:         0       1       0       0       0
  1196 ;;      Temps:          0       0       0       0       0
  1197 ;;      Totals:         0       4       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 2
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_setup
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208     0199                     _spiInit:	
  1209                           ;psect for function _spiInit
  1210                           
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1214                           ;spiInit@sType stored from wreg
  1215     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1216     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1217     019B  00A3               	movwf	spiInit@sType
  1218     019C                     l1102:
  1219                           
  1220                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1221     019C  1683               	bsf	3,5	;RP0=1, select bank1
  1222     019D  1303               	bcf	3,6	;RP1=0, select bank1
  1223     019E  1287               	bcf	7,5	;volatile
  1224                           
  1225                           ;SPI.c: 15:     if(sType & 0b00000100)
  1226     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1227     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1228     01A1  1D23               	btfss	spiInit@sType,2
  1229     01A2  29A4               	goto	u431
  1230     01A3  29A5               	goto	u430
  1231     01A4                     u431:
  1232     01A4  29AB               	goto	l1108
  1233     01A5                     u430:
  1234     01A5                     l1104:
  1235                           
  1236                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1237     01A5  0822               	movf	spiInit@sTransmitEdge,w
  1238     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1239     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1240     01A8  0094               	movwf	20	;volatile
  1241     01A9                     l1106:
  1242                           
  1243                           ;SPI.c: 18:         TRISC3 = 1;
  1244     01A9  1587               	bsf	7,3	;volatile
  1245                           
  1246                           ;SPI.c: 19:     }
  1247     01AA  29B1               	goto	l92
  1248     01AB                     l1108:
  1249                           
  1250                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1251     01AB  0820               	movf	spiInit@sDataSample,w
  1252     01AC  0422               	iorwf	spiInit@sTransmitEdge,w
  1253     01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1254     01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1255     01AF  0094               	movwf	20	;volatile
  1256     01B0                     l1110:
  1257                           
  1258                           ;SPI.c: 23:         TRISC3 = 0;
  1259     01B0  1187               	bcf	7,3	;volatile
  1260     01B1                     l92:	
  1261                           ;SPI.c: 24:     }
  1262                           
  1263                           
  1264                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1265     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1266     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1267     01B3  0823               	movf	spiInit@sType,w
  1268     01B4  0421               	iorwf	spiInit@sClockIdle,w
  1269     01B5  0094               	movwf	20	;volatile
  1270     01B6                     l93:
  1271     01B6  0008               	return
  1272     01B7                     __end_of_spiInit:
  1273                           
  1274                           	psect	text4
  1275     012E                     __ptext4:	
  1276 ;; *************** function _ADC_config *****************
  1277 ;; Defined at:
  1278 ;;		line 11 in file "setupADC.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  channel         2    0[BANK0 ] int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       2       0       0       0
  1293 ;;      Locals:         0       0       0       0       0
  1294 ;;      Temps:          0       1       0       0       0
  1295 ;;      Totals:         0       3       0       0       0
  1296 ;;Total ram usage:        3 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306     012E                     _ADC_config:	
  1307                           ;psect for function _ADC_config
  1308                           
  1309     012E                     l1176:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _ADC_config: [wreg]
  1312                           
  1313                           
  1314                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1315     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1316     012F  1303               	bcf	3,6	;RP1=0, select bank0
  1317     0130  1C20               	btfss	ADC_config@channel,0
  1318     0131  2933               	goto	u481
  1319     0132  2934               	goto	u480
  1320     0133                     u481:
  1321     0133  293B               	goto	l216
  1322     0134                     u480:
  1323     0134                     l1178:
  1324                           
  1325                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1326     0134  1005               	bcf	5,0	;volatile
  1327                           
  1328                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1329     0135  1683               	bsf	3,5	;RP0=1, select bank1
  1330     0136  1303               	bcf	3,6	;RP1=0, select bank1
  1331     0137  1405               	bsf	5,0	;volatile
  1332                           
  1333                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1334     0138  1683               	bsf	3,5	;RP0=1, select bank3
  1335     0139  1703               	bsf	3,6	;RP1=1, select bank3
  1336     013A  1408               	bsf	8,0	;volatile
  1337     013B                     l216:	
  1338                           ;setupADC.c: 16:     }
  1339                           
  1340                           
  1341                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1342     013B  1283               	bcf	3,5	;RP0=0, select bank0
  1343     013C  1303               	bcf	3,6	;RP1=0, select bank0
  1344     013D  1CA0               	btfss	ADC_config@channel,1
  1345     013E  2940               	goto	u491
  1346     013F  2941               	goto	u490
  1347     0140                     u491:
  1348     0140  2948               	goto	l217
  1349     0141                     u490:
  1350     0141                     l1180:
  1351                           
  1352                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1353     0141  1085               	bcf	5,1	;volatile
  1354                           
  1355                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1356     0142  1683               	bsf	3,5	;RP0=1, select bank1
  1357     0143  1303               	bcf	3,6	;RP1=0, select bank1
  1358     0144  1485               	bsf	5,1	;volatile
  1359                           
  1360                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1361     0145  1683               	bsf	3,5	;RP0=1, select bank3
  1362     0146  1703               	bsf	3,6	;RP1=1, select bank3
  1363     0147  1488               	bsf	8,1	;volatile
  1364     0148                     l217:	
  1365                           ;setupADC.c: 22:     }
  1366                           
  1367                           
  1368                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1369     0148  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0149  1303               	bcf	3,6	;RP1=0, select bank0
  1371     014A  1D20               	btfss	ADC_config@channel,2
  1372     014B  294D               	goto	u501
  1373     014C  294E               	goto	u500
  1374     014D                     u501:
  1375     014D  2955               	goto	l218
  1376     014E                     u500:
  1377     014E                     l1182:
  1378                           
  1379                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1380     014E  1105               	bcf	5,2	;volatile
  1381                           
  1382                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1383     014F  1683               	bsf	3,5	;RP0=1, select bank1
  1384     0150  1303               	bcf	3,6	;RP1=0, select bank1
  1385     0151  1505               	bsf	5,2	;volatile
  1386                           
  1387                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1388     0152  1683               	bsf	3,5	;RP0=1, select bank3
  1389     0153  1703               	bsf	3,6	;RP1=1, select bank3
  1390     0154  1508               	bsf	8,2	;volatile
  1391     0155                     l218:	
  1392                           ;setupADC.c: 27:     }
  1393                           
  1394                           
  1395                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  1396     0155  170B               	bsf	11,6	;volatile
  1397                           
  1398                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  1399     0156  1683               	bsf	3,5	;RP0=1, select bank1
  1400     0157  1303               	bcf	3,6	;RP1=0, select bank1
  1401     0158  170C               	bsf	12,6	;volatile
  1402                           
  1403                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  1404     0159  1283               	bcf	3,5	;RP0=0, select bank0
  1405     015A  1303               	bcf	3,6	;RP1=0, select bank0
  1406     015B  130C               	bcf	12,6	;volatile
  1407                           
  1408                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  1409     015C  139F               	bcf	31,7	;volatile
  1410                           
  1411                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  1412     015D  171F               	bsf	31,6	;volatile
  1413                           
  1414                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  1415     015E  1683               	bsf	3,5	;RP0=1, select bank1
  1416     015F  1303               	bcf	3,6	;RP1=0, select bank1
  1417     0160  129F               	bcf	31,5	;volatile
  1418                           
  1419                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  1420     0161  121F               	bcf	31,4	;volatile
  1421                           
  1422                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  1423     0162  139F               	bcf	31,7	;volatile
  1424                           
  1425                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  1426     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1427     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1428     0165  141F               	bsf	31,0	;volatile
  1429     0166                     l1184:
  1430                           
  1431                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1432     0166  3020               	movlw	32
  1433     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1434     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1435     0169  00A2               	movwf	??_ADC_config
  1436     016A                     u677:
  1437     016A  0BA2               	decfsz	??_ADC_config,f
  1438     016B  296A               	goto	u677
  1439     016C  0000               	nop
  1440     016D                     l219:
  1441     016D  0008               	return
  1442     016E                     __end_of_ADC_config:
  1443                           
  1444                           	psect	text5
  1445     0016                     __ptext5:	
  1446 ;; *************** function _isr *****************
  1447 ;; Defined at:
  1448 ;;		line 50 in file "main.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0
  1464 ;;      Temps:          4       0       0       0       0
  1465 ;;      Totals:         4       0       0       0       0
  1466 ;;Total ram usage:        4 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 1
  1469 ;; This function calls:
  1470 ;;		_ADC_read
  1471 ;; This function is called by:
  1472 ;;		Interrupt level 1
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476     0016                     _isr:	
  1477                           ;psect for function _isr
  1478                           
  1479     0016                     i1l1206:
  1480                           
  1481                           ;main.c: 53:     if(PIR1bits.SSPIF){
  1482     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1484     0018  1D8C               	btfss	12,3	;volatile
  1485     0019  281B               	goto	u59_21
  1486     001A  281C               	goto	u59_20
  1487     001B                     u59_21:
  1488     001B  2844               	goto	i1l1222
  1489     001C                     u59_20:
  1490     001C                     i1l1208:
  1491                           
  1492                           ;main.c: 54:         check = SSPBUF;
  1493     001C  0813               	movf	19,w	;volatile
  1494     001D  00FB               	movwf	_check
  1495                           
  1496                           ;main.c: 55:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1497     001E  3007               	movlw	7
  1498     001F  00F6               	movwf	??_isr+1
  1499     0020  307D               	movlw	125
  1500     0021  00F5               	movwf	??_isr
  1501     0022                     u68_27:
  1502     0022  0BF5               	decfsz	??_isr,f
  1503     0023  2822               	goto	u68_27
  1504     0024  0BF6               	decfsz	??_isr+1,f
  1505     0025  2822               	goto	u68_27
  1506     0026                     i1l1210:
  1507                           
  1508                           ;main.c: 56:         if (check == 1){
  1509     0026  037B               	decf	_check,w
  1510     0027  1D03               	btfss	3,2
  1511     0028  282A               	goto	u60_21
  1512     0029  282B               	goto	u60_20
  1513     002A                     u60_21:
  1514     002A  2830               	goto	i1l1214
  1515     002B                     u60_20:
  1516     002B                     i1l1212:
  1517                           
  1518                           ;main.c: 57:             SSPBUF = contador;
  1519     002B  0879               	movf	_contador,w
  1520     002C  1283               	bcf	3,5	;RP0=0, select bank0
  1521     002D  1303               	bcf	3,6	;RP1=0, select bank0
  1522     002E  0093               	movwf	19	;volatile
  1523                           
  1524                           ;main.c: 59:         }
  1525     002F  2841               	goto	i1l1220
  1526     0030                     i1l1214:
  1527     0030  087B               	movf	_check,w
  1528     0031  1D03               	btfss	3,2
  1529     0032  2834               	goto	u61_21
  1530     0033  2835               	goto	u61_20
  1531     0034                     u61_21:
  1532     0034  2841               	goto	i1l1220
  1533     0035                     u61_20:
  1534     0035                     i1l1216:
  1535                           
  1536                           ;main.c: 61:             lecADC = ADC_read(0);
  1537     0035  3000               	movlw	0
  1538     0036  120A  118A  20EB  120A  118A  	fcall	_ADC_read
  1539     003B  0870               	movf	?_ADC_read,w
  1540     003C  00FA               	movwf	_lecADC
  1541     003D                     i1l1218:
  1542                           
  1543                           ;main.c: 62:             SSPBUF = lecADC;
  1544     003D  087A               	movf	_lecADC,w
  1545     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1546     003F  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0040  0093               	movwf	19	;volatile
  1548     0041                     i1l1220:
  1549                           
  1550                           ;main.c: 65:         PIR1bits.SSPIF = 0;
  1551     0041  1283               	bcf	3,5	;RP0=0, select bank0
  1552     0042  1303               	bcf	3,6	;RP1=0, select bank0
  1553     0043  118C               	bcf	12,3	;volatile
  1554     0044                     i1l1222:
  1555                           
  1556                           ;main.c: 70:  if (INTCONbits.RBIF == 1){
  1557     0044  1C0B               	btfss	11,0	;volatile
  1558     0045  2847               	goto	u62_21
  1559     0046  2848               	goto	u62_20
  1560     0047                     u62_21:
  1561     0047  287C               	goto	i1l65
  1562     0048                     u62_20:
  1563     0048                     i1l1224:
  1564                           
  1565                           ;main.c: 72:     if (PORTBbits.RB0 == 0)
  1566     0048  1806               	btfsc	6,0	;volatile
  1567     0049  284B               	goto	u63_21
  1568     004A  284C               	goto	u63_20
  1569     004B                     u63_21:
  1570     004B  2863               	goto	i1l60
  1571     004C                     u63_20:
  1572     004C                     i1l1226:
  1573                           
  1574                           ;main.c: 73:     {;main.c: 74:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1575     004C  3004               	movlw	4
  1576     004D  00F6               	movwf	??_isr+1
  1577     004E  30E4               	movlw	228
  1578     004F  00F5               	movwf	??_isr
  1579     0050                     u69_27:
  1580     0050  0BF5               	decfsz	??_isr,f
  1581     0051  2850               	goto	u69_27
  1582     0052  0BF6               	decfsz	??_isr+1,f
  1583     0053  2850               	goto	u69_27
  1584     0054  0000               	nop
  1585     0055                     i1l1228:
  1586                           
  1587                           ;main.c: 75:         if (PORTBbits.RB0 == 1){
  1588     0055  1283               	bcf	3,5	;RP0=0, select bank0
  1589     0056  1303               	bcf	3,6	;RP1=0, select bank0
  1590     0057  1C06               	btfss	6,0	;volatile
  1591     0058  285A               	goto	u64_21
  1592     0059  285B               	goto	u64_20
  1593     005A                     u64_21:
  1594     005A  287B               	goto	i1l1246
  1595     005B                     u64_20:
  1596     005B                     i1l1230:
  1597                           
  1598                           ;main.c: 76:             contador++;
  1599     005B  3001               	movlw	1
  1600     005C  00F5               	movwf	??_isr
  1601     005D  0875               	movf	??_isr,w
  1602     005E  07F9               	addwf	_contador,f
  1603     005F                     i1l1232:
  1604                           
  1605                           ;main.c: 77:             PORTD = contador;
  1606     005F  0879               	movf	_contador,w
  1607     0060  0088               	movwf	8	;volatile
  1608     0061                     i1l1234:
  1609                           
  1610                           ;main.c: 78:             INTCONbits.RBIF = 0;
  1611     0061  100B               	bcf	11,0	;volatile
  1612     0062  287B               	goto	i1l1246
  1613     0063                     i1l60:	
  1614                           ;main.c: 81:     else if (PORTBbits.RB1 == 0){
  1615                           
  1616     0063  1886               	btfsc	6,1	;volatile
  1617     0064  2866               	goto	u65_21
  1618     0065  2867               	goto	u65_20
  1619     0066                     u65_21:
  1620     0066  287B               	goto	i1l1246
  1621     0067                     u65_20:
  1622     0067                     i1l1236:
  1623                           
  1624                           ;main.c: 82:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1625     0067  3004               	movlw	4
  1626     0068  00F6               	movwf	??_isr+1
  1627     0069  30E4               	movlw	228
  1628     006A  00F5               	movwf	??_isr
  1629     006B                     u70_27:
  1630     006B  0BF5               	decfsz	??_isr,f
  1631     006C  286B               	goto	u70_27
  1632     006D  0BF6               	decfsz	??_isr+1,f
  1633     006E  286B               	goto	u70_27
  1634     006F  0000               	nop
  1635     0070                     i1l1238:
  1636                           
  1637                           ;main.c: 83:         if (PORTBbits.RB1 == 1){
  1638     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0072  1C86               	btfss	6,1	;volatile
  1641     0073  2875               	goto	u66_21
  1642     0074  2876               	goto	u66_20
  1643     0075                     u66_21:
  1644     0075  287B               	goto	i1l1246
  1645     0076                     u66_20:
  1646     0076                     i1l1240:
  1647                           
  1648                           ;main.c: 84:             contador--;
  1649     0076  3001               	movlw	1
  1650     0077  02F9               	subwf	_contador,f
  1651     0078                     i1l1242:
  1652                           
  1653                           ;main.c: 85:             PORTD = contador;
  1654     0078  0879               	movf	_contador,w
  1655     0079  0088               	movwf	8	;volatile
  1656     007A                     i1l1244:
  1657                           
  1658                           ;main.c: 86:             INTCONbits.RBIF = 0;
  1659     007A  100B               	bcf	11,0	;volatile
  1660     007B                     i1l1246:
  1661                           
  1662                           ;main.c: 90:     INTCONbits.RBIF = 0;
  1663     007B  100B               	bcf	11,0	;volatile
  1664     007C                     i1l65:
  1665     007C  0878               	movf	??_isr+3,w
  1666     007D  008A               	movwf	10
  1667     007E  0E77               	swapf	??_isr+2,w
  1668     007F  0083               	movwf	3
  1669     0080  0EFE               	swapf	btemp,f
  1670     0081  0E7E               	swapf	btemp,w
  1671     0082  0009               	retfie
  1672     0083                     __end_of_isr:
  1673                           
  1674                           	psect	intentry
  1675     0004                     __pintentry:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1678                           
  1679     0004                     interrupt_function:
  1680     007E                     saved_w	set	btemp
  1681     0004  00FE               	movwf	btemp
  1682     0005  0E03               	swapf	3,w
  1683     0006  00F7               	movwf	??_isr+2
  1684     0007  080A               	movf	10,w
  1685     0008  00F8               	movwf	??_isr+3
  1686     0009  120A  118A  2816   	ljmp	_isr
  1687                           
  1688                           	psect	text6
  1689     00EB                     __ptext6:	
  1690 ;; *************** function _ADC_read *****************
  1691 ;; Defined at:
  1692 ;;		line 44 in file "setupADC.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  channel         1    wreg     unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  channel         1    4[COMMON] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2    0[COMMON] int 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         2       0       0       0       0
  1707 ;;      Locals:         1       0       0       0       0
  1708 ;;      Temps:          2       0       0       0       0
  1709 ;;      Totals:         5       0       0       0       0
  1710 ;;Total ram usage:        5 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_isr
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719     00EB                     _ADC_read:	
  1720                           ;psect for function _ADC_read
  1721                           
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1725                           ;ADC_read@channel stored from wreg
  1726     00EB  00F4               	movwf	ADC_read@channel
  1727     00EC                     i1l1112:
  1728                           
  1729                           ;setupADC.c: 45:     if(channel ==0){
  1730     00EC  0874               	movf	ADC_read@channel,w
  1731     00ED  1D03               	btfss	3,2
  1732     00EE  28F0               	goto	u44_21
  1733     00EF  28F1               	goto	u44_20
  1734     00F0                     u44_21:
  1735     00F0  2908               	goto	i1l1124
  1736     00F1                     u44_20:
  1737     00F1                     i1l1114:
  1738                           
  1739                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  1740     00F1  30C3               	movlw	-61
  1741     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1742     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1743     00F4  059F               	andwf	31,f	;volatile
  1744     00F5                     i1l1116:
  1745                           
  1746                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1747     00F5  3021               	movlw	33
  1748     00F6  00F2               	movwf	??_ADC_read
  1749     00F7                     u71_27:
  1750     00F7  0BF2               	decfsz	??_ADC_read,f
  1751     00F8  28F7               	goto	u71_27
  1752     00F9                     i1l1118:
  1753                           
  1754                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  1755     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1756     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1757     00FB  149F               	bsf	31,1	;volatile
  1758     00FC                     i1l223:	
  1759                           ;setupADC.c: 49:         while(ADIF==0){;}
  1760                           
  1761     00FC  1F0C               	btfss	12,6	;volatile
  1762     00FD  28FF               	goto	u45_21
  1763     00FE  2900               	goto	u45_20
  1764     00FF                     u45_21:
  1765     00FF  28FC               	goto	i1l223
  1766     0100                     u45_20:
  1767     0100                     i1l1120:
  1768                           
  1769                           ;setupADC.c: 50:         return ADRESH;
  1770     0100  081E               	movf	30,w	;volatile
  1771     0101  00F2               	movwf	??_ADC_read
  1772     0102  01F3               	clrf	??_ADC_read+1
  1773     0103  0872               	movf	??_ADC_read,w
  1774     0104  00F0               	movwf	?_ADC_read
  1775     0105  0873               	movf	??_ADC_read+1,w
  1776     0106  00F1               	movwf	?_ADC_read+1
  1777     0107  292D               	goto	i1l226
  1778     0108                     i1l1124:
  1779                           
  1780                           ;setupADC.c: 53:     if(channel ==1){
  1781     0108  0374               	decf	ADC_read@channel,w
  1782     0109  1D03               	btfss	3,2
  1783     010A  290C               	goto	u46_21
  1784     010B  290D               	goto	u46_20
  1785     010C                     u46_21:
  1786     010C  291A               	goto	i1l1132
  1787     010D                     u46_20:
  1788     010D                     i1l1126:
  1789                           
  1790                           ;setupADC.c: 54:         ADCON0bits.CHS = 0b0001;
  1791     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1792     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1793     010F  081F               	movf	31,w	;volatile
  1794     0110  39C3               	andlw	-61
  1795     0111  3804               	iorlw	4
  1796     0112  009F               	movwf	31	;volatile
  1797     0113                     i1l1128:
  1798                           
  1799                           ;setupADC.c: 55:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1800     0113  3021               	movlw	33
  1801     0114  00F2               	movwf	??_ADC_read
  1802     0115                     u72_27:
  1803     0115  0BF2               	decfsz	??_ADC_read,f
  1804     0116  2915               	goto	u72_27
  1805     0117                     i1l1130:
  1806                           
  1807                           ;setupADC.c: 56:         ADCON0bits.GO = 1;
  1808     0117  1283               	bcf	3,5	;RP0=0, select bank0
  1809     0118  1303               	bcf	3,6	;RP1=0, select bank0
  1810     0119  149F               	bsf	31,1	;volatile
  1811     011A                     i1l1132:
  1812                           
  1813                           ;setupADC.c: 58:     if(channel ==2){
  1814     011A  3002               	movlw	2
  1815     011B  0674               	xorwf	ADC_read@channel,w
  1816     011C  1D03               	btfss	3,2
  1817     011D  291F               	goto	u47_21
  1818     011E  2920               	goto	u47_20
  1819     011F                     u47_21:
  1820     011F  292D               	goto	i1l226
  1821     0120                     u47_20:
  1822     0120                     i1l1134:
  1823                           
  1824                           ;setupADC.c: 59:         ADCON0bits.CHS = 0b0010;
  1825     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1826     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1827     0122  081F               	movf	31,w	;volatile
  1828     0123  39C3               	andlw	-61
  1829     0124  3808               	iorlw	8
  1830     0125  009F               	movwf	31	;volatile
  1831     0126                     i1l1136:
  1832                           
  1833                           ;setupADC.c: 60:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1834     0126  3021               	movlw	33
  1835     0127  00F2               	movwf	??_ADC_read
  1836     0128                     u73_27:
  1837     0128  0BF2               	decfsz	??_ADC_read,f
  1838     0129  2928               	goto	u73_27
  1839     012A                     i1l1138:
  1840                           
  1841                           ;setupADC.c: 61:         ADCON0bits.GO = 1;
  1842     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1843     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1844     012C  149F               	bsf	31,1	;volatile
  1845     012D                     i1l226:
  1846     012D  0008               	return
  1847     012E                     __end_of_ADC_read:
  1848     007E                     btemp	set	126	;btemp
  1849     007E                     wtemp0	set	126
  1850                           
  1851                           	psect	idloc
  1852                           
  1853                           ;Config register IDLOC0 @ 0x2000
  1854                           ;	unspecified, using default values
  1855     2000                     	org	8192
  1856     2000  3FFF               	dw	16383
  1857                           
  1858                           ;Config register IDLOC1 @ 0x2001
  1859                           ;	unspecified, using default values
  1860     2001                     	org	8193
  1861     2001  3FFF               	dw	16383
  1862                           
  1863                           ;Config register IDLOC2 @ 0x2002
  1864                           ;	unspecified, using default values
  1865     2002                     	org	8194
  1866     2002  3FFF               	dw	16383
  1867                           
  1868                           ;Config register IDLOC3 @ 0x2003
  1869                           ;	unspecified, using default values
  1870     2003                     	org	8195
  1871     2003  3FFF               	dw	16383
  1872                           
  1873                           	psect	config
  1874                           
  1875                           ;Config register CONFIG1 @ 0x2007
  1876                           ;	Oscillator Selection bits
  1877                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1878                           ;	Watchdog Timer Enable bit
  1879                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1880                           ;	Power-up Timer Enable bit
  1881                           ;	PWRTE = OFF, PWRT disabled
  1882                           ;	RE3/MCLR pin function select bit
  1883                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1884                           ;	Code Protection bit
  1885                           ;	CP = OFF, Program memory code protection is disabled
  1886                           ;	Data Code Protection bit
  1887                           ;	CPD = OFF, Data memory code protection is disabled
  1888                           ;	Brown Out Reset Selection bits
  1889                           ;	BOREN = OFF, BOR disabled
  1890                           ;	Internal External Switchover bit
  1891                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1892                           ;	Fail-Safe Clock Monitor Enabled bit
  1893                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1894                           ;	Low Voltage Programming Enable bit
  1895                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1896                           ;	In-Circuit Debugger Mode bit
  1897                           ;	DEBUG = 0x1, unprogramme  1898     2007                     	org	8199
  1899     2007  20D4               	dw	8404
  1900                           
  1901                           ;Config register CONFIG2 @ 0x2008
  1902                           ;	Brown-out Reset Selection bit
  1903                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1904                           ;	Flash Program Memory Self Write Enable bits
  1905                           ;	WRT = OFF, Write protection off
  1906     2008                     	org	8200
  1907     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_read

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     678
                         _ADC_config
                              _setup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      66
                                              5 COMMON     4     4      0
                           _ADC_read
 ---------------------------------------------------------------------------------
 (4) _ADC_read                                             5     3      2      66
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _setup
     _spiInit
   _setupINTOSC

 _isr (ROOT)
   _ADC_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 15:41:28 2023

            _SSPSTATbits 0094                       l70 01CF                       l71 01CF  
                     l92 01B1                       l76 0198                       l93 01B6  
                    l216 013B                      l217 0148                      l218 0155  
                    l219 016D                      l191 00EA                      l183 0090  
                    l184 009D                      l185 00AA                      l186 00B7  
                    l187 00C4                      l188 00D1                      l189 00DD  
                    u500 014E                      u501 014D                      u430 01A5  
                    u510 008C                      u431 01A4                      u511 008B  
                    u520 0097                      u521 0096                      u530 00A4  
                    u531 00A3                      u540 00B1                      u541 00B0  
                    u550 00BE                      u551 00BD                      u480 0134  
                    u560 00CB                      u481 0133                      u561 00CA  
                    u490 0141                      u570 00D7                      u491 0140  
                    u571 00D6                      u580 00E3                      u581 00E2  
                    u677 016A                      _isr 0016                     l1110 01B0  
                   l1102 019C                     l1104 01A5                     l1200 00D7  
                   l1106 01A9                     l1202 00E3                     l1108 01AB  
                   l1140 016E                     l1204 00E7                     l1150 017B  
                   l1142 0172                     l1160 0182                     l1152 017C  
                   l1144 0176                     l1170 0189                     l1162 0183  
                   l1154 017D                     l1146 0177                     l1250 01CD  
                   l1180 0141                     l1172 018C                     l1164 0184  
                   l1156 017E                     l1148 017A                     l1252 01CE  
                   l1182 014E                     l1174 018D                     l1166 0185  
                   l1158 0181                     l1190 0097                     l1184 0166  
                   l1176 012E                     l1168 0186                     l1192 00A4  
                   l1248 01B7                     l1178 0134                     l1194 00B1  
                   l1186 0086                     l1196 00BE                     l1188 008C  
                   l1198 00CB                     _ADIF 0066                     ?_isr 0070  
                   i1l60 0063                     i1l65 007C                     _main 01B7  
                   btemp 007E                     start 000C         __end_of_ADC_read 012E  
                  ??_isr 0075                    ?_main 0070                    _ANSEL 0188  
                  i1l223 00FC                    i1l226 012D                    _PORTB 0006  
                  _PORTD 0008                    u44_20 00F1                    u60_20 002B  
                  u44_21 00F0                    u60_21 002A                    u45_20 0100  
                  u61_20 0035                    u45_21 00FF                    u61_21 0034  
                  u46_20 010D                    u62_20 0048                    u46_21 010C  
                  u62_21 0047                    u70_27 006B                    u47_20 0120  
                  u63_20 004C                    u47_21 011F                    u63_21 004B  
                  u71_27 00F7                    u64_20 005B                    u64_21 005A  
                  u72_27 0115                    u65_20 0067                    u65_21 0066  
                  _TRISB 0086                    _TRISD 0088                    u73_27 0128  
                  u66_20 0076                    u66_21 0075                    u59_20 001C  
                  u59_21 001B                    u68_27 0022                    u69_27 0050  
                  _check 007B                    _setup 016E                    pclath 000A  
        __end_of_spiInit 01B7                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01D3                   ??_main 0024  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1120 0100                   i1l1112 00EC                   i1l1130 0117  
                 i1l1114 00F1                   i1l1210 0026                   i1l1132 011A  
                 i1l1116 00F5                   i1l1124 0108                   i1l1220 0041  
                 i1l1212 002B                   i1l1134 0120                   i1l1126 010D  
                 i1l1118 00F9                   i1l1230 005B                   i1l1214 0030  
                 i1l1222 0044                   i1l1206 0016                   i1l1136 0126  
                 i1l1128 0113                   i1l1240 0076                   i1l1232 005F  
                 i1l1224 0048                   i1l1216 0035                   i1l1208 001C  
                 i1l1138 012A                   i1l1242 0078                   i1l1234 0061  
                 i1l1226 004C                   i1l1218 003D                   i1l1244 007A  
                 i1l1236 0067                   i1l1228 0055                   i1l1238 0070  
                 i1l1246 007B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPBUF 0013                   _SSPCON 0014             ??_ADC_config 0022  
                 _lecADC 007A             ?_setupINTOSC 0070                   saved_w 007E  
              ??_spiInit 0023                ?_ADC_read 0070       __end_of_ADC_config 016E  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 0199  
         _OPTION_REGbits 0081          ADC_read@channel 0074               ??_ADC_read 0072  
                ??_setup 0024               __pmaintext 01B7               __pintentry 0004  
                _SSPSTAT 0094                _ANSELbits 0188                  __ptext1 0083  
                __ptext2 016E                  __ptext3 0199                  __ptext4 012E  
                __ptext5 0016                  __ptext6 00EB                  _spiInit 0199  
   end_of_initialization 0012                _PORTAbits 0005                _PORTBbits 0006  
              _PORTDbits 0008                _TRISAbits 0085                _TRISDbits 0088  
    start_initialization 000F              __end_of_isr 0083        ADC_config@channel 0020  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
        setupINTOSC@IRCF 0020                 ?_spiInit 0020                 _ADC_read 00EB  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F            ??_setupINTOSC 0020  
               _WPUBbits 0095               _ADC_config 012E      __end_of_setupINTOSC 00EB  
               _contador 0079             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
            ?_ADC_config 0020              _setupINTOSC 0083  
