

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:19:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     000D                     	;# 
   382     000E                     	;# 
   383     000E                     	;# 
   384     000F                     	;# 
   385     0010                     	;# 
   386     0011                     	;# 
   387     0012                     	;# 
   388     0013                     	;# 
   389     0014                     	;# 
   390     0015                     	;# 
   391     0015                     	;# 
   392     0016                     	;# 
   393     0017                     	;# 
   394     0018                     	;# 
   395     0019                     	;# 
   396     001A                     	;# 
   397     001B                     	;# 
   398     001B                     	;# 
   399     001C                     	;# 
   400     001D                     	;# 
   401     001E                     	;# 
   402     001F                     	;# 
   403     0081                     	;# 
   404     0085                     	;# 
   405     0086                     	;# 
   406     0087                     	;# 
   407     0088                     	;# 
   408     0089                     	;# 
   409     008C                     	;# 
   410     008D                     	;# 
   411     008E                     	;# 
   412     008F                     	;# 
   413     0090                     	;# 
   414     0091                     	;# 
   415     0092                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     0105                     	;# 
   432     0107                     	;# 
   433     0108                     	;# 
   434     0109                     	;# 
   435     010C                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     0185                     	;# 
   441     0187                     	;# 
   442     0188                     	;# 
   443     0189                     	;# 
   444     018C                     	;# 
   445     018D                     	;# 
   446     0000                     	;# 
   447     0001                     	;# 
   448     0002                     	;# 
   449     0003                     	;# 
   450     0004                     	;# 
   451     0005                     	;# 
   452     0006                     	;# 
   453     0007                     	;# 
   454     0008                     	;# 
   455     0009                     	;# 
   456     000A                     	;# 
   457     000B                     	;# 
   458     000C                     	;# 
   459     000D                     	;# 
   460     000E                     	;# 
   461     000E                     	;# 
   462     000F                     	;# 
   463     0010                     	;# 
   464     0011                     	;# 
   465     0012                     	;# 
   466     0013                     	;# 
   467     0014                     	;# 
   468     0015                     	;# 
   469     0015                     	;# 
   470     0016                     	;# 
   471     0017                     	;# 
   472     0018                     	;# 
   473     0019                     	;# 
   474     001A                     	;# 
   475     001B                     	;# 
   476     001B                     	;# 
   477     001C                     	;# 
   478     001D                     	;# 
   479     001E                     	;# 
   480     001F                     	;# 
   481     0081                     	;# 
   482     0085                     	;# 
   483     0086                     	;# 
   484     0087                     	;# 
   485     0088                     	;# 
   486     0089                     	;# 
   487     008C                     	;# 
   488     008D                     	;# 
   489     008E                     	;# 
   490     008F                     	;# 
   491     0090                     	;# 
   492     0091                     	;# 
   493     0092                     	;# 
   494     0093                     	;# 
   495     0093                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009C                     	;# 
   506     009D                     	;# 
   507     009E                     	;# 
   508     009F                     	;# 
   509     0105                     	;# 
   510     0107                     	;# 
   511     0108                     	;# 
   512     0109                     	;# 
   513     010C                     	;# 
   514     010C                     	;# 
   515     010D                     	;# 
   516     010E                     	;# 
   517     010F                     	;# 
   518     0185                     	;# 
   519     0187                     	;# 
   520     0188                     	;# 
   521     0189                     	;# 
   522     018C                     	;# 
   523     018D                     	;# 
   524     0000                     	;# 
   525     0001                     	;# 
   526     0002                     	;# 
   527     0003                     	;# 
   528     0004                     	;# 
   529     0005                     	;# 
   530     0006                     	;# 
   531     0007                     	;# 
   532     0008                     	;# 
   533     0009                     	;# 
   534     000A                     	;# 
   535     000B                     	;# 
   536     000C                     	;# 
   537     000D                     	;# 
   538     000E                     	;# 
   539     000E                     	;# 
   540     000F                     	;# 
   541     0010                     	;# 
   542     0011                     	;# 
   543     0012                     	;# 
   544     0013                     	;# 
   545     0014                     	;# 
   546     0015                     	;# 
   547     0015                     	;# 
   548     0016                     	;# 
   549     0017                     	;# 
   550     0018                     	;# 
   551     0019                     	;# 
   552     001A                     	;# 
   553     001B                     	;# 
   554     001B                     	;# 
   555     001C                     	;# 
   556     001D                     	;# 
   557     001E                     	;# 
   558     001F                     	;# 
   559     0081                     	;# 
   560     0085                     	;# 
   561     0086                     	;# 
   562     0087                     	;# 
   563     0088                     	;# 
   564     0089                     	;# 
   565     008C                     	;# 
   566     008D                     	;# 
   567     008E                     	;# 
   568     008F                     	;# 
   569     0090                     	;# 
   570     0091                     	;# 
   571     0092                     	;# 
   572     0093                     	;# 
   573     0093                     	;# 
   574     0093                     	;# 
   575     0094                     	;# 
   576     0095                     	;# 
   577     0096                     	;# 
   578     0097                     	;# 
   579     0098                     	;# 
   580     0099                     	;# 
   581     009A                     	;# 
   582     009B                     	;# 
   583     009C                     	;# 
   584     009D                     	;# 
   585     009E                     	;# 
   586     009F                     	;# 
   587     0105                     	;# 
   588     0107                     	;# 
   589     0108                     	;# 
   590     0109                     	;# 
   591     010C                     	;# 
   592     010C                     	;# 
   593     010D                     	;# 
   594     010E                     	;# 
   595     010F                     	;# 
   596     0185                     	;# 
   597     0187                     	;# 
   598     0188                     	;# 
   599     0189                     	;# 
   600     018C                     	;# 
   601     018D                     	;# 
   602     0005                     _PORTAbits	set	5
   603     0008                     _PORTDbits	set	8
   604     0013                     _SSPBUF	set	19
   605     0014                     _SSPCON	set	20
   606     000B                     _INTCONbits	set	11
   607     0006                     _PORTB	set	6
   608     0008                     _PORTD	set	8
   609     001E                     _ADRESH	set	30
   610     001F                     _ADCON0bits	set	31
   611     000C                     _PIR1bits	set	12
   612     0063                     _SSPIF	set	99
   613     0066                     _ADIF	set	102
   614     009F                     _ADCON1bits	set	159
   615     008F                     _OSCCONbits	set	143
   616     0088                     _TRISDbits	set	136
   617     0094                     _SSPSTATbits	set	148
   618     0094                     _SSPSTAT	set	148
   619     0085                     _TRISAbits	set	133
   620     008C                     _PIE1bits	set	140
   621     0088                     _TRISD	set	136
   622     0086                     _TRISB	set	134
   623     043B                     _TRISC3	set	1083
   624     043D                     _TRISC5	set	1085
   625     0188                     _ANSELbits	set	392
   626     0189                     _ANSELH	set	393
   627     0188                     _ANSEL	set	392
   628                           
   629                           	psect	cinit
   630     000F                     start_initialization:	
   631                           ; #config settings
   632                           
   633     000F                     __initialization:
   634                           
   635                           ; Clear objects allocated to COMMON
   636     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   637     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   638     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   639     0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   640     0013                     end_of_initialization:	
   641                           ;End of C runtime variable initialization code
   642                           
   643     0013                     __end_of__initialization:
   644     0013  0183               	clrf	3
   645     0014  120A  118A  28F8   	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMMON
   648     0076                     __pbssCOMMON:
   649     0076                     _contador:
   650     0076                     	ds	1
   651     0077                     _check:
   652     0077                     	ds	1
   653     0078                     _lecADC:
   654     0078                     	ds	1
   655     0079                     _temporal:
   656     0079                     	ds	1
   657                           
   658                           	psect	cstackCOMMON
   659     0070                     __pcstackCOMMON:
   660     0070                     ?_spiWrite:
   661     0070                     ??_spiWrite:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_setup:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_setupINTOSC:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_isr:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_main:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     spiWrite@dat:	
   677                           ; 1 bytes @ 0x0
   678                           
   679                           
   680                           ; 1 bytes @ 0x0
   681     0070                     	ds	1
   682     0071                     ??_isr:
   683                           
   684                           ; 1 bytes @ 0x1
   685     0071                     	ds	3
   686     0074                     ?_ADC_config:
   687     0074                     ??_setupINTOSC:	
   688                           ; 1 bytes @ 0x4
   689                           
   690     0074                     ?_ADC_read:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     ??_spiInit:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     spiInit@sType:	
   697                           ; 1 bytes @ 0x4
   698                           
   699     0074                     setupINTOSC@IRCF:	
   700                           ; 1 bytes @ 0x4
   701                           
   702     0074                     ADC_config@channel:	
   703                           ; 1 bytes @ 0x4
   704                           
   705     0074                     ADC_read@channel:	
   706                           ; 2 bytes @ 0x4
   707                           
   708                           
   709                           ; 2 bytes @ 0x4
   710     0074                     	ds	1
   711     0075                     ??_setup:
   712                           
   713                           ; 1 bytes @ 0x5
   714     0075                     	ds	1
   715                           
   716                           	psect	cstackBANK0
   717     0020                     __pcstackBANK0:
   718     0020                     ??_ADC_config:
   719     0020                     ??_ADC_read:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0020                     ?_spiInit:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0020                     spiInit@sDataSample:	
   726                           ; 1 bytes @ 0x0
   727                           
   728                           
   729                           ; 1 bytes @ 0x0
   730     0020                     	ds	1
   731     0021                     spiInit@sClockIdle:
   732                           
   733                           ; 1 bytes @ 0x1
   734     0021                     	ds	1
   735     0022                     spiInit@sTransmitEdge:
   736                           
   737                           ; 1 bytes @ 0x2
   738     0022                     	ds	1
   739     0023                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x3
   742     0023                     	ds	2
   743                           
   744                           	psect	maintext
   745     00F8                     __pmaintext:	
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 101 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : B00/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       2       0       0       0
   768 ;;      Totals:         0       2       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels required when called: 4
   771 ;; This function calls:
   772 ;;		_ADC_config
   773 ;;		_ADC_read
   774 ;;		_setup
   775 ;;		_setupINTOSC
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781     00F8                     _main:	
   782                           ;psect for function _main
   783                           
   784     00F8                     l1176:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   787                           
   788                           
   789                           ;main.c: 102:     setup();
   790     00F8  120A  118A  214B  120A  118A  	fcall	_setup
   791                           
   792                           ;main.c: 103:     ADC_config(0x01);
   793     00FD  3001               	movlw	1
   794     00FE  00F4               	movwf	ADC_config@channel
   795     00FF  3000               	movlw	0
   796     0100  00F5               	movwf	ADC_config@channel+1
   797     0101  120A  118A  20B8  120A  118A  	fcall	_ADC_config
   798                           
   799                           ;main.c: 104:     setupINTOSC(6);
   800     0106  3006               	movlw	6
   801     0107  120A  118A  2017  120A  118A  	fcall	_setupINTOSC
   802     010C                     l63:	
   803                           ;main.c: 108:     while(1){
   804                           
   805                           
   806                           ;main.c: 110:         ADC_read(0);
   807     010C  3000               	movlw	0
   808     010D  00F4               	movwf	ADC_read@channel
   809     010E  00F5               	movwf	ADC_read@channel+1
   810     010F  120A  118A  2076  120A  118A  	fcall	_ADC_read
   811     0114                     l1178:
   812                           
   813                           ;main.c: 112:         _delay((unsigned long)((20)*(4000000/4000.0)));
   814     0114  301A               	movlw	26
   815     0115  1283               	bcf	3,5	;RP0=0, select bank0
   816     0116  1303               	bcf	3,6	;RP1=0, select bank0
   817     0117  00A4               	movwf	??_main+1
   818     0118  30F7               	movlw	247
   819     0119  00A3               	movwf	??_main
   820     011A                     u517:
   821     011A  0BA3               	decfsz	??_main,f
   822     011B  291A               	goto	u517
   823     011C  0BA4               	decfsz	??_main+1,f
   824     011D  291A               	goto	u517
   825     011E  291F               	nop2
   826     011F  290C               	goto	l63
   827     0120  120A  118A  280C   	ljmp	start
   828     0123                     __end_of_main:
   829                           
   830                           	psect	text1
   831     0017                     __ptext1:	
   832 ;; *************** function _setupINTOSC *****************
   833 ;; Defined at:
   834 ;;		line 10 in file "oscilador.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  IRCF            1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  IRCF            1    4[COMMON] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         1       0       0       0       0
   852 ;;Total ram usage:        1 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 2
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862     0017                     _setupINTOSC:	
   863                           ;psect for function _setupINTOSC
   864                           
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   868                           ;setupINTOSC@IRCF stored from wreg
   869     0017  00F4               	movwf	setupINTOSC@IRCF
   870     0018                     l860:
   871                           
   872                           ;oscilador.c: 11:     if (IRCF == 7){
   873     0018  3007               	movlw	7
   874     0019  0674               	xorwf	setupINTOSC@IRCF,w
   875     001A  1D03               	btfss	3,2
   876     001B  281D               	goto	u91
   877     001C  281E               	goto	u90
   878     001D                     u91:
   879     001D  2822               	goto	l176
   880     001E                     u90:
   881     001E                     l862:
   882                           
   883                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   884     001E  3070               	movlw	112
   885     001F  1683               	bsf	3,5	;RP0=1, select bank1
   886     0020  1303               	bcf	3,6	;RP1=0, select bank1
   887     0021  048F               	iorwf	15,f	;volatile
   888     0022                     l176:	
   889                           ;oscilador.c: 13:     }
   890                           
   891                           
   892                           ;oscilador.c: 14:     if (IRCF == 6){
   893     0022  3006               	movlw	6
   894     0023  0674               	xorwf	setupINTOSC@IRCF,w
   895     0024  1D03               	btfss	3,2
   896     0025  2827               	goto	u101
   897     0026  2828               	goto	u100
   898     0027                     u101:
   899     0027  282E               	goto	l177
   900     0028                     u100:
   901     0028                     l864:
   902                           
   903                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   904     0028  1683               	bsf	3,5	;RP0=1, select bank1
   905     0029  1303               	bcf	3,6	;RP1=0, select bank1
   906     002A  080F               	movf	15,w	;volatile
   907     002B  398F               	andlw	-113
   908     002C  3860               	iorlw	96
   909     002D  008F               	movwf	15	;volatile
   910     002E                     l177:	
   911                           ;oscilador.c: 16:     }
   912                           
   913                           
   914                           ;oscilador.c: 17:     if (IRCF == 5){
   915     002E  3005               	movlw	5
   916     002F  0674               	xorwf	setupINTOSC@IRCF,w
   917     0030  1D03               	btfss	3,2
   918     0031  2833               	goto	u111
   919     0032  2834               	goto	u110
   920     0033                     u111:
   921     0033  283A               	goto	l178
   922     0034                     u110:
   923     0034                     l866:
   924                           
   925                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   926     0034  1683               	bsf	3,5	;RP0=1, select bank1
   927     0035  1303               	bcf	3,6	;RP1=0, select bank1
   928     0036  080F               	movf	15,w	;volatile
   929     0037  398F               	andlw	-113
   930     0038  3850               	iorlw	80
   931     0039  008F               	movwf	15	;volatile
   932     003A                     l178:	
   933                           ;oscilador.c: 19:     }
   934                           
   935                           
   936                           ;oscilador.c: 20:     if (IRCF == 4){
   937     003A  3004               	movlw	4
   938     003B  0674               	xorwf	setupINTOSC@IRCF,w
   939     003C  1D03               	btfss	3,2
   940     003D  283F               	goto	u121
   941     003E  2840               	goto	u120
   942     003F                     u121:
   943     003F  2846               	goto	l179
   944     0040                     u120:
   945     0040                     l868:
   946                           
   947                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   948     0040  1683               	bsf	3,5	;RP0=1, select bank1
   949     0041  1303               	bcf	3,6	;RP1=0, select bank1
   950     0042  080F               	movf	15,w	;volatile
   951     0043  398F               	andlw	-113
   952     0044  3840               	iorlw	64
   953     0045  008F               	movwf	15	;volatile
   954     0046                     l179:	
   955                           ;oscilador.c: 22:     }
   956                           
   957                           
   958                           ;oscilador.c: 23:     if (IRCF == 3){
   959     0046  3003               	movlw	3
   960     0047  0674               	xorwf	setupINTOSC@IRCF,w
   961     0048  1D03               	btfss	3,2
   962     0049  284B               	goto	u131
   963     004A  284C               	goto	u130
   964     004B                     u131:
   965     004B  2852               	goto	l180
   966     004C                     u130:
   967     004C                     l870:
   968                           
   969                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   970     004C  1683               	bsf	3,5	;RP0=1, select bank1
   971     004D  1303               	bcf	3,6	;RP1=0, select bank1
   972     004E  080F               	movf	15,w	;volatile
   973     004F  398F               	andlw	-113
   974     0050  3830               	iorlw	48
   975     0051  008F               	movwf	15	;volatile
   976     0052                     l180:	
   977                           ;oscilador.c: 25:     }
   978                           
   979                           
   980                           ;oscilador.c: 26:     if (IRCF == 2){
   981     0052  3002               	movlw	2
   982     0053  0674               	xorwf	setupINTOSC@IRCF,w
   983     0054  1D03               	btfss	3,2
   984     0055  2857               	goto	u141
   985     0056  2858               	goto	u140
   986     0057                     u141:
   987     0057  285E               	goto	l181
   988     0058                     u140:
   989     0058                     l872:
   990                           
   991                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   992     0058  1683               	bsf	3,5	;RP0=1, select bank1
   993     0059  1303               	bcf	3,6	;RP1=0, select bank1
   994     005A  080F               	movf	15,w	;volatile
   995     005B  398F               	andlw	-113
   996     005C  3820               	iorlw	32
   997     005D  008F               	movwf	15	;volatile
   998     005E                     l181:	
   999                           ;oscilador.c: 28:     }
  1000                           
  1001                           
  1002                           ;oscilador.c: 29:     if (IRCF == 1){
  1003     005E  0374               	decf	setupINTOSC@IRCF,w
  1004     005F  1D03               	btfss	3,2
  1005     0060  2862               	goto	u151
  1006     0061  2863               	goto	u150
  1007     0062                     u151:
  1008     0062  2869               	goto	l182
  1009     0063                     u150:
  1010     0063                     l874:
  1011                           
  1012                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1013     0063  1683               	bsf	3,5	;RP0=1, select bank1
  1014     0064  1303               	bcf	3,6	;RP1=0, select bank1
  1015     0065  080F               	movf	15,w	;volatile
  1016     0066  398F               	andlw	-113
  1017     0067  3810               	iorlw	16
  1018     0068  008F               	movwf	15	;volatile
  1019     0069                     l182:	
  1020                           ;oscilador.c: 31:     }
  1021                           
  1022                           
  1023                           ;oscilador.c: 32:     if (IRCF == 0){
  1024     0069  0874               	movf	setupINTOSC@IRCF,w
  1025     006A  1D03               	btfss	3,2
  1026     006B  286D               	goto	u161
  1027     006C  286E               	goto	u160
  1028     006D                     u161:
  1029     006D  2872               	goto	l878
  1030     006E                     u160:
  1031     006E                     l876:
  1032                           
  1033                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1034     006E  308F               	movlw	-113
  1035     006F  1683               	bsf	3,5	;RP0=1, select bank1
  1036     0070  1303               	bcf	3,6	;RP1=0, select bank1
  1037     0071  058F               	andwf	15,f	;volatile
  1038     0072                     l878:
  1039                           
  1040                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1041     0072  1683               	bsf	3,5	;RP0=1, select bank1
  1042     0073  1303               	bcf	3,6	;RP1=0, select bank1
  1043     0074  140F               	bsf	15,0	;volatile
  1044     0075                     l184:
  1045     0075  0008               	return
  1046     0076                     __end_of_setupINTOSC:
  1047                           
  1048                           	psect	text2
  1049     014B                     __ptext2:	
  1050 ;; *************** function _setup *****************
  1051 ;; Defined at:
  1052 ;;		line 119 in file "main.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 3
  1073 ;; This function calls:
  1074 ;;		_spiInit
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080     014B                     _setup:	
  1081                           ;psect for function _setup
  1082                           
  1083     014B                     l1120:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1086                           
  1087                           
  1088                           ;main.c: 120:     ANSEL = 0;
  1089     014B  1683               	bsf	3,5	;RP0=1, select bank3
  1090     014C  1703               	bsf	3,6	;RP1=1, select bank3
  1091     014D  0188               	clrf	8	;volatile
  1092                           
  1093                           ;main.c: 121:     ANSELH = 0;
  1094     014E  0189               	clrf	9	;volatile
  1095     014F                     l1122:
  1096                           
  1097                           ;main.c: 124:     TRISB = 0b00000011;
  1098     014F  3003               	movlw	3
  1099     0150  1683               	bsf	3,5	;RP0=1, select bank1
  1100     0151  1303               	bcf	3,6	;RP1=0, select bank1
  1101     0152  0086               	movwf	6	;volatile
  1102     0153                     l1124:
  1103                           
  1104                           ;main.c: 125:     TRISD = 0;
  1105     0153  0188               	clrf	8	;volatile
  1106     0154                     l1126:
  1107                           
  1108                           ;main.c: 127:     PORTB = 0;
  1109     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0156  0186               	clrf	6	;volatile
  1112     0157                     l1128:
  1113                           
  1114                           ;main.c: 128:     PORTD = 0;
  1115     0157  0188               	clrf	8	;volatile
  1116     0158                     l1130:
  1117                           
  1118                           ;main.c: 133:     INTCONbits.GIE = 1;
  1119     0158  178B               	bsf	11,7	;volatile
  1120     0159                     l1132:
  1121                           
  1122                           ;main.c: 142:     INTCONbits.PEIE = 1;
  1123     0159  170B               	bsf	11,6	;volatile
  1124     015A                     l1134:
  1125                           
  1126                           ;main.c: 143:     PIR1bits.SSPIF = 0;
  1127     015A  118C               	bcf	12,3	;volatile
  1128     015B                     l1136:
  1129                           
  1130                           ;main.c: 144:     PIE1bits.SSPIE = 1;
  1131     015B  1683               	bsf	3,5	;RP0=1, select bank1
  1132     015C  1303               	bcf	3,6	;RP1=0, select bank1
  1133     015D  158C               	bsf	12,3	;volatile
  1134     015E                     l1138:
  1135                           
  1136                           ;main.c: 145:     TRISAbits.TRISA5 = 1;
  1137     015E  1685               	bsf	5,5	;volatile
  1138     015F                     l1140:
  1139                           
  1140                           ;main.c: 146:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1141     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1142     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1143     0161  01A0               	clrf	spiInit@sDataSample
  1144     0162  01A1               	clrf	spiInit@sClockIdle
  1145     0163  01A2               	clrf	spiInit@sTransmitEdge
  1146     0164  3024               	movlw	36
  1147     0165  120A  118A  216B  120A  118A  	fcall	_spiInit
  1148     016A                     l69:
  1149     016A  0008               	return
  1150     016B                     __end_of_setup:
  1151                           
  1152                           	psect	text3
  1153     016B                     __ptext3:	
  1154 ;; *************** function _spiInit *****************
  1155 ;; Defined at:
  1156 ;;		line 12 in file "SPI.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  sType           1    wreg     enum E1292
  1159 ;;  sDataSample     1    0[BANK0 ] enum E1300
  1160 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  1161 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  sType           1    4[COMMON] enum E1292
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       3       0       0       0
  1174 ;;      Locals:         1       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         1       3       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 2
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_setup
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     016B                     _spiInit:	
  1188                           ;psect for function _spiInit
  1189                           
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1193                           ;spiInit@sType stored from wreg
  1194     016B  00F4               	movwf	spiInit@sType
  1195     016C                     l1110:
  1196                           
  1197                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1198     016C  1683               	bsf	3,5	;RP0=1, select bank1
  1199     016D  1303               	bcf	3,6	;RP1=0, select bank1
  1200     016E  1287               	bcf	7,5	;volatile
  1201                           
  1202                           ;SPI.c: 15:     if(sType & 0b00000100)
  1203     016F  1D74               	btfss	spiInit@sType,2
  1204     0170  2972               	goto	u441
  1205     0171  2973               	goto	u440
  1206     0172                     u441:
  1207     0172  297B               	goto	l1116
  1208     0173                     u440:
  1209     0173                     l1112:
  1210                           
  1211                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1212     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1213     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1214     0175  0822               	movf	spiInit@sTransmitEdge,w
  1215     0176  1683               	bsf	3,5	;RP0=1, select bank1
  1216     0177  1303               	bcf	3,6	;RP1=0, select bank1
  1217     0178  0094               	movwf	20	;volatile
  1218     0179                     l1114:
  1219                           
  1220                           ;SPI.c: 18:         TRISC3 = 1;
  1221     0179  1587               	bsf	7,3	;volatile
  1222                           
  1223                           ;SPI.c: 19:     }
  1224     017A  2983               	goto	l85
  1225     017B                     l1116:
  1226                           
  1227                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1228     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1229     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1230     017D  0820               	movf	spiInit@sDataSample,w
  1231     017E  0422               	iorwf	spiInit@sTransmitEdge,w
  1232     017F  1683               	bsf	3,5	;RP0=1, select bank1
  1233     0180  1303               	bcf	3,6	;RP1=0, select bank1
  1234     0181  0094               	movwf	20	;volatile
  1235     0182                     l1118:
  1236                           
  1237                           ;SPI.c: 23:         TRISC3 = 0;
  1238     0182  1187               	bcf	7,3	;volatile
  1239     0183                     l85:	
  1240                           ;SPI.c: 24:     }
  1241                           
  1242                           
  1243                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1244     0183  0874               	movf	spiInit@sType,w
  1245     0184  1283               	bcf	3,5	;RP0=0, select bank0
  1246     0185  1303               	bcf	3,6	;RP1=0, select bank0
  1247     0186  0421               	iorwf	spiInit@sClockIdle,w
  1248     0187  0094               	movwf	20	;volatile
  1249     0188                     l86:
  1250     0188  0008               	return
  1251     0189                     __end_of_spiInit:
  1252                           
  1253                           	psect	text4
  1254     0076                     __ptext4:	
  1255 ;; *************** function _ADC_read *****************
  1256 ;; Defined at:
  1257 ;;		line 44 in file "setupADC.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  channel         2    4[COMMON] int 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         2       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          0       1       0       0       0
  1274 ;;      Totals:         2       1       0       0       0
  1275 ;;Total ram usage:        3 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 2
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285     0076                     _ADC_read:	
  1286                           ;psect for function _ADC_read
  1287                           
  1288     0076                     l1152:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1291                           
  1292                           
  1293                           ;setupADC.c: 45:     if(channel ==0){
  1294     0076  0874               	movf	ADC_read@channel,w
  1295     0077  0475               	iorwf	ADC_read@channel+1,w
  1296     0078  1D03               	btfss	3,2
  1297     0079  287B               	goto	u481
  1298     007A  287C               	goto	u480
  1299     007B                     u481:
  1300     007B  288A               	goto	l1160
  1301     007C                     u480:
  1302     007C                     l1154:
  1303                           
  1304                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  1305     007C  30C3               	movlw	-61
  1306     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1307     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1308     007F  059F               	andwf	31,f	;volatile
  1309     0080                     l1156:
  1310                           
  1311                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1312     0080  3007               	movlw	7
  1313     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1314     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1315     0083  00A0               	movwf	??_ADC_read
  1316     0084                     u527:
  1317     0084  0BA0               	decfsz	??_ADC_read,f
  1318     0085  2884               	goto	u527
  1319     0086  0000               	nop
  1320     0087                     l1158:
  1321                           
  1322                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  1323     0087  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0088  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0089  149F               	bsf	31,1	;volatile
  1326     008A                     l1160:
  1327                           
  1328                           ;setupADC.c: 50:     if(channel ==1){
  1329     008A  0374               	decf	ADC_read@channel,w
  1330     008B  0475               	iorwf	ADC_read@channel+1,w
  1331     008C  1D03               	btfss	3,2
  1332     008D  288F               	goto	u491
  1333     008E  2890               	goto	u490
  1334     008F                     u491:
  1335     008F  28A0               	goto	l1168
  1336     0090                     u490:
  1337     0090                     l1162:
  1338                           
  1339                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  1340     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0092  081F               	movf	31,w	;volatile
  1343     0093  39C3               	andlw	-61
  1344     0094  3804               	iorlw	4
  1345     0095  009F               	movwf	31	;volatile
  1346     0096                     l1164:
  1347                           
  1348                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1349     0096  3007               	movlw	7
  1350     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1351     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1352     0099  00A0               	movwf	??_ADC_read
  1353     009A                     u537:
  1354     009A  0BA0               	decfsz	??_ADC_read,f
  1355     009B  289A               	goto	u537
  1356     009C  0000               	nop
  1357     009D                     l1166:
  1358                           
  1359                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  1360     009D  1283               	bcf	3,5	;RP0=0, select bank0
  1361     009E  1303               	bcf	3,6	;RP1=0, select bank0
  1362     009F  149F               	bsf	31,1	;volatile
  1363     00A0                     l1168:
  1364                           
  1365                           ;setupADC.c: 55:     if(channel ==2){
  1366     00A0  3002               	movlw	2
  1367     00A1  0674               	xorwf	ADC_read@channel,w
  1368     00A2  0475               	iorwf	ADC_read@channel+1,w
  1369     00A3  1D03               	btfss	3,2
  1370     00A4  28A6               	goto	u501
  1371     00A5  28A7               	goto	u500
  1372     00A6                     u501:
  1373     00A6  28B7               	goto	l214
  1374     00A7                     u500:
  1375     00A7                     l1170:
  1376                           
  1377                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  1378     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1379     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1380     00A9  081F               	movf	31,w	;volatile
  1381     00AA  39C3               	andlw	-61
  1382     00AB  3808               	iorlw	8
  1383     00AC  009F               	movwf	31	;volatile
  1384     00AD                     l1172:
  1385                           
  1386                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1387     00AD  3007               	movlw	7
  1388     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1389     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1390     00B0  00A0               	movwf	??_ADC_read
  1391     00B1                     u547:
  1392     00B1  0BA0               	decfsz	??_ADC_read,f
  1393     00B2  28B1               	goto	u547
  1394     00B3  0000               	nop
  1395     00B4                     l1174:
  1396                           
  1397                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  1398     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1399     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1400     00B6  149F               	bsf	31,1	;volatile
  1401     00B7                     l214:
  1402     00B7  0008               	return
  1403     00B8                     __end_of_ADC_read:
  1404                           
  1405                           	psect	text5
  1406     00B8                     __ptext5:	
  1407 ;; *************** function _ADC_config *****************
  1408 ;; Defined at:
  1409 ;;		line 11 in file "setupADC.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  channel         2    4[COMMON] int 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         2       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       1       0       0       0
  1426 ;;      Totals:         2       1       0       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 2
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437     00B8                     _ADC_config:	
  1438                           ;psect for function _ADC_config
  1439                           
  1440     00B8                     l1142:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _ADC_config: [wreg]
  1443                           
  1444                           
  1445                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1446     00B8  1C74               	btfss	ADC_config@channel,0
  1447     00B9  28BB               	goto	u451
  1448     00BA  28BC               	goto	u450
  1449     00BB                     u451:
  1450     00BB  28C5               	goto	l205
  1451     00BC                     u450:
  1452     00BC                     l1144:
  1453                           
  1454                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1455     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1456     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1457     00BE  1005               	bcf	5,0	;volatile
  1458                           
  1459                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1460     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1461     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1462     00C1  1405               	bsf	5,0	;volatile
  1463                           
  1464                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1465     00C2  1683               	bsf	3,5	;RP0=1, select bank3
  1466     00C3  1703               	bsf	3,6	;RP1=1, select bank3
  1467     00C4  1408               	bsf	8,0	;volatile
  1468     00C5                     l205:	
  1469                           ;setupADC.c: 16:     }
  1470                           
  1471                           
  1472                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1473     00C5  1CF4               	btfss	ADC_config@channel,1
  1474     00C6  28C8               	goto	u461
  1475     00C7  28C9               	goto	u460
  1476     00C8                     u461:
  1477     00C8  28D2               	goto	l206
  1478     00C9                     u460:
  1479     00C9                     l1146:
  1480                           
  1481                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1482     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1483     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1484     00CB  1085               	bcf	5,1	;volatile
  1485                           
  1486                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1487     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1488     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1489     00CE  1485               	bsf	5,1	;volatile
  1490                           
  1491                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1492     00CF  1683               	bsf	3,5	;RP0=1, select bank3
  1493     00D0  1703               	bsf	3,6	;RP1=1, select bank3
  1494     00D1  1488               	bsf	8,1	;volatile
  1495     00D2                     l206:	
  1496                           ;setupADC.c: 22:     }
  1497                           
  1498                           
  1499                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1500     00D2  1D74               	btfss	ADC_config@channel,2
  1501     00D3  28D5               	goto	u471
  1502     00D4  28D6               	goto	u470
  1503     00D5                     u471:
  1504     00D5  28DF               	goto	l207
  1505     00D6                     u470:
  1506     00D6                     l1148:
  1507                           
  1508                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1509     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1510     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1511     00D8  1105               	bcf	5,2	;volatile
  1512                           
  1513                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1514     00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1515     00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1516     00DB  1505               	bsf	5,2	;volatile
  1517                           
  1518                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1519     00DC  1683               	bsf	3,5	;RP0=1, select bank3
  1520     00DD  1703               	bsf	3,6	;RP1=1, select bank3
  1521     00DE  1508               	bsf	8,2	;volatile
  1522     00DF                     l207:	
  1523                           ;setupADC.c: 27:     }
  1524                           
  1525                           
  1526                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  1527     00DF  170B               	bsf	11,6	;volatile
  1528                           
  1529                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  1530     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1531     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1532     00E2  170C               	bsf	12,6	;volatile
  1533                           
  1534                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  1535     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1536     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1537     00E5  130C               	bcf	12,6	;volatile
  1538                           
  1539                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  1540     00E6  139F               	bcf	31,7	;volatile
  1541                           
  1542                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  1543     00E7  171F               	bsf	31,6	;volatile
  1544                           
  1545                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  1546     00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1547     00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1548     00EA  129F               	bcf	31,5	;volatile
  1549                           
  1550                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  1551     00EB  121F               	bcf	31,4	;volatile
  1552                           
  1553                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  1554     00EC  139F               	bcf	31,7	;volatile
  1555                           
  1556                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  1557     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1558     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1559     00EF  141F               	bsf	31,0	;volatile
  1560     00F0                     l1150:
  1561                           
  1562                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  1563     00F0  3007               	movlw	7
  1564     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1565     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1566     00F3  00A0               	movwf	??_ADC_config
  1567     00F4                     u557:
  1568     00F4  0BA0               	decfsz	??_ADC_config,f
  1569     00F5  28F4               	goto	u557
  1570     00F6  0000               	nop
  1571     00F7                     l208:
  1572     00F7  0008               	return
  1573     00F8                     __end_of_ADC_config:
  1574                           
  1575                           	psect	text6
  1576     0123                     __ptext6:	
  1577 ;; *************** function _isr *****************
  1578 ;; Defined at:
  1579 ;;		line 50 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0
  1595 ;;      Temps:          3       0       0       0       0
  1596 ;;      Totals:         3       0       0       0       0
  1597 ;;Total ram usage:        3 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 1
  1600 ;; This function calls:
  1601 ;;		_spiWrite
  1602 ;; This function is called by:
  1603 ;;		Interrupt level 1
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607     0123                     _isr:	
  1608                           ;psect for function _isr
  1609                           
  1610     0123                     i1l938:
  1611                           
  1612                           ;main.c: 74:     if(PIR1bits.ADIF){
  1613     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1614     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1615     0125  1F0C               	btfss	12,6	;volatile
  1616     0126  2928               	goto	u22_21
  1617     0127  2929               	goto	u22_20
  1618     0128                     u22_21:
  1619     0128  2937               	goto	i1l946
  1620     0129                     u22_20:
  1621     0129                     i1l940:
  1622                           
  1623                           ;main.c: 75:         if(ADCON0bits.CHS == 0){
  1624     0129  0C1F               	rrf	31,w	;volatile
  1625     012A  00F1               	movwf	??_isr
  1626     012B  0C71               	rrf	??_isr,w
  1627     012C  390F               	andlw	15
  1628     012D  3A00               	xorlw	0
  1629     012E  1D03               	skipz
  1630     012F  2931               	goto	u23_21
  1631     0130  2932               	goto	u23_20
  1632     0131                     u23_21:
  1633     0131  2936               	goto	i1l944
  1634     0132                     u23_20:
  1635     0132                     i1l942:
  1636                           
  1637                           ;main.c: 76:             lecADC = ADRESH;
  1638     0132  081E               	movf	30,w	;volatile
  1639     0133  00F8               	movwf	_lecADC
  1640                           
  1641                           ;main.c: 77:             PORTD = ADRESH;
  1642     0134  081E               	movf	30,w	;volatile
  1643     0135  0088               	movwf	8	;volatile
  1644     0136                     i1l944:
  1645                           
  1646                           ;main.c: 79:         ADIF = 0;
  1647     0136  130C               	bcf	12,6	;volatile
  1648     0137                     i1l946:
  1649                           
  1650                           ;main.c: 93:     if(SSPIF == 1){
  1651     0137  1D8C               	btfss	12,3	;volatile
  1652     0138  293A               	goto	u24_21
  1653     0139  293B               	goto	u24_20
  1654     013A                     u24_21:
  1655     013A  2944               	goto	i1l58
  1656     013B                     u24_20:
  1657     013B                     i1l948:
  1658                           
  1659                           ;main.c: 94:         spiWrite(lecADC);
  1660     013B  0878               	movf	_lecADC,w
  1661     013C  120A  118A  2189  120A  118A  	fcall	_spiWrite
  1662     0141                     i1l950:
  1663                           
  1664                           ;main.c: 95:         SSPIF = 0;
  1665     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1666     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0143  118C               	bcf	12,3	;volatile
  1668     0144                     i1l58:
  1669     0144  0873               	movf	??_isr+2,w
  1670     0145  008A               	movwf	10
  1671     0146  0E72               	swapf	??_isr+1,w
  1672     0147  0083               	movwf	3
  1673     0148  0EFE               	swapf	btemp,f
  1674     0149  0E7E               	swapf	btemp,w
  1675     014A  0009               	retfie
  1676     014B                     __end_of_isr:
  1677                           
  1678                           	psect	intentry
  1679     0004                     __pintentry:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1682                           
  1683     0004                     interrupt_function:
  1684     007E                     saved_w	set	btemp
  1685     0004  00FE               	movwf	btemp
  1686     0005  0E03               	swapf	3,w
  1687     0006  00F2               	movwf	??_isr+1
  1688     0007  080A               	movf	10,w
  1689     0008  00F3               	movwf	??_isr+2
  1690     0009  120A  118A  2923   	ljmp	_isr
  1691                           
  1692                           	psect	text7
  1693     0189                     __ptext7:	
  1694 ;; *************** function _spiWrite *****************
  1695 ;; Defined at:
  1696 ;;		line 34 in file "SPI.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  dat             1    wreg     unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  dat             1    0[COMMON] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         1       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         1       0       0       0       0
  1714 ;;Total ram usage:        1 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_isr
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723     0189                     _spiWrite:	
  1724                           ;psect for function _spiWrite
  1725                           
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _spiWrite: [wreg]
  1729                           ;spiWrite@dat stored from wreg
  1730     0189  00F0               	movwf	spiWrite@dat
  1731     018A                     i1l826:
  1732                           
  1733                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1734     018A  0870               	movf	spiWrite@dat,w
  1735     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1736     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1737     018D  0093               	movwf	19	;volatile
  1738     018E                     i1l95:
  1739     018E  0008               	return
  1740     018F                     __end_of_spiWrite:
  1741     007E                     btemp	set	126	;btemp
  1742     007E                     wtemp0	set	126
  1743                           
  1744                           	psect	idloc
  1745                           
  1746                           ;Config register IDLOC0 @ 0x2000
  1747                           ;	unspecified, using default values
  1748     2000                     	org	8192
  1749     2000  3FFF               	dw	16383
  1750                           
  1751                           ;Config register IDLOC1 @ 0x2001
  1752                           ;	unspecified, using default values
  1753     2001                     	org	8193
  1754     2001  3FFF               	dw	16383
  1755                           
  1756                           ;Config register IDLOC2 @ 0x2002
  1757                           ;	unspecified, using default values
  1758     2002                     	org	8194
  1759     2002  3FFF               	dw	16383
  1760                           
  1761                           ;Config register IDLOC3 @ 0x2003
  1762                           ;	unspecified, using default values
  1763     2003                     	org	8195
  1764     2003  3FFF               	dw	16383
  1765                           
  1766                           	psect	config
  1767                           
  1768                           ;Config register CONFIG1 @ 0x2007
  1769                           ;	Oscillator Selection bits
  1770                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1771                           ;	Watchdog Timer Enable bit
  1772                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1773                           ;	Power-up Timer Enable bit
  1774                           ;	PWRTE = OFF, PWRT disabled
  1775                           ;	RE3/MCLR pin function select bit
  1776                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1777                           ;	Code Protection bit
  1778                           ;	CP = OFF, Program memory code protection is disabled
  1779                           ;	Data Code Protection bit
  1780                           ;	CPD = OFF, Data memory code protection is disabled
  1781                           ;	Brown Out Reset Selection bits
  1782                           ;	BOREN = OFF, BOR disabled
  1783                           ;	Internal External Switchover bit
  1784                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1785                           ;	Fail-Safe Clock Monitor Enabled bit
  1786                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1787                           ;	Low Voltage Programming Enable bit
  1788                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1789                           ;	In-Circuit Debugger Mode bit
  1790                           ;	DEBUG = 0x1, unprogrammed default
  1791     2007                     	org	8199
  1792     2007  20D6               	dw	8406
  1793                           
  1794                           ;Config register CONFIG2 @ 0x2008
  1795                           ;	Brown-out Reset Selection bit
  1796                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1797                           ;	Flash Program Memory Self Write Enable bits
  1798                           ;	WRT = OFF, Write protection off
  1799     2008                     	org	8200
  1800     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_config
    _main->_ADC_read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     942
                                              3 BANK0      2     2      0
                         _ADC_config
                           _ADC_read
                              _setup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     183
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     183
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _setup
     _spiInit
   _setupINTOSC

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:19:51 2023

            _SSPSTATbits 0094                       l63 010C                       l85 0183  
                     l69 016A                       l86 0188                       u90 001E  
                     u91 001D                      l205 00C5                      l206 00D2  
                    l214 00B7                      l207 00DF                      l208 00F7  
                    l180 0052                      l181 005E                      l182 0069  
                    l184 0075                      l176 0022                      l177 002E  
                    l178 003A                      l179 0046                      l860 0018  
                    l870 004C                      l862 001E                      l872 0058  
                    l864 0028                      l874 0063                      l866 0034  
                    l876 006E                      l868 0040                      l878 0072  
                    u100 0028                      u101 0027                      u110 0034  
                    u111 0033                      u120 0040                      u121 003F  
                    u130 004C                      u131 004B                      u140 0058  
                    u141 0057                      u150 0063                      u151 0062  
                    u160 006E                      u161 006D                      u500 00A7  
                    u501 00A6                      u440 0173                      u441 0172  
                    u450 00BC                      u451 00BB                      u460 00C9  
                    u461 00C8                      u517 011A                      u470 00D6  
                    u471 00D5                      u527 0084                      u480 007C  
                    u537 009A                      u481 007B                      u490 0090  
                    u547 00B1                      u491 008F                      u557 00F4  
                    _isr 0123                     l1110 016C                     l1112 0173  
                   l1120 014B                     l1114 0179                     l1130 0158  
                   l1122 014F                     l1116 017B                     l1140 015F  
                   l1132 0159                     l1124 0153                     l1150 00F0  
                   l1142 00B8                     l1118 0182                     l1134 015A  
                   l1126 0154                     l1144 00BC                     l1160 008A  
                   l1152 0076                     l1136 015B                     l1128 0157  
                   l1146 00C9                     l1170 00A7                     l1162 0090  
                   l1154 007C                     l1138 015E                     l1148 00D6  
                   l1172 00AD                     l1164 0096                     l1156 0080  
                   l1174 00B4                     l1166 009D                     l1158 0087  
                   l1168 00A0                     l1176 00F8                     l1178 0114  
                   _ADIF 0066                     ?_isr 0070                     i1l58 0144  
                   i1l95 018E                     _main 00F8                     btemp 007E  
                   start 000C         __end_of_ADC_read 00B8                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l826 018A  
                  i1l940 0129                    i1l950 0141                    i1l942 0132  
                  i1l944 0136                    i1l946 0137                    i1l938 0123  
                  i1l948 013B                    u22_20 0129                    u22_21 0128  
                  u23_20 0132                    u23_21 0131                    u24_20 013B  
                  u24_21 013A                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _check 0077                    _setup 014B                    pclath 000A  
        __end_of_spiInit 0189                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0123                   ??_main 0023  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013             ??_ADC_config 0020                   _lecADC 0078  
           ?_setupINTOSC 0070                   saved_w 007E         __end_of_spiWrite 018F  
              ??_spiInit 0074                ?_ADC_read 0074       __end_of_ADC_config 00F8  
__end_of__initialization 0013           __pcstackCOMMON 0070            __end_of_setup 016B  
        ADC_read@channel 0074               ??_ADC_read 0020                  ??_setup 0075  
             __pmaintext 00F8               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0017  
                __ptext2 014B                  __ptext3 016B                  __ptext4 0076  
                __ptext5 00B8                  __ptext6 0123                  __ptext7 0189  
                _spiInit 016B     end_of_initialization 0013               ??_spiWrite 0070  
              _PORTAbits 0005                _PORTDbits 0008                _TRISAbits 0085  
              _TRISDbits 0088              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 014B        ADC_config@channel 0074              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          setupINTOSC@IRCF 0074  
               ?_spiInit 0020                 _ADC_read 0076     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ??_setupINTOSC 0074               _ADC_config 00B8      __end_of_setupINTOSC 0076  
               _contador 0076                 _temporal 0079                 _spiWrite 0189  
           spiInit@sType 0074        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              ?_ADC_config 0074  
            _setupINTOSC 0017  
